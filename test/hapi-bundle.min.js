// This file was created using @hapi/hapi@18 and bundled using browserify.
//   $ browserify --node server.js > hapi-bundle.js
// It contains the whole @hapi/hapi package and its dependencies
// ------------------------- //
// Hapi@18.4.1 LICENSE.md file:
// Copyright (c) 2011-2019, Sideway Inc, and project contributors   
// Copyright (c) 2011-2014, Walmart   
// Copyright (c) 2011, Yahoo Inc.   
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
// * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
// * The names of any contributors may not be used to endorse or promote products derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS OFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Boom=require("@hapi/boom");const internals={};exports.selection=function(header,preferences,options){const selections=exports.selections(header,preferences,options);return selections.length?selections[0]:""};exports.selections=function(header,preferences,options){Hoek.assert(!preferences||Array.isArray(preferences),"Preferences must be an array");return internals.parse(header||"",preferences,options)};internals.parse=function(raw,preferences,options){const header=raw.replace(/[ \t]/g,"");const lowers=new Map;if(preferences){for(let i=0;i<preferences.length;++i){const preference=preferences[i];lowers.set(preference.toLowerCase(),{orig:preference,pos:i})}}const parts=header.split(",");const selections=[];const map=new Set;for(let i=0;i<parts.length;++i){const part=parts[i];if(!part){continue}const params=part.split(";");if(params.length>2){throw Boom.badRequest(`Invalid ${options.type} header`)}let token=params[0].toLowerCase();if(!token){throw Boom.badRequest(`Invalid ${options.type} header`)}if(options.equivalents&&options.equivalents.has(token)){token=options.equivalents.get(token)}const selection={token:token,pos:i,q:1,specificity:options.specificity?token.split("-"):null};if(preferences&&lowers.has(token)){selection.pref=lowers.get(token).pos}map.add(selection.token);if(params.length===2){const q=params[1];const[key,value]=q.split("=");if(!value||key!=="q"&&key!=="Q"){throw Boom.badRequest(`Invalid ${options.type} header`)}const score=parseFloat(value);if(score===0){continue}if(Number.isFinite(score)&&score<=1&&score>=.001){selection.q=score}}selections.push(selection)}selections.sort(internals.sort);const values=selections.map(selection=>selection.token);if(options.default&&!map.has(options.default)){values.push(options.default)}if(!preferences||!preferences.length){return values}const preferred=[];for(const selection of values){if(selection==="*"){for(const[preference,value]of lowers){if(!map.has(preference)){preferred.push(value.orig)}}}else{const lower=selection.toLowerCase();if(lowers.has(lower)){preferred.push(lowers.get(lower).orig)}}}return preferred};internals.sort=function(a,b){const aFirst=-1;const bFirst=1;if(b.q!==a.q){return b.q-a.q}if(b.pref!==a.pref){if(a.pref===undefined){return bFirst}if(b.pref===undefined){return aFirst}return a.pref-b.pref}if(a.specificity&&a.specificity[0]===b.specificity[0]&&a.specificity.length!==b.specificity.length){return b.specificity.length-a.specificity.length}return a.pos-b.pos}},{"@hapi/boom":12,"@hapi/hoek":128}],2:[function(require,module,exports){"use strict";const Header=require("./header");const Media=require("./media");const internals={options:{charset:{type:"accept-charset"},encoding:{type:"accept-encoding",default:"identity",equivalents:new Map([["x-compress","compress"],["x-gzip","gzip"]])},language:{type:"accept-language",specificity:true}}};for(const type in internals.options){exports[type]=(header,preferences)=>Header.selection(header,preferences,internals.options[type]);exports[`${type}s`]=(header,preferences)=>Header.selections(header,preferences,internals.options[type])}exports.mediaType=(header,preferences)=>Media.selection(header,preferences);exports.mediaTypes=(header,preferences)=>Media.selections(header,preferences);exports.parseAll=function(requestHeaders){return{charsets:exports.charsets(requestHeaders["accept-charset"]),encodings:exports.encodings(requestHeaders["accept-encoding"]),languages:exports.languages(requestHeaders["accept-language"]),mediaTypes:exports.mediaTypes(requestHeaders.accept)}}},{"./header":1,"./media":3}],3:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Boom=require("@hapi/boom");const internals={};exports.selection=function(header,preferences){const selections=exports.selections(header,preferences);return selections.length?selections[0]:""};exports.selections=function(header,preferences){Hoek.assert(!preferences||Array.isArray(preferences),"Preferences must be an array");return internals.parse(header,preferences)};internals.validMediaRx=/^(?:\*\/\*)|(?:[\w\!#\$%&'\*\+\-\.\^`\|~]+\/\*)|(?:[\w\!#\$%&'\*\+\-\.\^`\|~]+\/[\w\!#\$%&'\*\+\-\.\^`\|~]+)$/;internals.parse=function(raw,preferences){const{header,quoted}=internals.normalize(raw);const parts=header.split(",");const selections=[];const map={};for(let i=0;i<parts.length;++i){const part=parts[i];if(!part){continue}const pairs=part.split(";");const token=pairs.shift().toLowerCase();if(!internals.validMediaRx.test(token)){continue}const selection={token:token,params:{},exts:{},pos:i};let target="params";for(const pair of pairs){const kv=pair.split("=");if(kv.length!==2||!kv[1]){throw Boom.badRequest(`Invalid accept header`)}const key=kv[0];let value=kv[1];if(key==="q"||key==="Q"){target="exts";value=parseFloat(value);if(!Number.isFinite(value)||value>1||value<.001&&value!==0){value=1}selection.q=value}else{if(value[0]==='"'){value=`"${quoted[value]}"`}selection[target][kv[0]]=value}}const params=Object.keys(selection.params);selection.original=[""].concat(params.map(key=>`${key}=${selection.params[key]}`)).join(";");selection.specificity=params.length;if(selection.q===undefined){selection.q=1}const tparts=selection.token.split("/");selection.type=tparts[0];selection.subtype=tparts[1];map[selection.token]=selection;if(selection.q){selections.push(selection)}}selections.sort(internals.sort);return internals.preferences(map,selections,preferences)};internals.normalize=function(raw){raw=raw||"*/*";const normalized={header:raw,quoted:{}};if(raw.includes('"')){let i=0;normalized.header=raw.replace(/="([^"]*)"/g,($0,$1)=>{const key='"'+ ++i;normalized.quoted[key]=$1;return"="+key})}normalized.header=normalized.header.replace(/[ \t]/g,"");return normalized};internals.sort=function(a,b){if(b.q!==a.q){return b.q-a.q}if(a.type!==b.type){return internals.innerSort(a,b,"type")}if(a.subtype!==b.subtype){return internals.innerSort(a,b,"subtype")}if(a.specificity!==b.specificity){return b.specificity-a.specificity}return a.pos-b.pos};internals.innerSort=function(a,b,key){const aFirst=-1;const bFirst=1;if(a[key]==="*"){return bFirst}if(b[key]==="*"){return aFirst}return a[key]<b[key]?aFirst:bFirst};internals.preferences=function(map,selections,preferences){if(!preferences||!preferences.length){return selections.map(selection=>selection.token+selection.original)}const lowers=Object.create(null);const flat=Object.create(null);let any=false;for(const preference of preferences){const lower=preference.toLowerCase();flat[lower]=preference;const parts=lower.split("/");const type=parts[0];const subtype=parts[1];if(type==="*"){Hoek.assert(subtype==="*","Invalid media type preference contains wildcard type with a subtype");any=true;continue}lowers[type]=lowers[type]||Object.create(null);lowers[type][subtype]=preference}const preferred=[];for(const selection of selections){const token=selection.token;const{type,subtype}=map[token];const subtypes=lowers[type];if(type==="*"){for(const preference of Object.keys(flat)){if(!map[preference]){preferred.push(flat[preference])}}if(any){preferred.push("*/*")}continue}if(any){preferred.push((flat[token]||token)+selection.original);continue}if(subtype!=="*"){const pref=flat[token];if(pref||subtypes&&subtypes["*"]){preferred.push((pref||token)+selection.original)}continue}if(subtypes){for(const psub of Object.keys(subtypes)){if(!map[`${type}/${psub}`]){preferred.push(subtypes[psub])}}}}return preferred}},{"@hapi/boom":12,"@hapi/hoek":128}],4:[function(require,module,exports){"use strict";const Url=require("url");const internals={minDomainSegments:2,nonAsciiRx:/[^\x00-\x7f]/,domainControlRx:/[\x00-\x20@\:\/]/,tldSegmentRx:/^[a-zA-Z](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,domainSegmentRx:/^[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,URL:Url.URL||URL};exports.analyze=function(domain,options={}){if(typeof domain!=="string"){throw new Error("Invalid input: domain must be a string")}if(!domain){return{error:"Domain must be a non-empty string"}}if(domain.length>256){return{error:"Domain too long"}}const ascii=!internals.nonAsciiRx.test(domain);if(!ascii){if(options.allowUnicode===false){return{error:"Domain contains forbidden Unicode characters"}}domain=domain.normalize("NFC")}if(internals.domainControlRx.test(domain)){return{error:"Domain contains invalid character"}}domain=internals.punycode(domain);const minDomainSegments=options.minDomainSegments||internals.minDomainSegments;const segments=domain.split(".");if(segments.length<minDomainSegments){return{error:"Domain lacks the minimum required number of segments"}}const tlds=options.tlds;if(tlds){const tld=segments[segments.length-1].toLowerCase();if(tlds.deny&&tlds.deny.has(tld)||tlds.allow&&!tlds.allow.has(tld)){return{error:"Domain uses forbidden TLD"}}}for(let i=0;i<segments.length;++i){const segment=segments[i];if(!segment.length){return{error:"Domain contains empty dot-separated segment"}}if(segment.length>63){return{error:"Domain contains dot-separated segment that is too long"}}if(i<segments.length-1){if(!internals.domainSegmentRx.test(segment)){return{error:"Domain contains invalid character"}}}else{if(!internals.tldSegmentRx.test(segment)){return{error:"Domain contains invalid tld character"}}}}};exports.isValid=function(domain,options){return!exports.analyze(domain,options)};internals.punycode=function(domain){try{return new internals.URL(`http://${domain}`).host}catch(err){return domain}}},{url:undefined}],5:[function(require,module,exports){"use strict";const Util=require("util");const Domain=require("./domain");const internals={nonAsciiRx:/[^\x00-\x7f]/,encoder:new(Util.TextEncoder||TextEncoder)};exports.analyze=function(email,options){return internals.email(email,options)};exports.isValid=function(email,options){return!internals.email(email,options)};internals.email=function(email,options={}){if(typeof email!=="string"){throw new Error("Invalid input: email must be a string")}if(!email){return{error:"Address must be a non-empty string"}}const ascii=!internals.nonAsciiRx.test(email);if(!ascii){if(options.allowUnicode===false){return{error:"Address contains forbidden Unicode characters"}}email=email.normalize("NFC")}const parts=email.split("@");if(parts.length!==2){return{error:parts.length>2?"Address cannot contain more than one @ character":"Address must contain one @ character"}}const[local,domain]=parts;if(!local){return{error:"Address local part cannot be empty"}}if(!options.ignoreLength){if(email.length>254){return{error:"Address too long"}}if(internals.encoder.encode(local).length>64){return{error:"Address local part too long"}}}return internals.local(local,ascii)||Domain.analyze(domain,options)};internals.local=function(local,ascii){const segments=local.split(".");for(const segment of segments){if(!segment.length){return{error:"Address local part contains empty dot-separated segment"}}if(ascii){if(!internals.atextRx.test(segment)){return{error:"Address local part contains invalid character"}}continue}for(const char of segment){if(internals.atextRx.test(char)){continue}const binary=internals.binary(char);if(!internals.atomRx.test(binary)){return{error:"Address local part contains invalid character"}}}}};internals.binary=function(char){return Array.from(internals.encoder.encode(char)).map(v=>String.fromCharCode(v)).join("")};internals.atextRx=/^[\w!#\$%&'\*\+\-/=\?\^`\{\|\}~]+$/;internals.atomRx=new RegExp(["(?:[\\xc2-\\xdf][\\x80-\\xbf])","(?:\\xe0[\\xa0-\\xbf][\\x80-\\xbf])|(?:[\\xe1-\\xec][\\x80-\\xbf]{2})|(?:\\xed[\\x80-\\x9f][\\x80-\\xbf])|(?:[\\xee-\\xef][\\x80-\\xbf]{2})","(?:\\xf0[\\x90-\\xbf][\\x80-\\xbf]{2})|(?:[\\xf1-\\xf3][\\x80-\\xbf]{3})|(?:\\xf4[\\x80-\\x8f][\\x80-\\xbf]{2})"].join("|"))},{"./domain":4,util:undefined}],6:[function(require,module,exports){"use strict";const Domain=require("./domain");const Email=require("./email");const Tlds=require("./tlds");const internals={defaultTlds:{allow:Tlds,deny:null}};module.exports={domain:{analyze(domain,options){options=internals.options(options);return Domain.analyze(domain,options)},isValid(domain,options){options=internals.options(options);return Domain.isValid(domain,options)}},email:{analyze(email,options){options=internals.options(options);return Email.analyze(email,options)},isValid(email,options){options=internals.options(options);return Email.isValid(email,options)}}};internals.options=function(options){if(!options){return{tlds:internals.defaultTlds}}if(options.tlds===false){return options}if(!options.tlds||options.tlds===true){return Object.assign({},options,{tlds:internals.defaultTlds})}if(typeof options.tlds!=="object"){throw new Error("Invalid options: tlds must be a boolean or an object")}if(options.tlds.deny){if(options.tlds.deny instanceof Set===false){throw new Error("Invalid options: tlds.deny must be a Set object")}if(options.tlds.allow){throw new Error("Invalid options: cannot specify both tlds.allow and tlds.deny lists")}return options}if(options.tlds.allow===true){return Object.assign({},options,{tlds:internals.defaultTlds})}if(options.tlds.allow instanceof Set===false){throw new Error("Invalid options: tlds.allow must be a Set object or true")}return options}},{"./domain":4,"./email":5,"./tlds":7}],7:[function(require,module,exports){"use strict";const internals={};internals.tlds=["AAA","AARP","ABARTH","ABB","ABBOTT","ABBVIE","ABC","ABLE","ABOGADO","ABUDHABI","AC","ACADEMY","ACCENTURE","ACCOUNTANT","ACCOUNTANTS","ACO","ACTOR","AD","ADAC","ADS","ADULT","AE","AEG","AERO","AETNA","AF","AFAMILYCOMPANY","AFL","AFRICA","AG","AGAKHAN","AGENCY","AI","AIG","AIGO","AIRBUS","AIRFORCE","AIRTEL","AKDN","AL","ALFAROMEO","ALIBABA","ALIPAY","ALLFINANZ","ALLSTATE","ALLY","ALSACE","ALSTOM","AM","AMERICANEXPRESS","AMERICANFAMILY","AMEX","AMFAM","AMICA","AMSTERDAM","ANALYTICS","ANDROID","ANQUAN","ANZ","AO","AOL","APARTMENTS","APP","APPLE","AQ","AQUARELLE","AR","ARAB","ARAMCO","ARCHI","ARMY","ARPA","ART","ARTE","AS","ASDA","ASIA","ASSOCIATES","AT","ATHLETA","ATTORNEY","AU","AUCTION","AUDI","AUDIBLE","AUDIO","AUSPOST","AUTHOR","AUTO","AUTOS","AVIANCA","AW","AWS","AX","AXA","AZ","AZURE","BA","BABY","BAIDU","BANAMEX","BANANAREPUBLIC","BAND","BANK","BAR","BARCELONA","BARCLAYCARD","BARCLAYS","BAREFOOT","BARGAINS","BASEBALL","BASKETBALL","BAUHAUS","BAYERN","BB","BBC","BBT","BBVA","BCG","BCN","BD","BE","BEATS","BEAUTY","BEER","BENTLEY","BERLIN","BEST","BESTBUY","BET","BF","BG","BH","BHARTI","BI","BIBLE","BID","BIKE","BING","BINGO","BIO","BIZ","BJ","BLACK","BLACKFRIDAY","BLOCKBUSTER","BLOG","BLOOMBERG","BLUE","BM","BMS","BMW","BN","BNPPARIBAS","BO","BOATS","BOEHRINGER","BOFA","BOM","BOND","BOO","BOOK","BOOKING","BOSCH","BOSTIK","BOSTON","BOT","BOUTIQUE","BOX","BR","BRADESCO","BRIDGESTONE","BROADWAY","BROKER","BROTHER","BRUSSELS","BS","BT","BUDAPEST","BUGATTI","BUILD","BUILDERS","BUSINESS","BUY","BUZZ","BV","BW","BY","BZ","BZH","CA","CAB","CAFE","CAL","CALL","CALVINKLEIN","CAM","CAMERA","CAMP","CANCERRESEARCH","CANON","CAPETOWN","CAPITAL","CAPITALONE","CAR","CARAVAN","CARDS","CARE","CAREER","CAREERS","CARS","CARTIER","CASA","CASE","CASEIH","CASH","CASINO","CAT","CATERING","CATHOLIC","CBA","CBN","CBRE","CBS","CC","CD","CEB","CENTER","CEO","CERN","CF","CFA","CFD","CG","CH","CHANEL","CHANNEL","CHARITY","CHASE","CHAT","CHEAP","CHINTAI","CHRISTMAS","CHROME","CHRYSLER","CHURCH","CI","CIPRIANI","CIRCLE","CISCO","CITADEL","CITI","CITIC","CITY","CITYEATS","CK","CL","CLAIMS","CLEANING","CLICK","CLINIC","CLINIQUE","CLOTHING","CLOUD","CLUB","CLUBMED","CM","CN","CO","COACH","CODES","COFFEE","COLLEGE","COLOGNE","COM","COMCAST","COMMBANK","COMMUNITY","COMPANY","COMPARE","COMPUTER","COMSEC","CONDOS","CONSTRUCTION","CONSULTING","CONTACT","CONTRACTORS","COOKING","COOKINGCHANNEL","COOL","COOP","CORSICA","COUNTRY","COUPON","COUPONS","COURSES","CR","CREDIT","CREDITCARD","CREDITUNION","CRICKET","CROWN","CRS","CRUISE","CRUISES","CSC","CU","CUISINELLA","CV","CW","CX","CY","CYMRU","CYOU","CZ","DABUR","DAD","DANCE","DATA","DATE","DATING","DATSUN","DAY","DCLK","DDS","DE","DEAL","DEALER","DEALS","DEGREE","DELIVERY","DELL","DELOITTE","DELTA","DEMOCRAT","DENTAL","DENTIST","DESI","DESIGN","DEV","DHL","DIAMONDS","DIET","DIGITAL","DIRECT","DIRECTORY","DISCOUNT","DISCOVER","DISH","DIY","DJ","DK","DM","DNP","DO","DOCS","DOCTOR","DODGE","DOG","DOMAINS","DOT","DOWNLOAD","DRIVE","DTV","DUBAI","DUCK","DUNLOP","DUPONT","DURBAN","DVAG","DVR","DZ","EARTH","EAT","EC","ECO","EDEKA","EDU","EDUCATION","EE","EG","EMAIL","EMERCK","ENERGY","ENGINEER","ENGINEERING","ENTERPRISES","EPSON","EQUIPMENT","ER","ERICSSON","ERNI","ES","ESQ","ESTATE","ESURANCE","ET","ETISALAT","EU","EUROVISION","EUS","EVENTS","EVERBANK","EXCHANGE","EXPERT","EXPOSED","EXPRESS","EXTRASPACE","FAGE","FAIL","FAIRWINDS","FAITH","FAMILY","FAN","FANS","FARM","FARMERS","FASHION","FAST","FEDEX","FEEDBACK","FERRARI","FERRERO","FI","FIAT","FIDELITY","FIDO","FILM","FINAL","FINANCE","FINANCIAL","FIRE","FIRESTONE","FIRMDALE","FISH","FISHING","FIT","FITNESS","FJ","FK","FLICKR","FLIGHTS","FLIR","FLORIST","FLOWERS","FLY","FM","FO","FOO","FOOD","FOODNETWORK","FOOTBALL","FORD","FOREX","FORSALE","FORUM","FOUNDATION","FOX","FR","FREE","FRESENIUS","FRL","FROGANS","FRONTDOOR","FRONTIER","FTR","FUJITSU","FUJIXEROX","FUN","FUND","FURNITURE","FUTBOL","FYI","GA","GAL","GALLERY","GALLO","GALLUP","GAME","GAMES","GAP","GARDEN","GAY","GB","GBIZ","GD","GDN","GE","GEA","GENT","GENTING","GEORGE","GF","GG","GGEE","GH","GI","GIFT","GIFTS","GIVES","GIVING","GL","GLADE","GLASS","GLE","GLOBAL","GLOBO","GM","GMAIL","GMBH","GMO","GMX","GN","GODADDY","GOLD","GOLDPOINT","GOLF","GOO","GOODYEAR","GOOG","GOOGLE","GOP","GOT","GOV","GP","GQ","GR","GRAINGER","GRAPHICS","GRATIS","GREEN","GRIPE","GROCERY","GROUP","GS","GT","GU","GUARDIAN","GUCCI","GUGE","GUIDE","GUITARS","GURU","GW","GY","HAIR","HAMBURG","HANGOUT","HAUS","HBO","HDFC","HDFCBANK","HEALTH","HEALTHCARE","HELP","HELSINKI","HERE","HERMES","HGTV","HIPHOP","HISAMITSU","HITACHI","HIV","HK","HKT","HM","HN","HOCKEY","HOLDINGS","HOLIDAY","HOMEDEPOT","HOMEGOODS","HOMES","HOMESENSE","HONDA","HORSE","HOSPITAL","HOST","HOSTING","HOT","HOTELES","HOTELS","HOTMAIL","HOUSE","HOW","HR","HSBC","HT","HU","HUGHES","HYATT","HYUNDAI","IBM","ICBC","ICE","ICU","ID","IE","IEEE","IFM","IKANO","IL","IM","IMAMAT","IMDB","IMMO","IMMOBILIEN","IN","INC","INDUSTRIES","INFINITI","INFO","ING","INK","INSTITUTE","INSURANCE","INSURE","INT","INTEL","INTERNATIONAL","INTUIT","INVESTMENTS","IO","IPIRANGA","IQ","IR","IRISH","IS","ISMAILI","IST","ISTANBUL","IT","ITAU","ITV","IVECO","JAGUAR","JAVA","JCB","JCP","JE","JEEP","JETZT","JEWELRY","JIO","JLL","JM","JMP","JNJ","JO","JOBS","JOBURG","JOT","JOY","JP","JPMORGAN","JPRS","JUEGOS","JUNIPER","KAUFEN","KDDI","KE","KERRYHOTELS","KERRYLOGISTICS","KERRYPROPERTIES","KFH","KG","KH","KI","KIA","KIM","KINDER","KINDLE","KITCHEN","KIWI","KM","KN","KOELN","KOMATSU","KOSHER","KP","KPMG","KPN","KR","KRD","KRED","KUOKGROUP","KW","KY","KYOTO","KZ","LA","LACAIXA","LADBROKES","LAMBORGHINI","LAMER","LANCASTER","LANCIA","LANCOME","LAND","LANDROVER","LANXESS","LASALLE","LAT","LATINO","LATROBE","LAW","LAWYER","LB","LC","LDS","LEASE","LECLERC","LEFRAK","LEGAL","LEGO","LEXUS","LGBT","LI","LIAISON","LIDL","LIFE","LIFEINSURANCE","LIFESTYLE","LIGHTING","LIKE","LILLY","LIMITED","LIMO","LINCOLN","LINDE","LINK","LIPSY","LIVE","LIVING","LIXIL","LK","LLC","LOAN","LOANS","LOCKER","LOCUS","LOFT","LOL","LONDON","LOTTE","LOTTO","LOVE","LPL","LPLFINANCIAL","LR","LS","LT","LTD","LTDA","LU","LUNDBECK","LUPIN","LUXE","LUXURY","LV","LY","MA","MACYS","MADRID","MAIF","MAISON","MAKEUP","MAN","MANAGEMENT","MANGO","MAP","MARKET","MARKETING","MARKETS","MARRIOTT","MARSHALLS","MASERATI","MATTEL","MBA","MC","MCKINSEY","MD","ME","MED","MEDIA","MEET","MELBOURNE","MEME","MEMORIAL","MEN","MENU","MERCKMSD","METLIFE","MG","MH","MIAMI","MICROSOFT","MIL","MINI","MINT","MIT","MITSUBISHI","MK","ML","MLB","MLS","MM","MMA","MN","MO","MOBI","MOBILE","MODA","MOE","MOI","MOM","MONASH","MONEY","MONSTER","MOPAR","MORMON","MORTGAGE","MOSCOW","MOTO","MOTORCYCLES","MOV","MOVIE","MOVISTAR","MP","MQ","MR","MS","MSD","MT","MTN","MTR","MU","MUSEUM","MUTUAL","MV","MW","MX","MY","MZ","NA","NAB","NADEX","NAGOYA","NAME","NATIONWIDE","NATURA","NAVY","NBA","NC","NE","NEC","NET","NETBANK","NETFLIX","NETWORK","NEUSTAR","NEW","NEWHOLLAND","NEWS","NEXT","NEXTDIRECT","NEXUS","NF","NFL","NG","NGO","NHK","NI","NICO","NIKE","NIKON","NINJA","NISSAN","NISSAY","NL","NO","NOKIA","NORTHWESTERNMUTUAL","NORTON","NOW","NOWRUZ","NOWTV","NP","NR","NRA","NRW","NTT","NU","NYC","NZ","OBI","OBSERVER","OFF","OFFICE","OKINAWA","OLAYAN","OLAYANGROUP","OLDNAVY","OLLO","OM","OMEGA","ONE","ONG","ONL","ONLINE","ONYOURSIDE","OOO","OPEN","ORACLE","ORANGE","ORG","ORGANIC","ORIGINS","OSAKA","OTSUKA","OTT","OVH","PA","PAGE","PANASONIC","PARIS","PARS","PARTNERS","PARTS","PARTY","PASSAGENS","PAY","PCCW","PE","PET","PF","PFIZER","PG","PH","PHARMACY","PHD","PHILIPS","PHONE","PHOTO","PHOTOGRAPHY","PHOTOS","PHYSIO","PIAGET","PICS","PICTET","PICTURES","PID","PIN","PING","PINK","PIONEER","PIZZA","PK","PL","PLACE","PLAY","PLAYSTATION","PLUMBING","PLUS","PM","PN","PNC","POHL","POKER","POLITIE","PORN","POST","PR","PRAMERICA","PRAXI","PRESS","PRIME","PRO","PROD","PRODUCTIONS","PROF","PROGRESSIVE","PROMO","PROPERTIES","PROPERTY","PROTECTION","PRU","PRUDENTIAL","PS","PT","PUB","PW","PWC","PY","QA","QPON","QUEBEC","QUEST","QVC","RACING","RADIO","RAID","RE","READ","REALESTATE","REALTOR","REALTY","RECIPES","RED","REDSTONE","REDUMBRELLA","REHAB","REISE","REISEN","REIT","RELIANCE","REN","RENT","RENTALS","REPAIR","REPORT","REPUBLICAN","REST","RESTAURANT","REVIEW","REVIEWS","REXROTH","RICH","RICHARDLI","RICOH","RIGHTATHOME","RIL","RIO","RIP","RMIT","RO","ROCHER","ROCKS","RODEO","ROGERS","ROOM","RS","RSVP","RU","RUGBY","RUHR","RUN","RW","RWE","RYUKYU","SA","SAARLAND","SAFE","SAFETY","SAKURA","SALE","SALON","SAMSCLUB","SAMSUNG","SANDVIK","SANDVIKCOROMANT","SANOFI","SAP","SARL","SAS","SAVE","SAXO","SB","SBI","SBS","SC","SCA","SCB","SCHAEFFLER","SCHMIDT","SCHOLARSHIPS","SCHOOL","SCHULE","SCHWARZ","SCIENCE","SCJOHNSON","SCOR","SCOT","SD","SE","SEARCH","SEAT","SECURE","SECURITY","SEEK","SELECT","SENER","SERVICES","SES","SEVEN","SEW","SEX","SEXY","SFR","SG","SH","SHANGRILA","SHARP","SHAW","SHELL","SHIA","SHIKSHA","SHOES","SHOP","SHOPPING","SHOUJI","SHOW","SHOWTIME","SHRIRAM","SI","SILK","SINA","SINGLES","SITE","SJ","SK","SKI","SKIN","SKY","SKYPE","SL","SLING","SM","SMART","SMILE","SN","SNCF","SO","SOCCER","SOCIAL","SOFTBANK","SOFTWARE","SOHU","SOLAR","SOLUTIONS","SONG","SONY","SOY","SPACE","SPORT","SPOT","SPREADBETTING","SR","SRL","SRT","SS","ST","STADA","STAPLES","STAR","STATEBANK","STATEFARM","STC","STCGROUP","STOCKHOLM","STORAGE","STORE","STREAM","STUDIO","STUDY","STYLE","SU","SUCKS","SUPPLIES","SUPPLY","SUPPORT","SURF","SURGERY","SUZUKI","SV","SWATCH","SWIFTCOVER","SWISS","SX","SY","SYDNEY","SYMANTEC","SYSTEMS","SZ","TAB","TAIPEI","TALK","TAOBAO","TARGET","TATAMOTORS","TATAR","TATTOO","TAX","TAXI","TC","TCI","TD","TDK","TEAM","TECH","TECHNOLOGY","TEL","TELEFONICA","TEMASEK","TENNIS","TEVA","TF","TG","TH","THD","THEATER","THEATRE","TIAA","TICKETS","TIENDA","TIFFANY","TIPS","TIRES","TIROL","TJ","TJMAXX","TJX","TK","TKMAXX","TL","TM","TMALL","TN","TO","TODAY","TOKYO","TOOLS","TOP","TORAY","TOSHIBA","TOTAL","TOURS","TOWN","TOYOTA","TOYS","TR","TRADE","TRADING","TRAINING","TRAVEL","TRAVELCHANNEL","TRAVELERS","TRAVELERSINSURANCE","TRUST","TRV","TT","TUBE","TUI","TUNES","TUSHU","TV","TVS","TW","TZ","UA","UBANK","UBS","UCONNECT","UG","UK","UNICOM","UNIVERSITY","UNO","UOL","UPS","US","UY","UZ","VA","VACATIONS","VANA","VANGUARD","VC","VE","VEGAS","VENTURES","VERISIGN","VERSICHERUNG","VET","VG","VI","VIAJES","VIDEO","VIG","VIKING","VILLAS","VIN","VIP","VIRGIN","VISA","VISION","VISTAPRINT","VIVA","VIVO","VLAANDEREN","VN","VODKA","VOLKSWAGEN","VOLVO","VOTE","VOTING","VOTO","VOYAGE","VU","VUELOS","WALES","WALMART","WALTER","WANG","WANGGOU","WARMAN","WATCH","WATCHES","WEATHER","WEATHERCHANNEL","WEBCAM","WEBER","WEBSITE","WED","WEDDING","WEIBO","WEIR","WF","WHOSWHO","WIEN","WIKI","WILLIAMHILL","WIN","WINDOWS","WINE","WINNERS","WME","WOLTERSKLUWER","WOODSIDE","WORK","WORKS","WORLD","WOW","WS","WTC","WTF","XBOX","XEROX","XFINITY","XIHUAN","XIN","XN--11B4C3D","XN--1CK2E1B","XN--1QQW23A","XN--2SCRJ9C","XN--30RR7Y","XN--3BST00M","XN--3DS443G","XN--3E0B707E","XN--3HCRJ9C","XN--3OQ18VL8PN36A","XN--3PXU8K","XN--42C2D9A","XN--45BR5CYL","XN--45BRJ9C","XN--45Q11C","XN--4GBRIM","XN--54B7FTA0CC","XN--55QW42G","XN--55QX5D","XN--5SU34J936BGSG","XN--5TZM5G","XN--6FRZ82G","XN--6QQ986B3XL","XN--80ADXHKS","XN--80AO21A","XN--80AQECDR1A","XN--80ASEHDB","XN--80ASWG","XN--8Y0A063A","XN--90A3AC","XN--90AE","XN--90AIS","XN--9DBQ2A","XN--9ET52U","XN--9KRT00A","XN--B4W605FERD","XN--BCK1B9A5DRE4C","XN--C1AVG","XN--C2BR7G","XN--CCK2B3B","XN--CG4BKI","XN--CLCHC0EA0B2G2A9GCD","XN--CZR694B","XN--CZRS0T","XN--CZRU2D","XN--D1ACJ3B","XN--D1ALF","XN--E1A4C","XN--ECKVDTC9D","XN--EFVY88H","XN--ESTV75G","XN--FCT429K","XN--FHBEI","XN--FIQ228C5HS","XN--FIQ64B","XN--FIQS8S","XN--FIQZ9S","XN--FJQ720A","XN--FLW351E","XN--FPCRJ9C3D","XN--FZC2C9E2C","XN--FZYS8D69UVGM","XN--G2XX48C","XN--GCKR3F0F","XN--GECRJ9C","XN--GK3AT1E","XN--H2BREG3EVE","XN--H2BRJ9C","XN--H2BRJ9C8C","XN--HXT814E","XN--I1B6B1A6A2E","XN--IMR513N","XN--IO0A7I","XN--J1AEF","XN--J1AMH","XN--J6W193G","XN--JLQ61U9W7B","XN--JVR189M","XN--KCRX77D1X4A","XN--KPRW13D","XN--KPRY57D","XN--KPU716F","XN--KPUT3I","XN--L1ACC","XN--LGBBAT1AD8J","XN--MGB9AWBF","XN--MGBA3A3EJT","XN--MGBA3A4F16A","XN--MGBA7C0BBN0A","XN--MGBAAKC7DVF","XN--MGBAAM7A8H","XN--MGBAB2BD","XN--MGBAH1A3HJKRD","XN--MGBAI9AZGQP6J","XN--MGBAYH7GPA","XN--MGBBH1A","XN--MGBBH1A71E","XN--MGBC0A9AZCG","XN--MGBCA7DZDO","XN--MGBERP4A5D4AR","XN--MGBGU82A","XN--MGBI4ECEXP","XN--MGBPL2FH","XN--MGBT3DHD","XN--MGBTX2B","XN--MGBX4CD0AB","XN--MIX891F","XN--MK1BU44C","XN--MXTQ1M","XN--NGBC5AZD","XN--NGBE9E0A","XN--NGBRX","XN--NODE","XN--NQV7F","XN--NQV7FS00EMA","XN--NYQY26A","XN--O3CW4H","XN--OGBPF8FL","XN--OTU796D","XN--P1ACF","XN--P1AI","XN--PBT977C","XN--PGBS0DH","XN--PSSY2U","XN--Q9JYB4C","XN--QCKA1PMC","XN--QXA6A","XN--QXAM","XN--RHQV96G","XN--ROVU88B","XN--RVC1E0AM3E","XN--S9BRJ9C","XN--SES554G","XN--T60B56A","XN--TCKWE","XN--TIQ49XQYJ","XN--UNUP4Y","XN--VERMGENSBERATER-CTB","XN--VERMGENSBERATUNG-PWB","XN--VHQUV","XN--VUQ861B","XN--W4R85EL8FHU5DNRA","XN--W4RS40L","XN--WGBH1C","XN--WGBL6A","XN--XHQ521B","XN--XKC2AL3HYE2A","XN--XKC2DL3A5EE0H","XN--Y9A3AQ","XN--YFRO4I67O","XN--YGBI2AMMX","XN--ZFR164B","XXX","XYZ","YACHTS","YAHOO","YAMAXUN","YANDEX","YE","YODOBASHI","YOGA","YOKOHAMA","YOU","YOUTUBE","YT","YUN","ZA","ZAPPOS","ZARA","ZERO","ZIP","ZM","ZONE","ZUERICH","ZW"];module.exports=new Set(internals.tlds.map(tld=>tld.toLowerCase()))},{}],8:[function(require,module,exports){"use strict";const Stream=require("stream");const Hoek=require("@hapi/hoek");const internals={};internals.Range=class{constructor(from,to){this.from=from;this.to=to}};internals.headerRx=/^bytes=[\s,]*((?:(?:\d+\-\d*)|(?:\-\d+))(?:\s*,\s*(?:(?:\d+\-\d*)|(?:\-\d+)))*)$/i;exports.header=function(header,length){const parts=internals.headerRx.exec(header);if(!parts){return null}const lastPos=length-1;const result=[];const ranges=parts[1].match(/\d*\-\d*/g);for(let range of ranges){let from;let to;range=range.split("-");if(range[0]){from=parseInt(range[0],10)}if(range[1]){to=parseInt(range[1],10);if(from!==undefined){if(to>lastPos){to=lastPos}}else{from=length-to;to=lastPos}}else{to=lastPos}if(from>to){return null}result.push(new internals.Range(from,to))}if(result.length===1){return result}result.sort((a,b)=>a.from-b.from);const consolidated=[];for(let i=result.length-1;i>0;--i){const current=result[i];const before=result[i-1];if(current.from<=before.to+1){before.to=current.to}else{consolidated.unshift(current)}}consolidated.unshift(result[0]);return consolidated};exports.Stream=internals.Stream=class extends Stream.Transform{constructor(range){if(!(range instanceof internals.Range)){Hoek.assert(typeof range==="object",'Expected "range" object');const from=range.from||0;Hoek.assert(typeof from==="number",'"range.from" must be falsy, or a number');Hoek.assert(from===parseInt(from,10)&&from>=0,'"range.from" must be a positive integer');const to=range.to||0;Hoek.assert(typeof to==="number",'"range.to" must be falsy, or a number');Hoek.assert(to===parseInt(to,10)&&to>=0,'"range.to" must be a positive integer');Hoek.assert(to>=from,'"range.to" must be greater than or equal to "range.from"');range=new internals.Range(from,to)}super();this._range=range;this._next=0}processChunk(chunk){const pos=this._next;this._next=this._next+chunk.length;if(this._next<=this._range.from||pos>this._range.to){return}const from=Math.max(0,this._range.from-pos);const to=Math.min(chunk.length,this._range.to-pos+1);this.push(chunk.slice(from,to))}_transform(chunk,encoding,done){try{this.processChunk(chunk)}catch(err){return done(err)}return done()}}},{"@hapi/hoek":128,stream:undefined}],9:[function(require,module,exports){"use strict";const Stream=require("stream");const internals={decodeChars:[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1]};exports.decode=function(buffer){const decodeChars=internals.decodeChars;const len=buffer.length;const allocated=Math.ceil(len/4)*3;const result=Buffer.alloc(allocated);let c1;let c2;let c3;let c4;let j=0;for(let i=0;i<len;){do{c1=decodeChars[buffer[i++]&255]}while(i<len&&c1===-1);if(c1===-1){break}do{c2=decodeChars[buffer[i++]&255]}while(i<len&&c2===-1);if(c2===-1){break}result[j++]=c1<<2|(c2&48)>>4;do{c3=buffer[i++]&255;if(c3===61){return result.slice(0,j)}c3=decodeChars[c3]}while(i<len&&c3===-1);if(c3===-1){break}result[j++]=(c2&15)<<4|(c3&60)>>2;do{c4=buffer[i++]&255;if(c4===61){return result.slice(0,j)}c4=decodeChars[c4]}while(i<len&&c4===-1);if(c4!==-1){result[j++]=(c3&3)<<6|c4}}return j===allocated?result:result.slice(0,j)};exports.Decoder=class Decoder extends Stream.Transform{constructor(){super();this._reminder=null}_transform(chunk,encoding,callback){let part=this._reminder?Buffer.concat([this._reminder,chunk]):chunk;const remaining=part.length%4;if(remaining){this._reminder=part.slice(part.length-remaining);part=part.slice(0,part.length-remaining)}else{this._reminder=null}this.push(exports.decode(part));return callback()}_flush(callback){if(this._reminder){this.push(exports.decode(this._reminder))}return callback()}}},{stream:undefined}],10:[function(require,module,exports){"use strict";const Stream=require("stream");const internals={};exports.encode=function(buffer){return Buffer.from(buffer.toString("base64"))};exports.Encoder=class Encoder extends Stream.Transform{constructor(){super();this._reminder=null}_transform(chunk,encoding,callback){let part=this._reminder?Buffer.concat([this._reminder,chunk]):chunk;const remaining=part.length%3;if(remaining){this._reminder=part.slice(part.length-remaining);part=part.slice(0,part.length-remaining)}else{this._reminder=null}this.push(exports.encode(part));return callback()}_flush(callback){if(this._reminder){this.push(exports.encode(this._reminder))}return callback()}}},{stream:undefined}],11:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Decoder=require("./decoder");const Encoder=require("./encoder");exports.decode=Decoder.decode;exports.encode=Encoder.encode;exports.Decoder=Decoder.Decoder;exports.Encoder=Encoder.Encoder;exports.base64urlEncode=function(value,encoding){Hoek.assert(typeof value==="string"||Buffer.isBuffer(value),"value must be string or buffer");const buf=Buffer.isBuffer(value)?value:Buffer.from(value,encoding||"binary");return buf.toString("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")};exports.base64urlDecode=function(value,encoding){if(typeof value!=="string"){throw new Error("Value not a string")}if(!/^[\w\-]*$/.test(value)){throw new Error("Invalid character")}const buf=Buffer.from(value,"base64");return encoding==="buffer"?buf:buf.toString(encoding||"binary")}},{"./decoder":9,"./encoder":10,"@hapi/hoek":128}],12:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const internals={codes:new Map([[100,"Continue"],[101,"Switching Protocols"],[102,"Processing"],[200,"OK"],[201,"Created"],[202,"Accepted"],[203,"Non-Authoritative Information"],[204,"No Content"],[205,"Reset Content"],[206,"Partial Content"],[207,"Multi-Status"],[300,"Multiple Choices"],[301,"Moved Permanently"],[302,"Moved Temporarily"],[303,"See Other"],[304,"Not Modified"],[305,"Use Proxy"],[307,"Temporary Redirect"],[400,"Bad Request"],[401,"Unauthorized"],[402,"Payment Required"],[403,"Forbidden"],[404,"Not Found"],[405,"Method Not Allowed"],[406,"Not Acceptable"],[407,"Proxy Authentication Required"],[408,"Request Time-out"],[409,"Conflict"],[410,"Gone"],[411,"Length Required"],[412,"Precondition Failed"],[413,"Request Entity Too Large"],[414,"Request-URI Too Large"],[415,"Unsupported Media Type"],[416,"Requested Range Not Satisfiable"],[417,"Expectation Failed"],[418,"I'm a teapot"],[422,"Unprocessable Entity"],[423,"Locked"],[424,"Failed Dependency"],[425,"Unordered Collection"],[426,"Upgrade Required"],[428,"Precondition Required"],[429,"Too Many Requests"],[431,"Request Header Fields Too Large"],[451,"Unavailable For Legal Reasons"],[500,"Internal Server Error"],[501,"Not Implemented"],[502,"Bad Gateway"],[503,"Service Unavailable"],[504,"Gateway Time-out"],[505,"HTTP Version Not Supported"],[506,"Variant Also Negotiates"],[507,"Insufficient Storage"],[509,"Bandwidth Limit Exceeded"],[510,"Not Extended"],[511,"Network Authentication Required"]])};module.exports=internals.Boom=class extends Error{constructor(message,options={}){if(message instanceof Error){return internals.Boom.boomify(Hoek.clone(message),options)}const{statusCode:statusCode=500,data:data=null,ctor:ctor=internals.Boom}=options;const error=new Error(message?message:undefined);Error.captureStackTrace(error,ctor);error.data=data;const boom=internals.initialize(error,statusCode);Object.defineProperty(boom,"typeof",{value:ctor});if(options.decorate){Object.assign(boom,options.decorate)}return boom}static[Symbol.hasInstance](instance){return internals.Boom.isBoom(instance)}static isBoom(err){return err instanceof Error&&!!err.isBoom}static boomify(err,options){Hoek.assert(err instanceof Error,"Cannot wrap non-Error object");options=options||{};if(options.data!==undefined){err.data=options.data}if(options.decorate){Object.assign(err,options.decorate)}if(!err.isBoom){return internals.initialize(err,options.statusCode||500,options.message)}if(options.override===false||!options.statusCode&&!options.message){return err}return internals.initialize(err,options.statusCode||err.output.statusCode,options.message)}static badRequest(message,data){return new internals.Boom(message,{statusCode:400,data:data,ctor:internals.Boom.badRequest})}static unauthorized(message,scheme,attributes){const err=new internals.Boom(message,{statusCode:401,ctor:internals.Boom.unauthorized});if(!scheme){return err}if(typeof scheme!=="string"){err.output.headers["WWW-Authenticate"]=scheme.join(", ");return err}let wwwAuthenticate=`${scheme} `;if(attributes||message){err.output.payload.attributes={}}if(attributes){if(typeof attributes==="string"){wwwAuthenticate+=Hoek.escapeHeaderAttribute(attributes);err.output.payload.attributes=attributes}else{wwwAuthenticate+=Object.keys(attributes).map(name=>{let value=attributes[name];if(value===null||value===undefined){value=""}err.output.payload.attributes[name]=value;return`${name}="${Hoek.escapeHeaderAttribute(value.toString())}"`}).join(", ")}}if(message){if(attributes){wwwAuthenticate+=", "}wwwAuthenticate+=`error="${Hoek.escapeHeaderAttribute(message)}"`;err.output.payload.attributes.error=message}else{err.isMissing=true}err.output.headers["WWW-Authenticate"]=wwwAuthenticate;return err}static paymentRequired(message,data){return new internals.Boom(message,{statusCode:402,data:data,ctor:internals.Boom.paymentRequired})}static forbidden(message,data){return new internals.Boom(message,{statusCode:403,data:data,ctor:internals.Boom.forbidden})}static notFound(message,data){return new internals.Boom(message,{statusCode:404,data:data,ctor:internals.Boom.notFound})}static methodNotAllowed(message,data,allow){const err=new internals.Boom(message,{statusCode:405,data:data,ctor:internals.Boom.methodNotAllowed});if(typeof allow==="string"){allow=[allow]}if(Array.isArray(allow)){err.output.headers.Allow=allow.join(", ")}return err}static notAcceptable(message,data){return new internals.Boom(message,{statusCode:406,data:data,ctor:internals.Boom.notAcceptable})}static proxyAuthRequired(message,data){return new internals.Boom(message,{statusCode:407,data:data,ctor:internals.Boom.proxyAuthRequired})}static clientTimeout(message,data){return new internals.Boom(message,{statusCode:408,data:data,ctor:internals.Boom.clientTimeout})}static conflict(message,data){return new internals.Boom(message,{statusCode:409,data:data,ctor:internals.Boom.conflict})}static resourceGone(message,data){return new internals.Boom(message,{statusCode:410,data:data,ctor:internals.Boom.resourceGone})}static lengthRequired(message,data){return new internals.Boom(message,{statusCode:411,data:data,ctor:internals.Boom.lengthRequired})}static preconditionFailed(message,data){return new internals.Boom(message,{statusCode:412,data:data,ctor:internals.Boom.preconditionFailed})}static entityTooLarge(message,data){return new internals.Boom(message,{statusCode:413,data:data,ctor:internals.Boom.entityTooLarge})}static uriTooLong(message,data){return new internals.Boom(message,{statusCode:414,data:data,ctor:internals.Boom.uriTooLong})}static unsupportedMediaType(message,data){return new internals.Boom(message,{statusCode:415,data:data,ctor:internals.Boom.unsupportedMediaType})}static rangeNotSatisfiable(message,data){return new internals.Boom(message,{statusCode:416,data:data,ctor:internals.Boom.rangeNotSatisfiable})}static expectationFailed(message,data){return new internals.Boom(message,{statusCode:417,data:data,ctor:internals.Boom.expectationFailed})}static teapot(message,data){return new internals.Boom(message,{statusCode:418,data:data,ctor:internals.Boom.teapot})}static badData(message,data){return new internals.Boom(message,{statusCode:422,data:data,ctor:internals.Boom.badData})}static locked(message,data){return new internals.Boom(message,{statusCode:423,data:data,ctor:internals.Boom.locked})}static failedDependency(message,data){return new internals.Boom(message,{statusCode:424,data:data,ctor:internals.Boom.failedDependency})}static preconditionRequired(message,data){return new internals.Boom(message,{statusCode:428,data:data,ctor:internals.Boom.preconditionRequired})}static tooManyRequests(message,data){return new internals.Boom(message,{statusCode:429,data:data,ctor:internals.Boom.tooManyRequests})}static illegal(message,data){return new internals.Boom(message,{statusCode:451,data:data,ctor:internals.Boom.illegal})}static internal(message,data,statusCode=500){return internals.serverError(message,data,statusCode,internals.Boom.internal)}static notImplemented(message,data){return internals.serverError(message,data,501,internals.Boom.notImplemented)}static badGateway(message,data){return internals.serverError(message,data,502,internals.Boom.badGateway)}static serverUnavailable(message,data){return internals.serverError(message,data,503,internals.Boom.serverUnavailable)}static gatewayTimeout(message,data){return internals.serverError(message,data,504,internals.Boom.gatewayTimeout)}static badImplementation(message,data){const err=internals.serverError(message,data,500,internals.Boom.badImplementation);err.isDeveloperError=true;return err}};internals.Boom.default=internals.Boom;internals.initialize=function(err,statusCode,message){const numberCode=parseInt(statusCode,10);Hoek.assert(!isNaN(numberCode)&&numberCode>=400,"First argument must be a number (400+):",statusCode);err.isBoom=true;err.isServer=numberCode>=500;if(!err.hasOwnProperty("data")){err.data=null}err.output={statusCode:numberCode,payload:{},headers:{}};Object.defineProperty(err,"reformat",{value:internals.reformat});if(!message&&!err.message){err.reformat();message=err.output.payload.error}if(message){const props=Object.getOwnPropertyDescriptor(err,"message")||Object.getOwnPropertyDescriptor(Object.getPrototypeOf(err),"message");Hoek.assert(props.configurable&&!props.get,"The error is not compatible with boom");err.message=message+(err.message?": "+err.message:"");err.output.payload.message=err.message}err.reformat();return err};internals.reformat=function(debug=false){this.output.payload.statusCode=this.output.statusCode;this.output.payload.error=internals.codes.get(this.output.statusCode)||"Unknown";if(this.output.statusCode===500&&debug!==true){this.output.payload.message="An internal server error occurred"}else if(this.message){this.output.payload.message=this.message}};internals.serverError=function(message,data,statusCode,ctor){if(data instanceof Error&&!data.isBoom){return internals.Boom.boomify(data,{statusCode:statusCode,message:message})}return new internals.Boom(message,{statusCode:statusCode,data:data,ctor:ctor})}},{"@hapi/hoek":128}],13:[function(require,module,exports){"use strict";const Assert=require("assert");const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");const internals={system:[EvalError,RangeError,ReferenceError,SyntaxError,TypeError,URIError,Assert.AssertionError,Hoek.Error]};exports.rethrow=function(err,types,options={}){return internals.catch(err,types,options,true)};exports.ignore=function(err,types,options={}){return internals.catch(err,types,options,false)};internals.catch=function(err,types,options,match){if(internals.match(err,types)!==match){return}if(options.override){err=options.override}if(options.decorate){Object.assign(err,options.decorate)}if(options.return){return err}throw err};exports.background=async function(operation,action="rethrow",types="system",options={}){try{if(typeof operation==="function"){await operation()}else{await operation}}catch(err){exports[action](err,types,options)}};exports.isBoom=function(err){return Boom.isBoom(err)};exports.isError=function(err){return err instanceof Error};exports.isSystem=function(err){if(!err){return false}if(err.isBoom){return false}for(const system of internals.system){if(err instanceof system){return true}}return false};internals.rules={system:exports.isSystem,boom:exports.isBoom};internals.match=function(err,types){if(!types){return true}types=Array.isArray(types)?types:[types];for(const type of types){if(typeof type==="string"){if(internals.rules[type](err)){return true}}else if(typeof type==="object"){if(Hoek.contain(err,type,{deep:true,part:true})){return true}}else if(err instanceof type){return true}}return false}},{"@hapi/boom":12,"@hapi/hoek":128,assert:undefined}],14:[function(require,module,exports){"use strict";const internals={suspectRx:/"(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])"\s*\:/};exports.parse=function(text,reviver,options){if(!options){if(reviver&&typeof reviver==="object"){options=reviver;reviver=undefined}else{options={}}}const obj=JSON.parse(text,reviver);if(options.protoAction==="ignore"){return obj}if(!obj||typeof obj!=="object"){return obj}if(!text.match(internals.suspectRx)){return obj}exports.scan(obj,options);return obj};exports.scan=function(obj,options){options=options||{};let next=[obj];while(next.length){const nodes=next;next=[];for(const node of nodes){if(Object.prototype.hasOwnProperty.call(node,"__proto__")){if(options.protoAction!=="remove"){throw new SyntaxError("Object contains forbidden prototype property")}delete node.__proto__}for(const key in node){const value=node[key];if(value&&typeof value==="object"){next.push(node[key])}}}}};exports.safeParse=function(text,reviver){try{return exports.parse(text,reviver)}catch(ignoreError){return null}}},{}],15:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Boom=require("@hapi/boom");const Regex=require("./regex");const Segment=require("./segment");const internals={pathRegex:Regex.generate(),defaults:{isCaseSensitive:true}};exports.Router=internals.Router=function(options){this.settings=Hoek.applyToDefaults(internals.defaults,options||{});this.routes={};this.ids={};this.vhosts=null;this.specials={badRequest:null,notFound:null,options:null}};internals.Router.prototype.add=function(config,route){const method=config.method.toLowerCase();const vhost=config.vhost||"*";if(vhost!=="*"){this.vhosts=this.vhosts||{};this.vhosts[vhost]=this.vhosts[vhost]||{}}const table=vhost==="*"?this.routes:this.vhosts[vhost];table[method]=table[method]||{routes:[],router:new Segment};const analysis=config.analysis||this.analyze(config.path);const record={path:config.path,route:route||config.path,segments:analysis.segments,params:analysis.params,fingerprint:analysis.fingerprint,settings:this.settings};table[method].router.add(analysis.segments,record);table[method].routes.push(record);table[method].routes.sort(internals.sort);const last=record.segments[record.segments.length-1];if(last.empty){table[method].router.add(analysis.segments.slice(0,-1),record)}if(config.id){Hoek.assert(!this.ids[config.id],"Route id",config.id,"for path",config.path,"conflicts with existing path",this.ids[config.id]&&this.ids[config.id].path);this.ids[config.id]=record}return record};internals.Router.prototype.special=function(type,route){Hoek.assert(Object.keys(this.specials).indexOf(type)!==-1,"Unknown special route type:",type);this.specials[type]={route:route}};internals.Router.prototype.route=function(method,path,hostname){const segments=path.split("/").slice(1);const vhost=this.vhosts&&hostname&&this.vhosts[hostname];const route=vhost&&this._lookup(path,segments,vhost,method)||this._lookup(path,segments,this.routes,method)||method==="head"&&vhost&&this._lookup(path,segments,vhost,"get")||method==="head"&&this._lookup(path,segments,this.routes,"get")||method==="options"&&this.specials.options||vhost&&this._lookup(path,segments,vhost,"*")||this._lookup(path,segments,this.routes,"*")||this.specials.notFound||Boom.notFound();return route};internals.Router.prototype._lookup=function(path,segments,table,method){if(!table.hasOwnProperty(method)){return null}const set=table[method];const match=set.router.lookup(path,segments,this.settings);if(!match){return null}const assignments={};const array=[];for(let i=0;i<match.array.length;++i){const name=match.record.params[i];const value=internals.decode(match.array[i]);if(value.isBoom){return this.specials.badRequest||value}if(assignments[name]!==undefined){assignments[name]=assignments[name]+"/"+value}else{assignments[name]=value}if(i+1===match.array.length||name!==match.record.params[i+1]){array.push(assignments[name])}}return{params:assignments,paramsArray:array,route:match.record.route}};internals.decode=function(value){try{return decodeURIComponent(value)}catch(err){return Boom.badRequest("Invalid request path")}};internals.Router.prototype.normalize=function(path){if(path&&path.indexOf("%")!==-1){const uppercase=path.replace(/%[0-9a-fA-F][0-9a-fA-F]/g,encoded=>encoded.toUpperCase());const decoded=uppercase.replace(/%(?:2[146-9A-E]|3[\dABD]|4[\dA-F]|5[\dAF]|6[1-9A-F]|7[\dAE])/g,encoded=>String.fromCharCode(parseInt(encoded.substring(1),16)));path=decoded}if(path&&(path.indexOf("/.")!==-1||path[0]===".")){const hasLeadingSlash=path[0]==="/";const segments=path.split("/");const normalized=[];let segment;for(let i=0;i<segments.length;++i){segment=segments[i];if(segment===".."){normalized.pop()}else if(segment!=="."){normalized.push(segment)}}if(segment==="."||segment===".."){normalized.push("")}path=normalized.join("/");if(path[0]!=="/"&&hasLeadingSlash){path="/"+path}}return path};internals.Router.prototype.analyze=function(path){Hoek.assert(internals.pathRegex.validatePath.test(path),"Invalid path:",path);Hoek.assert(!internals.pathRegex.validatePathEncoded.test(path),"Path cannot contain encoded non-reserved path characters:",path);const pathParts=path.split("/");const segments=[];const params=[];const fingers=[];for(let i=1;i<pathParts.length;++i){let segment=pathParts[i];if(segment.indexOf("{")===-1){segment=this.settings.isCaseSensitive?segment:segment.toLowerCase();fingers.push(segment);segments.push({literal:segment});continue}const parts=internals.parseParams(segment);if(parts.length===1){const item=parts[0];Hoek.assert(params.indexOf(item.name)===-1,"Cannot repeat the same parameter name:",item.name,"in:",path);params.push(item.name);if(item.wildcard){if(item.count){for(let j=0;j<item.count;++j){fingers.push("?");segments.push({});if(j){params.push(item.name)}}}else{fingers.push("#");segments.push({wildcard:true})}}else{fingers.push("?");segments.push({empty:item.empty})}}else{const seg={length:parts.length,first:typeof parts[0]!=="string",segments:[]};let finger="";let regex="^";for(let j=0;j<parts.length;++j){const part=parts[j];if(typeof part==="string"){finger=finger+part;regex=regex+Hoek.escapeRegex(part);seg.segments.push(part)}else{Hoek.assert(params.indexOf(part.name)===-1,"Cannot repeat the same parameter name:",part.name,"in:",path);params.push(part.name);finger=finger+"?";regex=regex+"(."+(part.empty?"*":"+")+")"}}seg.mixed=new RegExp(regex+"$",!this.settings.isCaseSensitive?"i":"");fingers.push(finger);segments.push(seg)}}return{segments:segments,fingerprint:"/"+fingers.join("/"),params:params}};internals.parseParams=function(segment){const parts=[];segment.replace(internals.pathRegex.parseParam,(match,literal,name,wildcard,count,empty)=>{if(literal){parts.push(literal)}else{parts.push({name:name,wildcard:!!wildcard,count:count&&parseInt(count,10),empty:!!empty})}return""});return parts};internals.Router.prototype.table=function(host){const result=[];const collect=table=>{if(!table){return}Object.keys(table).forEach(method=>{table[method].routes.forEach(record=>{result.push(record.route)})})};if(this.vhosts){const vhosts=host?[].concat(host):Object.keys(this.vhosts);for(let i=0;i<vhosts.length;++i){collect(this.vhosts[vhosts[i]])}}collect(this.routes);return result};internals.sort=function(a,b){const aFirst=-1;const bFirst=1;const as=a.segments;const bs=b.segments;if(as.length!==bs.length){return as.length>bs.length?bFirst:aFirst}for(let i=0;;++i){if(as[i].literal){if(bs[i].literal){if(as[i].literal===bs[i].literal){continue}return as[i].literal>bs[i].literal?bFirst:aFirst}return aFirst}if(bs[i].literal){return bFirst}return as[i].wildcard?bFirst:aFirst}}},{"./regex":16,"./segment":17,"@hapi/boom":12,"@hapi/hoek":128}],16:[function(require,module,exports){"use strict";const internals={};exports.generate=function(){const empty="(?:^\\/$)";const legalChars="[\\w\\!\\$&'\\(\\)\\*\\+\\,;\\=\\:@\\-\\.~]";const encoded="%[A-F0-9]{2}";const literalChar="(?:"+legalChars+"|"+encoded+")";const literal=literalChar+"+";const literalOptional=literalChar+"*";const midParam="(?:\\{\\w+(?:\\*[1-9]\\d*)?\\})";const endParam="(?:\\/(?:\\{\\w+(?:(?:\\*(?:[1-9]\\d*)?)|(?:\\?))?\\})?)?";const partialParam="(?:\\{\\w+\\??\\})";const mixedParam="(?:(?:"+literal+partialParam+")+"+literalOptional+")|(?:"+partialParam+"(?:"+literal+partialParam+")+"+literalOptional+")|(?:"+partialParam+literal+")";const segmentContent="(?:"+literal+"|"+midParam+"|"+mixedParam+")";const segment="\\/"+segmentContent;const segments="(?:"+segment+")*";const path="(?:^"+segments+endParam+"$)";const parseParam="("+literal+")|(?:\\{(\\w+)(?:(\\*)(\\d+)?)?(\\?)?\\})";const expressions={parseParam:new RegExp(parseParam,"g"),validatePath:new RegExp(empty+"|"+path),validatePathEncoded:/%(?:2[146-9A-E]|3[\dABD]|4[\dA-F]|5[\dAF]|6[1-9A-F]|7[\dAE])/g};return expressions}},{}],17:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const internals={};exports=module.exports=internals.Segment=function(){this._edge=null;this._fulls=null;this._literals=null;this._param=null;this._mixed=null;this._wildcard=null};internals.Segment.prototype.add=function(segments,record){const current=segments[0];const remaining=segments.slice(1);const isEdge=!remaining.length;const literals=[];let isLiteral=true;for(let i=0;i<segments.length&&isLiteral;++i){isLiteral=segments[i].literal!==undefined;literals.push(segments[i].literal)}if(isLiteral){this._fulls=this._fulls||{};let literal="/"+literals.join("/");if(!record.settings.isCaseSensitive){literal=literal.toLowerCase()}Hoek.assert(!this._fulls[literal],"New route",record.path,"conflicts with existing",this._fulls[literal]&&this._fulls[literal].record.path);this._fulls[literal]={segment:current,record:record}}else if(current.literal!==undefined){this._literals=this._literals||{};const currentLiteral=record.settings.isCaseSensitive?current.literal:current.literal.toLowerCase();this._literals[currentLiteral]=this._literals[currentLiteral]||new internals.Segment;this._literals[currentLiteral].add(remaining,record)}else if(current.wildcard){Hoek.assert(!this._wildcard,"New route",record.path,"conflicts with existing",this._wildcard&&this._wildcard.record.path);Hoek.assert(!this._param||!this._param._wildcard,"New route",record.path,"conflicts with existing",this._param&&this._param._wildcard&&this._param._wildcard.record.path);this._wildcard={segment:current,record:record}}else if(current.mixed){this._mixed=this._mixed||[];let mixed=this._mixedLookup(current);if(!mixed){mixed={segment:current,node:new internals.Segment};this._mixed.push(mixed);this._mixed.sort(internals.mixed)}if(isEdge){Hoek.assert(!mixed.node._edge,"New route",record.path,"conflicts with existing",mixed.node._edge&&mixed.node._edge.record.path);mixed.node._edge={segment:current,record:record}}else{mixed.node.add(remaining,record)}}else{this._param=this._param||new internals.Segment;if(isEdge){Hoek.assert(!this._param._edge,"New route",record.path,"conflicts with existing",this._param._edge&&this._param._edge.record.path);this._param._edge={segment:current,record:record}}else{Hoek.assert(!this._wildcard||!remaining[0].wildcard,"New route",record.path,"conflicts with existing",this._wildcard&&this._wildcard.record.path);this._param.add(remaining,record)}}};internals.Segment.prototype._mixedLookup=function(segment){for(let i=0;i<this._mixed.length;++i){if(internals.mixed({segment:segment},this._mixed[i])===0){return this._mixed[i]}}return null};internals.mixed=function(a,b){const aFirst=-1;const bFirst=1;const as=a.segment;const bs=b.segment;if(as.length!==bs.length){return as.length>bs.length?aFirst:bFirst}if(as.first!==bs.first){return as.first?bFirst:aFirst}for(let i=0;i<as.segments.length;++i){const am=as.segments[i];const bm=bs.segments[i];if(am===bm){continue}if(am.length===bm.length){return am>bm?bFirst:aFirst}return am.length<bm.length?bFirst:aFirst}return 0};internals.Segment.prototype.lookup=function(path,segments,options){let match=null;if(this._fulls){match=this._fulls[options.isCaseSensitive?path:path.toLowerCase()];if(match){return{record:match.record,array:[]}}}const current=segments[0];const nextPath=path.slice(current.length+1);const remainder=segments.length>1?segments.slice(1):null;if(this._literals){const literal=options.isCaseSensitive?current:current.toLowerCase();match=this._literals.hasOwnProperty(literal)&&this._literals[literal];if(match){const record=internals.deeper(match,nextPath,remainder,[],options);if(record){return record}}}if(this._mixed){for(let i=0;i<this._mixed.length;++i){match=this._mixed[i];const params=current.match(match.segment.mixed);if(params){const array=[];for(let j=1;j<params.length;++j){array.push(params[j])}const record=internals.deeper(match.node,nextPath,remainder,array,options);if(record){return record}}}}if(this._param){if(current||this._param._edge&&this._param._edge.segment.empty){const record=internals.deeper(this._param,nextPath,remainder,[current],options);if(record){return record}}}if(this._wildcard){return{record:this._wildcard.record,array:[path.slice(1)]}}return null};internals.deeper=function(match,path,segments,array,options){if(!segments){if(match._edge){return{record:match._edge.record,array:array}}if(match._wildcard){return{record:match._wildcard.record,array:array}}}else{const result=match.lookup(path,segments,options);if(result){return{record:result.record,array:array.concat(result.array)}}}return null}},{"@hapi/hoek":128}],18:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");const internals={maxTimer:2147483647,entrySize:144};internals.defaults={maxByteSize:100*1024*1024,minCleanupIntervalMsec:1e3,cloneBuffersOnGet:false};exports=module.exports=internals.Connection=class{constructor(options={}){Hoek.assert(this.constructor===internals.Connection,"Memory cache client must be instantiated using new");Hoek.assert(options.maxByteSize===undefined||options.maxByteSize>=0,"Invalid cache maxByteSize value");Hoek.assert(options.allowMixedContent===undefined,"allowMixedContent no longer supported");Hoek.assert(options.minCleanupIntervalMsec===undefined||options.minCleanupIntervalMsec<internals.maxTimer,"Invalid cache minCleanupIntervalMsec value");Hoek.assert(options.cloneBuffersOnGet===undefined||typeof options.cloneBuffersOnGet==="boolean","Invalid cloneBuffersOnGet value");this.settings=Hoek.applyToDefaults(internals.defaults,options);this.cache=null;this._timer=null;this._timerDue=null}start(){if(!this.cache){this.cache=new Map;this.byteSize=0}}_scheduleCleanup(msec){const cleanup=()=>{this._timer=null;this._timerDue=null;const now=Date.now();let next=Infinity;for(const[,segment]of this.cache){for(const[id,envelope]of segment){const ttl=envelope.stored+envelope.ttl-now;if(ttl<=0){segment.delete(id);this.byteSize-=envelope.byteSize}else{next=Math.min(next,ttl)}}}if(next!==Infinity){this._scheduleCleanup(next)}};const now=Date.now();const timeout=Math.min(Math.max(this.settings.minCleanupIntervalMsec,msec),internals.maxTimer);if(this._timer){if(this._timerDue-now<msec){return}clearTimeout(this._timer)}this._timerDue=now+timeout;this._timer=setTimeout(cleanup,timeout)}stop(){clearTimeout(this._timer);this._timer=null;this._timerDue=null;this.cache=null;this.byteSize=0}isReady(){return!!this.cache}validateSegmentName(name){if(!name){throw new Boom("Empty string")}if(name.indexOf("\0")!==-1){throw new Boom("Includes null character")}return null}get(key){if(!this.cache){throw new Boom("Connection not started")}const segment=this.cache.get(key.segment);if(!segment){return null}const envelope=segment.get(key.id);if(!envelope){return null}if(envelope.stored+envelope.ttl<Date.now()){this.drop(key);return null}let item=null;if(Buffer.isBuffer(envelope.item)){item=envelope.item;if(this.settings.cloneBuffersOnGet){const copy=Buffer.alloc(item.length);item.copy(copy);item=copy}}else{try{item=JSON.parse(envelope.item)}catch(err){throw new Boom("Bad value content")}}const result={item:item,stored:envelope.stored,ttl:envelope.ttl};return result}set(key,value,ttl){if(!this.cache){throw new Boom("Connection not started")}const envelope=new internals.MemoryCacheEntry(key,value,ttl);let segment=this.cache.get(key.segment);if(!segment){segment=new Map;this.cache.set(key.segment,segment)}const cachedItem=segment.get(key.id);if(cachedItem){this.byteSize-=cachedItem.byteSize}if(this.settings.maxByteSize&&this.byteSize+envelope.byteSize>this.settings.maxByteSize){throw new Boom("Cache size limit reached")}this._scheduleCleanup(ttl);segment.set(key.id,envelope);this.byteSize+=envelope.byteSize}drop(key){if(!this.cache){throw new Boom("Connection not started")}const segment=this.cache.get(key.segment);if(segment){const item=segment.get(key.id);if(item){this.byteSize-=item.byteSize;segment.delete(key.id)}}}};internals.MemoryCacheEntry=class{constructor(key,value,ttl){let valueByteSize=0;if(Buffer.isBuffer(value)){this.item=Buffer.alloc(value.length);value.copy(this.item);valueByteSize=this.item.length}else{this.item=JSON.stringify(value);valueByteSize=Buffer.byteLength(this.item)}this.stored=Date.now();this.ttl=ttl;this.byteSize=internals.entrySize+valueByteSize+Buffer.byteLength(key.segment)+Buffer.byteLength(key.id);this.timeoutId=null}}},{"@hapi/boom":12,"@hapi/hoek":128}],19:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Boom=require("@hapi/boom");const internals={validate:Symbol("validate")};internals.defaults={partition:"catbox"};module.exports=class{constructor(engine,options){Hoek.assert(engine,"Missing catbox client engine");Hoek.assert(typeof engine==="object"||typeof engine==="function","engine must be an engine object or engine prototype (function)");Hoek.assert(typeof engine==="function"||!options,"Can only specify options with function engine config");const settings=Object.assign({},internals.defaults,options);Hoek.assert(settings.partition.match(/^[\w\-]+$/),"Invalid partition name:"+settings.partition);this.connection=typeof engine==="object"?engine:new engine(settings)}async start(){await this.connection.start()}async stop(){await this.connection.stop()}isReady(){return this.connection.isReady()}validateSegmentName(name){return this.connection.validateSegmentName(name)}async get(key){this[internals.validate](key,null);if(key===null){return null}const result=await this.connection.get(key);if(!result||result.item===undefined||result.item===null){return null}const now=Date.now();const expires=result.stored+result.ttl;const ttl=expires-now;if(ttl<=0){return null}const cached={item:result.item,stored:result.stored,ttl:ttl};return cached}async set(key,value,ttl){this[internals.validate](key);if(ttl<=0){return}await this.connection.set(key,value,ttl)}async drop(key){this[internals.validate](key);await this.connection.drop(key)}[internals.validate](key,allow={}){if(!this.isReady()){throw Boom.internal("Disconnected")}const isValidKey=key&&typeof key.id==="string"&&key.segment&&typeof key.segment==="string";if(!isValidKey&&key!==allow){throw Boom.internal("Invalid key")}}}},{"@hapi/boom":12,"@hapi/hoek":128}],20:[function(require,module,exports){"use strict";const Client=require("./client");const Policy=require("./policy");const internals={};exports.Client=Client;exports.Policy=exports.policy=Policy},{"./client":19,"./policy":22}],21:[function(require,module,exports){"use strict";const internals={};exports=module.exports=class{constructor(id,rule){this.id=id;this.timeoutTimer=null;this.count=1;this.rule=rule;this.promise=new Promise((resolve,reject)=>{this.resolve=resolve;this.reject=reject})}join(){++this.count;return this.promise}send(err,value,cached,report){clearTimeout(this.timeoutTimer);if(err&&!cached){this.reject(err);return}if(!this.rule.getDecoratedValue){this.resolve(value);return}if(err){report.error=err}this.resolve({value:value,cached:cached,report:report})}setTimeout(fn,timeoutMs){clearTimeout(this.timeoutTimer);this.timeoutTimer=setTimeout(fn,timeoutMs)}}},{}],22:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const Podium=require("@hapi/podium");const Pending=require("./pending");const internals={day:24*60*60*1e3,events:Podium.validate([{name:"error",channels:["generate","persist"]}])};internals.schema=Joi.object({expiresIn:Joi.number().integer().min(1),expiresAt:Joi.string().regex(/^\d\d?\:\d\d$/),staleIn:[Joi.number().integer().min(1).when("expiresAt",{is:Joi.required(),then:Joi.number().max(864e5-1)}),Joi.func()],staleTimeout:Joi.number().integer().min(1),generateFunc:Joi.func(),generateTimeout:Joi.number().integer().min(1).allow(false),generateOnReadError:Joi.boolean(),generateIgnoreWriteError:Joi.boolean(),dropOnError:Joi.boolean(),pendingGenerateTimeout:Joi.number().integer().min(1),getDecoratedValue:Joi.boolean().default(false),privacy:Joi.any(),cache:Joi.any(),segment:Joi.any(),shared:Joi.any()}).without("expiresIn","expiresAt").with("staleIn","generateFunc").with("generateOnReadError","generateFunc").with("generateIgnoreWriteError","generateFunc").with("dropOnError","generateFunc").and("generateFunc","generateTimeout").and("staleIn","staleTimeout");exports=module.exports=internals.Policy=class{constructor(options,cache,segment){this._events=null;this._cache=cache;this._pendings=new Map;this._pendingGenerateCall=new Map;this.rules(options);this.stats={sets:0,gets:0,hits:0,stales:0,generates:0,errors:0};if(cache){const nameErr=cache.validateSegmentName(segment);Hoek.assert(nameErr===null,"Invalid segment name: "+segment+(nameErr?" ("+nameErr.message+")":""));this._segment=segment}}get events(){if(!this._events){this._events=new Podium(internals.events)}return this._events}_error(source,error){if(!this._events){return}this._events.emit({name:"error",channel:source},{source:source,error:error})}rules(options){this.rule=internals.Policy.compile(options,!!this._cache)}async get(key){++this.stats.gets;const id=key&&typeof key==="object"?key.id:key;let pending=this._pendings.get(id);if(pending!==undefined){return await pending.join()}pending=new Pending(id,this.rule);this._pendings.set(id,pending);try{await this._get(pending,key)}catch(err){this._send(pending,err)}return pending.promise}async _get(pending,key){const report={};const timer=new Hoek.Bench;let cached=null;if(this._cache){try{cached=await this._cache.get({segment:this._segment,id:pending.id})}catch(err){report.error=err;++this.stats.errors;this._error("persist",err)}}report.msec=timer.elapsed();if(cached){report.stored=cached.stored;report.ttl=cached.ttl;const staleIn=typeof this.rule.staleIn==="function"?this.rule.staleIn(cached.stored,cached.ttl):this.rule.staleIn;cached.isStale=staleIn?Date.now()-cached.stored>=staleIn:false;report.isStale=cached.isStale;if(cached.isStale){++this.stats.stales}}if(!this.rule.generateFunc||report.error&&!this.rule.generateOnReadError){this._send(pending,report.error,cached?cached.item:null,cached,report);return}if(cached&&!cached.isStale){this._send(pending,null,cached.item,cached,report);return}await Promise.race([pending.promise,this._generate(pending,key,cached,report)])}_generate(pending,key,cached,report){if(cached){cached.ttl=cached.ttl-this.rule.staleTimeout}if(cached&&cached.ttl>0){pending.setTimeout(()=>this._send(pending,null,cached.item,cached,report),this.rule.staleTimeout)}else if(this.rule.generateTimeout){pending.setTimeout(()=>this._send(pending,Boom.serverUnavailable(),null,null,report),this.rule.generateTimeout)}if(this._pendingGenerateCall.has(pending.id)){return}++this.stats.generates;if(this.rule.pendingGenerateTimeout){const timeout=setTimeout(()=>this._pendingGenerateCall.delete(pending.id),this.rule.pendingGenerateTimeout);this._pendingGenerateCall.set(pending.id,timeout)}return this._callGenerateFunc(pending,key,cached,report)}async _callGenerateFunc(pending,key,cached,report){const flags={};try{var value=await this.rule.generateFunc(key,flags)}catch(err){var generateError=err;this._error("generate",err)}const pendingTimeout=this._pendingGenerateCall.get(pending.id);if(pendingTimeout){clearTimeout(pendingTimeout);this._pendingGenerateCall.delete(pending.id);pending=this._pendings.get(pending.id)||pending}try{if(flags.ttl===0||generateError&&this.rule.dropOnError){await this.drop(pending.id)}else if(!generateError){await this.set(pending.id,value,flags.ttl)}}catch(err){var persistError=err;this._error("persist",err)}const error=generateError||(this.rule.generateIgnoreWriteError?null:persistError);if(cached&&error&&!this.rule.dropOnError){this._send(pending,error,cached.item,cached,report);return}this._send(pending,error,value,null,report)}_send(pending,err,value,cached,report){pending.send(err,value,cached,report);this._pendings.delete(pending.id);if(report&&report.isStale!==undefined){this.stats.hits=this.stats.hits+pending.count}}async set(key,value,ttl){++this.stats.sets;if(!this._cache){return}ttl=ttl||internals.Policy.ttl(this.rule);const id=key&&typeof key==="object"?key.id:key;try{await this._cache.set({segment:this._segment,id:id},value,ttl)}catch(err){++this.stats.errors;throw err}}async drop(key){if(!this._cache){return}const id=key&&typeof key==="object"?key.id:key;try{await this._cache.drop({segment:this._segment,id:id});return}catch(err){++this.stats.errors;throw err}}ttl(created){return internals.Policy.ttl(this.rule,created)}isReady(){if(!this._cache){return false}return this._cache.connection.isReady()}static compile(options,serverSide){const rule={};if(!options||!Object.keys(options).length){return rule}options=Joi.attempt(options,internals.schema,"Invalid cache policy configuration");const hasExpiresIn=options.expiresIn!==undefined&&options.expiresIn!==null;const hasExpiresAt=options.expiresAt!==undefined&&options.expiresAt!==null;Hoek.assert(!hasExpiresIn||!options.staleIn||typeof options.staleIn==="function"||options.staleIn<options.expiresIn,"staleIn must be less than expiresIn");Hoek.assert(!options.staleIn||serverSide,"Cannot use stale options without server-side caching");Hoek.assert(!options.staleTimeout||!hasExpiresIn||options.staleTimeout<options.expiresIn,"staleTimeout must be less than expiresIn");Hoek.assert(!options.staleTimeout||!hasExpiresIn||typeof options.staleIn==="function"||options.staleTimeout<options.expiresIn-options.staleIn,"staleTimeout must be less than the delta between expiresIn and staleIn");Hoek.assert(!options.staleTimeout||!options.pendingGenerateTimeout||options.staleTimeout<options.pendingGenerateTimeout,"pendingGenerateTimeout must be greater than staleTimeout if specified");if(hasExpiresAt){const time=/^(\d\d?):(\d\d)$/.exec(options.expiresAt);rule.expiresAt={hours:parseInt(time[1],10),minutes:parseInt(time[2],10)}}else{rule.expiresIn=options.expiresIn||0}if(options.generateFunc){rule.generateFunc=options.generateFunc;rule.generateTimeout=options.generateTimeout;if(options.staleIn){rule.staleIn=options.staleIn;rule.staleTimeout=options.staleTimeout}rule.dropOnError=options.dropOnError!==undefined?options.dropOnError:true;rule.pendingGenerateTimeout=options.pendingGenerateTimeout!==undefined?options.pendingGenerateTimeout:0}rule.generateOnReadError=options.generateOnReadError!==undefined?options.generateOnReadError:true;rule.generateIgnoreWriteError=options.generateIgnoreWriteError!==undefined?options.generateIgnoreWriteError:true;rule.getDecoratedValue=options.getDecoratedValue;return rule}static ttl(rule,created,now){now=now||Date.now();created=created||now;const age=now-created;if(age<0){return 0}if(rule.expiresIn){return Math.max(rule.expiresIn-age,0)}if(rule.expiresAt){if(age>internals.day){return 0}const expiresAt=new Date(created);expiresAt.setHours(rule.expiresAt.hours);expiresAt.setMinutes(rule.expiresAt.minutes);expiresAt.setSeconds(0);expiresAt.setMilliseconds(0);let expires=expiresAt.getTime();if(expires<=created){expires=expires+internals.day}if(now>=expires){return 0}return expires-now}return 0}}},{"./pending":21,"@hapi/boom":12,"@hapi/hoek":128,"@hapi/joi":29,"@hapi/podium":170}],23:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const DeepEqual=require("@hapi/hoek/lib/deepEqual");const Merge=require("@hapi/hoek/lib/merge");const Cache=require("./cache");const Common=require("./common");const Compile=require("./compile");const Errors=require("./errors");const Extend=require("./extend");const Manifest=require("./manifest");const Messages=require("./messages");const Modify=require("./modify");const Ref=require("./ref");const Trace=require("./trace");const Validator=require("./validator");const Values=require("./values");const internals={};internals.Base=class{constructor(type){this.type=type;this.$_root=null;this._definition={};this._ids=new Modify.Ids;this._preferences=null;this._refs=new Ref.Manager;this._cache=null;this._valids=null;this._invalids=null;this._flags={};this._rules=[];this._singleRules=new Map;this.$_terms={};this.$_temp={ruleset:null,whens:{}}}describe(){Assert(typeof Manifest.describe==="function","Manifest functionality disabled");return Manifest.describe(this)}allow(...values){Common.verifyFlat(values,"allow");return this._values(values,"_valids")}alter(targets){Assert(targets&&typeof targets==="object"&&!Array.isArray(targets),"Invalid targets argument");Assert(!this._inRuleset(),"Cannot set alterations inside a ruleset");const obj=this.clone();obj.$_terms.alterations=obj.$_terms.alterations||[];for(const target in targets){const adjuster=targets[target];Assert(typeof adjuster==="function","Alteration adjuster for",target,"must be a function");obj.$_terms.alterations.push({target:target,adjuster:adjuster})}obj.$_temp.ruleset=false;return obj}cast(to){Assert(to===false||typeof to==="string","Invalid to value");Assert(to===false||this._definition.cast[to],"Type",this.type,"does not support casting to",to);return this.$_setFlag("cast",to===false?undefined:to)}default(value,options){return this._default("default",value,options)}description(desc){Assert(desc&&typeof desc==="string","Description must be a non-empty string");return this.$_setFlag("description",desc)}empty(schema){const obj=this.clone();if(schema!==undefined){schema=obj.$_compile(schema,{override:false})}return obj.$_setFlag("empty",schema,{clone:false})}error(err){Assert(err,"Missing error");Assert(err instanceof Error||typeof err==="function","Must provide a valid Error object or a function");return this.$_setFlag("error",err)}example(example,options={}){Assert(example!==undefined,"Missing example");Common.assertOptions(options,["override"]);return this._inner("examples",example,{single:true,override:options.override})}external(method,description){if(typeof method==="object"){Assert(!description,"Cannot combine options with description");description=method.description;method=method.method}Assert(typeof method==="function","Method must be a function");Assert(description===undefined||description&&typeof description==="string","Description must be a non-empty string");return this._inner("externals",{method:method,description:description},{single:true})}failover(value,options){return this._default("failover",value,options)}forbidden(){return this.presence("forbidden")}id(id){if(!id){return this.$_setFlag("id",undefined)}Assert(typeof id==="string","id must be a non-empty string");Assert(/^[^\.]+$/.test(id),"id cannot contain period character");return this.$_setFlag("id",id)}invalid(...values){return this._values(values,"_invalids")}label(name){Assert(name&&typeof name==="string","Label name must be a non-empty string");return this.$_setFlag("label",name)}meta(meta){Assert(meta!==undefined,"Meta cannot be undefined");return this._inner("metas",meta,{single:true})}note(...notes){Assert(notes.length,"Missing notes");for(const note of notes){Assert(note&&typeof note==="string","Notes must be non-empty strings")}return this._inner("notes",notes)}only(mode=true){Assert(typeof mode==="boolean","Invalid mode:",mode);return this.$_setFlag("only",mode)}optional(){return this.presence("optional")}prefs(prefs){Assert(prefs,"Missing preferences");Assert(prefs.context===undefined,"Cannot override context");Assert(prefs.externals===undefined,"Cannot override externals");Assert(prefs.warnings===undefined,"Cannot override warnings");Assert(prefs.debug===undefined,"Cannot override debug");Common.checkPreferences(prefs);const obj=this.clone();obj._preferences=Common.preferences(obj._preferences,prefs);return obj}presence(mode){Assert(["optional","required","forbidden"].includes(mode),"Unknown presence mode",mode);return this.$_setFlag("presence",mode)}raw(enabled=true){return this.$_setFlag("result",enabled?"raw":undefined)}result(mode){Assert(["raw","strip"].includes(mode),"Unknown result mode",mode);return this.$_setFlag("result",mode)}required(){return this.presence("required")}strict(enabled){const obj=this.clone();const convert=enabled===undefined?false:!enabled;obj._preferences=Common.preferences(obj._preferences,{convert:convert});return obj}strip(enabled=true){return this.$_setFlag("result",enabled?"strip":undefined)}tag(...tags){Assert(tags.length,"Missing tags");for(const tag of tags){Assert(tag&&typeof tag==="string","Tags must be non-empty strings")}return this._inner("tags",tags)}unit(name){Assert(name&&typeof name==="string","Unit name must be a non-empty string");return this.$_setFlag("unit",name)}valid(...values){const obj=this.allow(...values);obj.$_setFlag("only",!!obj._valids,{clone:false});return obj}when(condition,options){const obj=this.clone();if(!obj.$_terms.whens){obj.$_terms.whens=[]}const when=Compile.when(obj,condition,options);if(!["any","link"].includes(obj.type)){const conditions=when.is?[when]:when.switch;for(const item of conditions){Assert(!item.then||item.then.type==="any"||item.then.type===obj.type,"Cannot combine",obj.type,"with",item.then&&item.then.type);Assert(!item.otherwise||item.otherwise.type==="any"||item.otherwise.type===obj.type,"Cannot combine",obj.type,"with",item.otherwise&&item.otherwise.type)}}obj.$_terms.whens.push(when);return obj.$_mutateRebuild()}cache(cache){Assert(!this._inRuleset(),"Cannot set caching inside a ruleset");Assert(!this._cache,"Cannot override schema cache");const obj=this.clone();obj._cache=cache||Cache.provider.provision();obj.$_temp.ruleset=false;return obj}clone(){const obj=Object.create(Object.getPrototypeOf(this));return this._assign(obj)}concat(source){Assert(Common.isSchema(source),"Invalid schema object");Assert(this.type==="any"||source.type==="any"||source.type===this.type,"Cannot merge type",this.type,"with another type:",source.type);Assert(!this._inRuleset(),"Cannot concatenate onto a schema with open ruleset");Assert(!source._inRuleset(),"Cannot concatenate a schema with open ruleset");let obj=this.clone();if(this.type==="any"&&source.type!=="any"){const tmpObj=source.clone();for(const key of Object.keys(obj)){if(key!=="type"){tmpObj[key]=obj[key]}}obj=tmpObj}obj._ids.concat(source._ids);obj._refs.register(source,Ref.toSibling);obj._preferences=obj._preferences?Common.preferences(obj._preferences,source._preferences):source._preferences;obj._valids=Values.merge(obj._valids,source._valids,source._invalids);obj._invalids=Values.merge(obj._invalids,source._invalids,source._valids);for(const name of source._singleRules.keys()){if(obj._singleRules.has(name)){obj._rules=obj._rules.filter(target=>target.keep||target.name!==name);obj._singleRules.delete(name)}}for(const test of source._rules){if(!source._definition.rules[test.method].multi){obj._singleRules.set(test.name,test)}obj._rules.push(test)}if(obj._flags.empty&&source._flags.empty){obj._flags.empty=obj._flags.empty.concat(source._flags.empty);const flags=Object.assign({},source._flags);delete flags.empty;Merge(obj._flags,flags)}else if(source._flags.empty){obj._flags.empty=source._flags.empty;const flags=Object.assign({},source._flags);delete flags.empty;Merge(obj._flags,flags)}else{Merge(obj._flags,source._flags)}for(const key in source.$_terms){const terms=source.$_terms[key];if(!terms){if(!obj.$_terms[key]){obj.$_terms[key]=terms}continue}if(!obj.$_terms[key]){obj.$_terms[key]=terms.slice();continue}obj.$_terms[key]=obj.$_terms[key].concat(terms)}if(this.$_root._tracer){this.$_root._tracer._combine(obj,[this,source])}return obj.$_mutateRebuild()}extend(options){Assert(!options.base,"Cannot extend type with another base");return Extend.type(this,options)}extract(path){path=Array.isArray(path)?path:path.split(".");return this._ids.reach(path)}fork(paths,adjuster){Assert(!this._inRuleset(),"Cannot fork inside a ruleset");let obj=this;for(let path of[].concat(paths)){path=Array.isArray(path)?path:path.split(".");obj=obj._ids.fork(path,adjuster,obj)}obj.$_temp.ruleset=false;return obj}rule(options){const def=this._definition;Common.assertOptions(options,Object.keys(def.modifiers));Assert(this.$_temp.ruleset!==false,"Cannot apply rules to empty ruleset or the last rule added does not support rule properties");const start=this.$_temp.ruleset===null?this._rules.length-1:this.$_temp.ruleset;Assert(start>=0&&start<this._rules.length,"Cannot apply rules to empty ruleset");const obj=this.clone();for(let i=start;i<obj._rules.length;++i){const original=obj._rules[i];const rule=Clone(original);for(const name in options){def.modifiers[name](rule,options[name]);Assert(rule.name===original.name,"Cannot change rule name")}obj._rules[i]=rule;if(obj._singleRules.get(rule.name)===original){obj._singleRules.set(rule.name,rule)}}obj.$_temp.ruleset=false;return obj.$_mutateRebuild()}get ruleset(){Assert(!this._inRuleset(),"Cannot start a new ruleset without closing the previous one");const obj=this.clone();obj.$_temp.ruleset=obj._rules.length;return obj}get $(){return this.ruleset}tailor(targets){targets=[].concat(targets);Assert(!this._inRuleset(),"Cannot tailor inside a ruleset");let obj=this;if(this.$_terms.alterations){for(const{target,adjuster}of this.$_terms.alterations){if(targets.includes(target)){obj=adjuster(obj);Assert(Common.isSchema(obj),"Alteration adjuster for",target,"failed to return a schema object")}}}obj=obj.$_modify({each:item=>item.tailor(targets),ref:false});obj.$_temp.ruleset=false;return obj.$_mutateRebuild()}tracer(){return Trace.location?Trace.location(this):this}validate(value,options){return Validator.entry(value,this,options)}validateAsync(value,options){return Validator.entryAsync(value,this,options)}$_addRule(options){if(typeof options==="string"){options={name:options}}Assert(options&&typeof options==="object","Invalid options");Assert(options.name&&typeof options.name==="string","Invalid rule name");for(const key in options){Assert(key[0]!=="_","Cannot set private rule properties")}const rule=Object.assign({},options);rule._resolve=[];rule.method=rule.method||rule.name;const definition=this._definition.rules[rule.method];const args=rule.args;Assert(definition,"Unknown rule",rule.method);const obj=this.clone();if(args){Assert(Object.keys(args).length===1||Object.keys(args).length===this._definition.rules[rule.name].args.length,"Invalid rule definition for",this.type,rule.name);for(const key in args){let arg=args[key];if(arg===undefined){delete args[key];continue}if(definition.argsByName){const resolver=definition.argsByName.get(key);if(resolver.ref&&Common.isResolvable(arg)){rule._resolve.push(key);obj.$_mutateRegister(arg)}else{if(resolver.normalize){arg=resolver.normalize(arg);args[key]=arg}if(resolver.assert){const error=Common.validateArg(arg,key,resolver);Assert(!error,error,"or reference")}}}args[key]=arg}}if(!definition.multi){obj._ruleRemove(rule.name,{clone:false});obj._singleRules.set(rule.name,rule)}if(obj.$_temp.ruleset===false){obj.$_temp.ruleset=null}if(definition.priority){obj._rules.unshift(rule)}else{obj._rules.push(rule)}return obj}$_compile(schema,options){return Compile.schema(this.$_root,schema,options)}$_createError(code,value,local,state,prefs,options={}){const flags=options.flags!==false?this._flags:{};const messages=options.messages?Messages.merge(this._definition.messages,options.messages):this._definition.messages;return new Errors.Report(code,value,local,flags,messages,state,prefs)}$_getFlag(name){return this._flags[name]}$_getRule(name){return this._singleRules.get(name)}$_mapLabels(path){path=Array.isArray(path)?path:path.split(".");return this._ids.labels(path)}$_match(value,state,prefs,overrides){prefs=Object.assign({},prefs);prefs.abortEarly=true;prefs._externals=false;state.snapshot();const result=!Validator.validate(value,this,state,prefs,overrides).errors;state.restore();return result}$_modify(options){Common.assertOptions(options,["each","once","ref","schema"]);return Modify.schema(this,options)||this}$_mutateRebuild(){Assert(!this._inRuleset(),"Cannot add this rule inside a ruleset");this._refs.reset();this._ids.reset();const each=(item,{source,name,path,key})=>{const family=this._definition[source][name]&&this._definition[source][name].register;if(family!==false){this.$_mutateRegister(item,{family:family,key:key})}};this.$_modify({each:each});if(this._definition.rebuild){this._definition.rebuild(this)}this.$_temp.ruleset=false;return this}$_mutateRegister(schema,{family,key}={}){this._refs.register(schema,family);this._ids.register(schema,{key:key})}$_property(name){return this._definition.properties[name]}$_reach(path){return this._ids.reach(path)}$_rootReferences(){return this._refs.roots()}$_setFlag(name,value,options={}){Assert(name[0]==="_"||!this._inRuleset(),"Cannot set flag inside a ruleset");const flag=this._definition.flags[name]||{};if(DeepEqual(value,flag.default)){value=undefined}if(DeepEqual(value,this._flags[name])){return this}const obj=options.clone!==false?this.clone():this;if(value!==undefined){obj._flags[name]=value;obj.$_mutateRegister(value)}else{delete obj._flags[name]}if(name[0]!=="_"){obj.$_temp.ruleset=false}return obj}$_validate(value,state,prefs){return Validator.validate(value,this,state,prefs)}_assign(target){target.type=this.type;target.$_root=this.$_root;target.$_temp=Object.assign({},this.$_temp);target.$_temp.whens={};target._ids=this._ids.clone();target._preferences=this._preferences;target._valids=this._valids&&this._valids.clone();target._invalids=this._invalids&&this._invalids.clone();target._rules=this._rules.slice();target._singleRules=Clone(this._singleRules,{shallow:true});target._refs=this._refs.clone();target._flags=Object.assign({},this._flags);target._cache=null;target.$_terms={};for(const key in this.$_terms){target.$_terms[key]=this.$_terms[key]?this.$_terms[key].slice():null}target.$_super={};for(const override in this.$_super){target.$_super[override]=this._super[override].bind(target)}return target}_default(flag,value,options={}){Common.assertOptions(options,"literal");Assert(value!==undefined,"Missing",flag,"value");Assert(typeof value==="function"||!options.literal,"Only function value supports literal option");if(typeof value==="function"&&options.literal){value={[Common.symbols.literal]:true,literal:value}}const obj=this.$_setFlag(flag,value);return obj}_generate(value,state,prefs){if(!this.$_terms.whens){return{schema:this}}const whens=[];const ids=[];for(let i=0;i<this.$_terms.whens.length;++i){const when=this.$_terms.whens[i];if(when.concat){whens.push(when.concat);ids.push(`${i}.concat`);continue}const input=when.ref?when.ref.resolve(value,state,prefs):value;const tests=when.is?[when]:when.switch;const before=ids.length;for(let j=0;j<tests.length;++j){const{is,then,otherwise}=tests[j];const baseId=`${i}${when.switch?"."+j:""}`;if(is.$_match(input,state.nest(is,`${baseId}.is`),prefs)){if(then){const localState=state.localize([...state.path,`${baseId}.then`],state.ancestors,state.schemas);const{schema:generated,id}=then._generate(value,localState,prefs);whens.push(generated);ids.push(`${baseId}.then${id?`(${id})`:""}`);break}}else if(otherwise){const localState=state.localize([...state.path,`${baseId}.otherwise`],state.ancestors,state.schemas);const{schema:generated,id}=otherwise._generate(value,localState,prefs);whens.push(generated);ids.push(`${baseId}.otherwise${id?`(${id})`:""}`);break}}if(when.break&&ids.length>before){break}}const id=ids.join(", ");state.mainstay.tracer.debug(state,"rule","when",id);if(!id){return{schema:this}}if(!state.mainstay.tracer.active&&this.$_temp.whens[id]){return{schema:this.$_temp.whens[id],id:id}}let obj=this;if(this._definition.generate){obj=this._definition.generate(this,value,state,prefs)}for(const when of whens){obj=obj.concat(when)}if(this.$_root._tracer){this.$_root._tracer._combine(obj,[this,...whens])}this.$_temp.whens[id]=obj;return{schema:obj,id:id}}_inner(type,values,options={}){Assert(!this._inRuleset(),`Cannot set ${type} inside a ruleset`);const obj=this.clone();if(!obj.$_terms[type]||options.override){obj.$_terms[type]=[]}if(options.single){obj.$_terms[type].push(values)}else{obj.$_terms[type].push(...values)}obj.$_temp.ruleset=false;return obj}_inRuleset(){return this.$_temp.ruleset!==null&&this.$_temp.ruleset!==false}_ruleRemove(name,options={}){if(!this._singleRules.has(name)){return this}const obj=options.clone!==false?this.clone():this;obj._singleRules.delete(name);const filtered=[];for(let i=0;i<obj._rules.length;++i){const test=obj._rules[i];if(test.name===name&&!test.keep){if(obj._inRuleset()&&i<obj.$_temp.ruleset){--obj.$_temp.ruleset}continue}filtered.push(test)}obj._rules=filtered;return obj}_values(values,key){Common.verifyFlat(values,key.slice(1,-1));const obj=this.clone();const override=values[0]===Common.symbols.override;if(override){values=values.slice(1)}if(!obj[key]&&values.length){obj[key]=new Values}else if(override){obj[key]=values.length?new Values:null;obj.$_mutateRebuild()}if(!obj[key]){return obj}if(override){obj[key].override()}for(const value of values){Assert(value!==undefined,"Cannot call allow/valid/invalid with undefined");Assert(value!==Common.symbols.override,"Override must be the first value");const other=key==="_invalids"?"_valids":"_invalids";if(obj[other]){obj[other].remove(value);if(!obj[other].length){Assert(key==="_valids"||!obj._flags.only,"Setting invalid value",value,"leaves schema rejecting all values due to previous valid rule");obj[other]=null}}obj[key].add(value,obj._refs)}return obj}};internals.Base.prototype.isImmutable=true;internals.Base.prototype[Common.symbols.any]={version:Common.version,compile:Compile.compile,root:"$_root"};internals.Base.prototype.deny=internals.Base.prototype.invalid;internals.Base.prototype.disallow=internals.Base.prototype.invalid;internals.Base.prototype.equal=internals.Base.prototype.valid;internals.Base.prototype.exist=internals.Base.prototype.required;internals.Base.prototype.not=internals.Base.prototype.invalid;internals.Base.prototype.options=internals.Base.prototype.prefs;internals.Base.prototype.preferences=internals.Base.prototype.prefs;module.exports=new internals.Base},{"./cache":24,"./common":25,"./compile":26,"./errors":27,"./extend":28,"./manifest":30,"./messages":31,"./modify":32,"./ref":33,"./trace":37,"./validator":53,"./values":54,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/merge":131}],24:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Common=require("./common");const internals={max:1e3,supported:new Set(["undefined","boolean","number","string"])};exports.provider={provision(options){return new internals.Cache(options)}};internals.Cache=class{constructor(options={}){Common.assertOptions(options,["max"]);Assert(options.max===undefined||options.max&&options.max>0&&isFinite(options.max),"Invalid max cache size");this._max=options.max||internals.max;this._map=new Map;this._list=new internals.List}get length(){return this._map.size}set(key,value){if(key!==null&&!internals.supported.has(typeof key)){return}let node=this._map.get(key);if(node){node.value=value;this._list.first(node);return}node=this._list.unshift({key:key,value:value});this._map.set(key,node);this._compact()}get(key){const node=this._map.get(key);if(node){this._list.first(node);return Clone(node.value)}}_compact(){if(this._map.size>this._max){const node=this._list.pop();this._map.delete(node.key)}}};internals.List=class{constructor(){this.tail=null;this.head=null}unshift(node){node.next=null;node.prev=this.head;if(this.head){this.head.next=node}this.head=node;if(!this.tail){this.tail=node}return node}first(node){if(node===this.head){return}this._remove(node);this.unshift(node)}pop(){return this._remove(this.tail)}_remove(node){const{next,prev}=node;next.prev=prev;if(prev){prev.next=next}if(node===this.tail){this.tail=next}node.prev=null;node.next=null;return node}}},{"./common":25,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118}],25:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const AssertError=require("@hapi/hoek/lib/error");const Pkg=require("../package.json");let Messages;let Schemas;const internals={isoDate:/^(?:[-+]\d{2})?(?:\d{4}(?!\d{2}\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\1(?:[12]\d|0[1-9]|3[01]))?|W(?:[0-4]\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\d|[12]\d{2}|3(?:[0-5]\d|6[1-6])))(?![T]$|[T][\d]+Z$)(?:[T\s](?:(?:(?:[01]\d|2[0-3])(?:(:?)[0-5]\d)?|24\:?00)(?:[.,]\d+(?!:))?)(?:\2[0-5]\d(?:[.,]\d+)?)?(?:[Z]|(?:[+-])(?:[01]\d|2[0-3])(?::?[0-5]\d)?)?)?)?$/};exports.version=Pkg.version;exports.defaults={abortEarly:true,allowUnknown:false,cache:true,context:null,convert:true,dateFormat:"iso",errors:{escapeHtml:false,label:"path",language:null,render:true,stack:false,wrapArrays:true},externals:true,messages:{},nonEnumerables:false,noDefaults:false,presence:"optional",skipFunctions:false,stripUnknown:false,warnings:false};exports.symbols={any:Symbol.for("@hapi/joi/schema"),arraySingle:Symbol("arraySingle"),deepDefault:Symbol("deepDefault"),literal:Symbol("literal"),override:Symbol("override"),prefs:Symbol("prefs"),ref:Symbol("ref"),values:Symbol("values"),template:Symbol("template")};exports.assertOptions=function(options,keys,name="Options"){Assert(options&&typeof options==="object"&&!Array.isArray(options),"Options must be of type object");const unknownKeys=Object.keys(options).filter(k=>!keys.includes(k));Assert(unknownKeys.length===0,`${name} contain unknown keys: ${unknownKeys}`)};exports.checkPreferences=function(prefs){Schemas=Schemas||require("./schemas");const result=Schemas.preferences.validate(prefs);if(result.error){throw new AssertError([result.error.details[0].message])}};exports.compare=function(a,b,operator){switch(operator){case"=":return a===b;case">":return a>b;case"<":return a<b;case">=":return a>=b;case"<=":return a<=b}};exports.default=function(value,defaultValue){return value===undefined?defaultValue:value};exports.isIsoDate=function(date){return internals.isoDate.test(date)};exports.isNumber=function(value){return typeof value==="number"&&!isNaN(value)};exports.isResolvable=function(obj){if(!obj){return false}return obj[exports.symbols.ref]||obj[exports.symbols.template]};exports.isSchema=function(schema,options={}){const any=schema&&schema[exports.symbols.any];if(!any){return false}Assert(options.legacy||any.version===exports.version,"Cannot mix different versions of joi schemas");return true};exports.isValues=function(obj){return obj[exports.symbols.values]};exports.limit=function(value){return Number.isSafeInteger(value)&&value>=0};exports.preferences=function(target,source){Messages=Messages||require("./messages");target=target||{};source=source||{};const merged=Object.assign({},target,source);if(source.errors&&target.errors){merged.errors=Object.assign({},target.errors,source.errors)}if(source.messages){merged.messages=Messages.compile(source.messages,target.messages)}delete merged[exports.symbols.prefs];return merged};exports.tryWithPath=function(fn,key,options={}){try{return fn()}catch(err){if(err.path!==undefined){err.path=key+"."+err.path}else{err.path=key}if(options.append){err.message=`${err.message} (${err.path})`}throw err}};exports.validateArg=function(value,label,{assert,message}){if(exports.isSchema(assert)){const result=assert.validate(value);if(!result.error){return}return result.error.message}else if(!assert(value)){return label?`${label} ${message}`:message}};exports.verifyFlat=function(args,method){for(const arg of args){Assert(!Array.isArray(arg),"Method no longer accepts array arguments:",method)}}},{"../package.json":55,"./messages":31,"./schemas":34,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/error":121}],26:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Common=require("./common");const Ref=require("./ref");const internals={};exports.schema=function(Joi,config,options={}){Common.assertOptions(options,["appendPath","override"]);try{return internals.schema(Joi,config,options)}catch(err){if(options.appendPath&&err.path!==undefined){err.message=`${err.message} (${err.path})`}throw err}};internals.schema=function(Joi,config,options){Assert(config!==undefined,"Invalid undefined schema");if(Array.isArray(config)){Assert(config.length,"Invalid empty array schema");if(config.length===1){config=config[0]}}const valid=(base,...values)=>{if(options.override!==false){return base.valid(Joi.override,...values)}return base.valid(...values)};if(internals.simple(config)){return valid(Joi,config)}if(typeof config==="function"){return Joi.custom(config)}Assert(typeof config==="object","Invalid schema content:",typeof config);if(Common.isResolvable(config)){return valid(Joi,config)}if(Common.isSchema(config)){return config}if(Array.isArray(config)){for(const item of config){if(!internals.simple(item)){return Joi.alternatives().try(...config)}}return valid(Joi,...config)}if(config instanceof RegExp){return Joi.string().regex(config)}if(config instanceof Date){return valid(Joi.date(),config)}Assert(Object.getPrototypeOf(config)===Object.getPrototypeOf({}),"Schema can only contain plain objects");return Joi.object().keys(config)};exports.ref=function(id,options){return Ref.isRef(id)?id:Ref.create(id,options)};exports.compile=function(root,schema,options={}){Common.assertOptions(options,["legacy"]);const any=schema&&schema[Common.symbols.any];if(any){Assert(options.legacy||any.version===Common.version,"Cannot mix different versions of joi schemas:",any.version,Common.version);return schema}if(typeof schema!=="object"||!options.legacy){return exports.schema(root,schema,{appendPath:true})}const compiler=internals.walk(schema);if(!compiler){return exports.schema(root,schema,{appendPath:true})}return compiler.compile(compiler.root,schema)};internals.walk=function(schema){if(typeof schema!=="object"){return null}if(Array.isArray(schema)){for(const item of schema){const compiler=internals.walk(item);if(compiler){return compiler}}return null}const any=schema[Common.symbols.any];if(any){return{root:schema[any.root],compile:any.compile}}Assert(Object.getPrototypeOf(schema)===Object.getPrototypeOf({}),"Schema can only contain plain objects");for(const key in schema){const compiler=internals.walk(schema[key]);if(compiler){return compiler}}return null};internals.simple=function(value){return value===null||["boolean","string","number"].includes(typeof value)};exports.when=function(schema,condition,options){if(options===undefined){Assert(condition&&typeof condition==="object","Missing options");options=condition;condition=Ref.create(".")}if(Array.isArray(options)){options={switch:options}}Common.assertOptions(options,["is","not","then","otherwise","switch","break"]);if(Common.isSchema(condition)){Assert(options.is===undefined,'"is" can not be used with a schema condition');Assert(options.not===undefined,'"not" can not be used with a schema condition');Assert(options.switch===undefined,'"switch" can not be used with a schema condition');return internals.condition(schema,{is:condition,then:options.then,otherwise:options.otherwise,break:options.break})}Assert(Ref.isRef(condition)||typeof condition==="string","Invalid condition:",condition);Assert(options.not===undefined||options.is===undefined,'Cannot combine "is" with "not"');if(options.switch===undefined){let rule=options;if(options.not!==undefined){rule={is:options.not,then:options.otherwise,otherwise:options.then,break:options.break}}let is=rule.is!==undefined?schema.$_compile(rule.is):schema.$_root.invalid(null,false,0,"").required();Assert(rule.then!==undefined||rule.otherwise!==undefined,'options must have at least one of "then", "otherwise", or "switch"');Assert(rule.break===undefined||rule.then===undefined||rule.otherwise===undefined,"Cannot specify then, otherwise, and break all together");if(options.is!==undefined&&!Ref.isRef(options.is)&&!Common.isSchema(options.is)){is=is.required()}return internals.condition(schema,{ref:exports.ref(condition),is:is,then:rule.then,otherwise:rule.otherwise,break:rule.break})}Assert(Array.isArray(options.switch),'"switch" must be an array');Assert(options.is===undefined,'Cannot combine "switch" with "is"');Assert(options.not===undefined,'Cannot combine "switch" with "not"');Assert(options.then===undefined,'Cannot combine "switch" with "then"');const rule={ref:exports.ref(condition),switch:[],break:options.break};for(let i=0;i<options.switch.length;++i){const test=options.switch[i];const last=i===options.switch.length-1;Common.assertOptions(test,last?["is","then","otherwise"]:["is","then"]);Assert(test.is!==undefined,'Switch statement missing "is"');Assert(test.then!==undefined,'Switch statement missing "then"');const item={is:schema.$_compile(test.is),then:schema.$_compile(test.then)};if(!Ref.isRef(test.is)&&!Common.isSchema(test.is)){item.is=item.is.required()}if(last){Assert(options.otherwise===undefined||test.otherwise===undefined,'Cannot specify "otherwise" inside and outside a "switch"');const otherwise=options.otherwise!==undefined?options.otherwise:test.otherwise;if(otherwise!==undefined){Assert(rule.break===undefined,"Cannot specify both otherwise and break");item.otherwise=schema.$_compile(otherwise)}}rule.switch.push(item)}return rule};internals.condition=function(schema,condition){for(const key of["then","otherwise"]){if(condition[key]===undefined){delete condition[key]}else{condition[key]=schema.$_compile(condition[key])}}return condition}},{"./common":25,"./ref":33,"@hapi/hoek/lib/assert":115}],27:[function(require,module,exports){"use strict";const Clone=require("@hapi/hoek/lib/clone");const Common=require("./common");const Template=require("./template");const internals={annotations:Symbol("annotations")};exports.Report=class{constructor(code,value,local,flags,messages,state,prefs){this.code=code;this.flags=flags;this.messages=messages;this.path=state.path;this.prefs=prefs;this.state=state;this.value=value;this.message=null;this.template=null;this.local=local||{};this.local.label=exports.label(this.flags,this.state,this.prefs,this.messages);if(this.value!==undefined&&!this.local.hasOwnProperty("value")){this.local.value=this.value}if(this.path.length){const key=this.path[this.path.length-1];if(typeof key!=="object"){this.local.key=key}}}_setTemplate(template){this.template=template;if(!this.flags.label&&this.path.length===0){const localized=this._template(this.template,"root");if(localized){this.local.label=localized}}}toString(){if(this.message){return this.message}const code=this.code;if(!this.prefs.errors.render){return this.code}const template=this._template(this.template)||this._template(this.prefs.messages)||this._template(this.messages);if(template===undefined){return`Error code "${code}" is not defined, your custom type is missing the correct messages definition`}this.message=template.render(this.value,this.state,this.prefs,this.local,{errors:this.prefs.errors,messages:[this.prefs.messages,this.messages]});if(!this.prefs.errors.label){this.message=this.message.replace(/^"" /,"").trim()}return this.message}_template(messages,code){return exports.template(this.value,messages,code||this.code,this.state,this.prefs)}};exports.path=function(path){let label="";for(const segment of path){if(typeof segment==="object"){continue}if(typeof segment==="string"){if(label){label+="."}label+=segment}else{label+=`[${segment}]`}}return label};exports.template=function(value,messages,code,state,prefs){if(!messages){return}if(Template.isTemplate(messages)){return code!=="root"?messages:null}let lang=prefs.errors.language;if(Common.isResolvable(lang)){lang=lang.resolve(value,state,prefs)}if(lang&&messages[lang]&&messages[lang][code]!==undefined){return messages[lang][code]}return messages[code]};exports.label=function(flags,state,prefs,messages){if(flags.label){return flags.label}if(!prefs.errors.label){return""}let path=state.path;if(prefs.errors.label==="key"&&state.path.length>1){path=state.path.slice(-1)}return exports.path(path)||exports.template(null,prefs.messages,"root",state,prefs)||messages&&exports.template(null,messages,"root",state,prefs)||"value"};exports.process=function(errors,original,prefs){if(!errors){return null}const{override,message,details}=exports.details(errors);if(override){return override}if(prefs.errors.stack){return new exports.ValidationError(message,details,original)}const limit=Error.stackTraceLimit;Error.stackTraceLimit=0;const validationError=new exports.ValidationError(message,details,original);Error.stackTraceLimit=limit;return validationError};exports.details=function(errors,options={}){let messages=[];const details=[];for(const item of errors){if(item instanceof Error){if(options.override!==false){return{override:item}}const message=item.toString();messages.push(message);details.push({message:message,type:"override",context:{error:item}});continue}const message=item.toString();messages.push(message);details.push({message:message,path:item.path.filter(v=>typeof v!=="object"),type:item.code,context:item.local})}if(messages.length>1){messages=[...new Set(messages)]}return{message:messages.join(". "),details:details}};exports.ValidationError=class extends Error{constructor(message,details,original){super(message);this._original=original;this.details=details}annotate(stripColorCodes){if(!this._original||typeof this._original!=="object"){return this.details[0].message}const redFgEscape=stripColorCodes?"":"[31m";const redBgEscape=stripColorCodes?"":"[41m";const endColor=stripColorCodes?"":"[0m";const obj=Clone(this._original);for(let i=this.details.length-1;i>=0;--i){const pos=i+1;const error=this.details[i];const path=error.path;let node=obj;for(let j=0;;++j){const seg=path[j];if(Common.isSchema(node)){node=node.clone()}if(j+1<path.length&&typeof node[seg]!=="string"){node=node[seg]}else{const refAnnotations=node[internals.annotations]||{errors:{},missing:{}};node[internals.annotations]=refAnnotations;const cacheKey=seg||error.context.key;if(node[seg]!==undefined){refAnnotations.errors[cacheKey]=refAnnotations.errors[cacheKey]||[];refAnnotations.errors[cacheKey].push(pos)}else{refAnnotations.missing[cacheKey]=pos}break}}}const replacers={key:/_\$key\$_([, \d]+)_\$end\$_"/g,missing:/"_\$miss\$_([^|]+)\|(\d+)_\$end\$_": "__missing__"/g,arrayIndex:/\s*"_\$idx\$_([, \d]+)_\$end\$_",?\n(.*)/g,specials:/"\[(NaN|Symbol.*|-?Infinity|function.*|\(.*)]"/g};let message=internals.safeStringify(obj,2).replace(replacers.key,($0,$1)=>`" ${redFgEscape}[${$1}]${endColor}`).replace(replacers.missing,($0,$1,$2)=>`${redBgEscape}"${$1}"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`).replace(replacers.arrayIndex,($0,$1,$2)=>`\n${$2} ${redFgEscape}[${$1}]${endColor}`).replace(replacers.specials,($0,$1)=>$1);message=`${message}\n${redFgEscape}`;for(let i=0;i<this.details.length;++i){const pos=i+1;message=`${message}\n[${pos}] ${this.details[i].message}`}message=message+endColor;return message}};exports.ValidationError.prototype.isJoi=true;exports.ValidationError.prototype.name="ValidationError";internals.safeStringify=function(obj,spaces){return JSON.stringify(obj,internals.serializer(),spaces)};internals.serializer=function(){const keys=[];const stack=[];const cycleReplacer=(key,value)=>{if(stack[0]===value){return"[Circular ~]"}return"[Circular ~."+keys.slice(0,stack.indexOf(value)).join(".")+"]"};return function(key,value){if(stack.length>0){const thisPos=stack.indexOf(this);if(~thisPos){stack.length=thisPos+1;keys.length=thisPos+1;keys[thisPos]=key}else{stack.push(this);keys.push(key)}if(~stack.indexOf(value)){value=cycleReplacer.call(this,key,value)}}else{stack.push(value)}if(value){const annotations=value[internals.annotations];if(annotations){if(Array.isArray(value)){const annotated=[];for(let i=0;i<value.length;++i){if(annotations.errors[i]){annotated.push(`_$idx$_${annotations.errors[i].sort().join(", ")}_$end$_`)}annotated.push(value[i])}value=annotated}else{for(const errorKey in annotations.errors){value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(", ")}_$end$_`]=value[errorKey];value[errorKey]=undefined}for(const missingKey in annotations.missing){value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`]="__missing__"}}return value}}if(value===Infinity||value===-Infinity||Number.isNaN(value)||typeof value==="function"||typeof value==="symbol"){return"["+value.toString()+"]"}return value}}},{"./common":25,"./template":36,"@hapi/hoek/lib/clone":118}],28:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Common=require("./common");const Messages=require("./messages");const internals={};exports.type=function(from,options){const base=Object.getPrototypeOf(from);const prototype=Clone(base);const schema=from._assign(Object.create(prototype));const def=Object.assign({},options);delete def.base;prototype._definition=def;const parent=base._definition||{};def.messages=Messages.merge(parent.messages,def.messages);def.properties=Object.assign({},parent.properties,def.properties);schema.type=def.type;def.flags=Object.assign({},parent.flags,def.flags);const terms=Object.assign({},parent.terms);if(def.terms){for(const name in def.terms){const term=def.terms[name];Assert(schema.$_terms[name]===undefined,"Invalid term override for",def.type,name);schema.$_terms[name]=term.init;terms[name]=term}}def.terms=terms;if(!def.args){def.args=parent.args}def.prepare=internals.prepare(def.prepare,parent.prepare);if(def.coerce){if(typeof def.coerce==="function"){def.coerce={method:def.coerce}}if(def.coerce.from&&!Array.isArray(def.coerce.from)){def.coerce={method:def.coerce.method,from:[].concat(def.coerce.from)}}}def.coerce=internals.coerce(def.coerce,parent.coerce);def.validate=internals.validate(def.validate,parent.validate);const rules=Object.assign({},parent.rules);if(def.rules){for(const name in def.rules){const rule=def.rules[name];Assert(typeof rule==="object","Invalid rule definition for",def.type,name);let method=rule.method;if(method===undefined){method=function(){return this.$_addRule(name)}}if(method){Assert(!prototype[name],"Rule conflict in",def.type,name);prototype[name]=method}Assert(!rules[name],"Rule conflict in",def.type,name);rules[name]=rule;if(rule.alias){const aliases=[].concat(rule.alias);for(const alias of aliases){prototype[alias]=rule.method}}if(rule.args){rule.argsByName=new Map;rule.args=rule.args.map(arg=>{if(typeof arg==="string"){arg={name:arg}}Assert(!rule.argsByName.has(arg.name),"Duplicated argument name",arg.name);if(Common.isSchema(arg.assert)){arg.assert=arg.assert.strict().label(arg.name)}rule.argsByName.set(arg.name,arg);return arg})}}}def.rules=rules;const modifiers=Object.assign({},parent.modifiers);if(def.modifiers){for(const name in def.modifiers){Assert(!prototype[name],"Rule conflict in",def.type,name);const modifier=def.modifiers[name];Assert(typeof modifier==="function","Invalid modifier definition for",def.type,name);const method=function(arg){return this.rule({[name]:arg})};prototype[name]=method;modifiers[name]=modifier}}def.modifiers=modifiers;if(def.overrides){prototype._super=base;schema.$_super={};for(const override in def.overrides){Assert(base[override],"Cannot override missing",override);schema.$_super[override]=base[override].bind(schema)}Object.assign(prototype,def.overrides)}def.cast=Object.assign({},parent.cast,def.cast);const manifest=Object.assign({},parent.manifest,def.manifest);manifest.build=internals.build(def.manifest&&def.manifest.build,parent.manifest&&parent.manifest.build);def.manifest=manifest;def.rebuild=internals.rebuild(def.rebuild,parent.rebuild);return schema};internals.build=function(child,parent){if(!child||!parent){return child||parent}return function(obj,desc){return parent(child(obj,desc),desc)}};internals.coerce=function(child,parent){if(!child||!parent){return child||parent}return{from:child.from&&parent.from?[...new Set([...child.from,...parent.from])]:null,method(value,helpers){let coerced;if(!parent.from||parent.from.includes(typeof value)){coerced=parent.method(value,helpers);if(coerced){if(coerced.errors||coerced.value===undefined){return coerced}value=coerced.value}}if(!child.from||child.from.includes(typeof value)){const own=child.method(value,helpers);if(own){return own}}return coerced}}};internals.prepare=function(child,parent){if(!child||!parent){return child||parent}return function(value,helpers){const prepared=child(value,helpers);if(prepared){if(prepared.errors||prepared.value===undefined){return prepared}value=prepared.value}return parent(value,helpers)||prepared}};internals.rebuild=function(child,parent){if(!child||!parent){return child||parent}return function(schema){parent(schema);child(schema)}};internals.validate=function(child,parent){if(!child||!parent){return child||parent}return function(value,helpers){const result=parent(value,helpers);if(result){if(result.errors&&(!Array.isArray(result.errors)||result.errors.length)){return result}value=result.value}return child(value,helpers)||result}}},{"./common":25,"./messages":31,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118}],29:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Cache=require("./cache");const Common=require("./common");const Compile=require("./compile");const Errors=require("./errors");const Extend=require("./extend");const Manifest=require("./manifest");const Ref=require("./ref");const Template=require("./template");const Trace=require("./trace");let Schemas;const internals={types:{alternatives:require("./types/alternatives"),any:require("./types/any"),array:require("./types/array"),boolean:require("./types/boolean"),date:require("./types/date"),function:require("./types/function"),link:require("./types/link"),number:require("./types/number"),object:require("./types/object"),string:require("./types/string"),symbol:require("./types/symbol")},aliases:{alt:"alternatives",bool:"boolean",func:"function"}};if(Buffer){internals.types.binary=require("./types/binary")}internals.root=function(){const root={_types:new Set(Object.keys(internals.types))};for(const type of root._types){root[type]=function(...args){Assert(!args.length||["alternatives","link","object"].includes(type),"The",type,"type does not allow arguments");return internals.generate(this,internals.types[type],args)}}for(const method of["allow","custom","disallow","equal","exist","forbidden","invalid","not","only","optional","options","prefs","preferences","required","strip","valid","when"]){root[method]=function(...args){return this.any()[method](...args)}}Object.assign(root,internals.methods);for(const alias in internals.aliases){const target=internals.aliases[alias];root[alias]=root[target]}root.x=root.expression;if(Trace.setup){Trace.setup(root)}return root};internals.methods={ValidationError:Errors.ValidationError,version:Common.version,cache:Cache.provider,assert(value,schema,...args){internals.assert(value,schema,true,args)},attempt(value,schema,...args){return internals.assert(value,schema,false,args)},build(desc){Assert(typeof Manifest.build==="function","Manifest functionality disabled");return Manifest.build(this,desc)},checkPreferences(prefs){Common.checkPreferences(prefs)},compile(schema,options){return Compile.compile(this,schema,options)},defaults(modifier){Assert(typeof modifier==="function","modifier must be a function");const joi=Object.assign({},this);for(const type of joi._types){const schema=modifier(joi[type]());Assert(Common.isSchema(schema),"modifier must return a valid schema object");joi[type]=function(...args){return internals.generate(this,schema,args)}}return joi},expression(...args){return new Template(...args)},extend(...extensions){Common.verifyFlat(extensions,"extend");Schemas=Schemas||require("./schemas");Assert(extensions.length,"You need to provide at least one extension");this.assert(extensions,Schemas.extensions);const joi=Object.assign({},this);joi._types=new Set(joi._types);for(let extension of extensions){if(typeof extension==="function"){extension=extension(joi)}this.assert(extension,Schemas.extension);Assert(joi[extension.type]===undefined||joi._types.has(extension.type),"Cannot override name",extension.type);const base=extension.base||this.any();const schema=Extend.type(base,extension);joi._types.add(extension.type);joi[extension.type]=function(...args){return internals.generate(this,schema,args)}}return joi},isExpression:Template.isTemplate,isRef:Ref.isRef,isSchema:Common.isSchema,in(...args){return Ref.in(...args)},override:Common.symbols.override,ref(...args){return Ref.create(...args)},types(){const types={};for(const type of this._types){types[type]=this[type]()}for(const target in internals.aliases){types[target]=this[target]()}return types}};internals.assert=function(value,schema,annotate,args){const message=args[0]instanceof Error||typeof args[0]==="string"?args[0]:null;const options=message?args[1]:args[0];const result=schema.validate(value,Common.preferences({errors:{stack:true}},options||{}));let error=result.error;if(!error){return result.value}if(message instanceof Error){throw message}annotate=annotate&&typeof error.annotate==="function";const display=annotate?error.annotate():error.message;if(error instanceof Errors.ValidationError===false){error=Clone(error)}error.message=message?`${message} ${display}`:display;throw error};internals.generate=function(root,schema,args){Assert(root,"Must be invoked on a Joi instance.");schema.$_root=root;if(!schema._definition.args||!args.length){return schema}return schema._definition.args(schema,...args)};module.exports=internals.root()},{"./cache":24,"./common":25,"./compile":26,"./errors":27,"./extend":28,"./manifest":30,"./ref":33,"./schemas":34,"./template":36,"./trace":37,"./types/alternatives":38,"./types/any":39,"./types/array":40,"./types/binary":41,"./types/boolean":42,"./types/date":43,"./types/function":44,"./types/link":46,"./types/number":47,"./types/object":48,"./types/string":49,"./types/symbol":52,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118}],30:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Common=require("./common");const Messages=require("./messages");const Ref=require("./ref");const Template=require("./template");let Schemas;const internals={};exports.describe=function(schema){const def=schema._definition;const desc={type:schema.type,flags:{},rules:[]};for(const flag in schema._flags){if(flag[0]!=="_"){desc.flags[flag]=internals.describe(schema._flags[flag])}}if(!Object.keys(desc.flags).length){delete desc.flags}if(schema._preferences){desc.preferences=Clone(schema._preferences,{shallow:["messages"]});delete desc.preferences[Common.symbols.prefs];if(desc.preferences.messages){desc.preferences.messages=Messages.decompile(desc.preferences.messages)}}if(schema._valids){desc.allow=schema._valids.describe()}if(schema._invalids){desc.invalid=schema._invalids.describe()}for(const rule of schema._rules){const ruleDef=def.rules[rule.name];if(ruleDef.manifest===false){continue}const item={name:rule.name};for(const custom in def.modifiers){if(rule[custom]!==undefined){item[custom]=internals.describe(rule[custom])}}if(rule.args){item.args={};for(const key in rule.args){const arg=rule.args[key];if(key==="options"&&!Object.keys(arg).length){continue}item.args[key]=internals.describe(arg,{assign:key})}if(!Object.keys(item.args).length){delete item.args}}desc.rules.push(item)}if(!desc.rules.length){delete desc.rules}for(const term in schema.$_terms){if(term[0]==="_"){continue}Assert(!desc[term],"Cannot describe schema due to internal name conflict with",term);const items=schema.$_terms[term];if(!items){continue}if(items instanceof Map){if(items.size){desc[term]=[...items.entries()]}continue}if(Common.isValues(items)){desc[term]=items.describe();continue}Assert(def.terms[term],"Term",term,"missing configuration");const manifest=def.terms[term].manifest;const mapped=typeof manifest==="object";if(!items.length&&!mapped){continue}const normalized=[];for(const item of items){normalized.push(internals.describe(item))}if(mapped){const{from,to}=manifest.mapped;desc[term]={};for(const item of normalized){desc[term][item[to]]=item[from]}continue}if(manifest==="single"){Assert(normalized.length===1,"Term",term,"contains more than one item");desc[term]=normalized[0];continue}desc[term]=normalized}internals.validate(schema.$_root,desc);return desc};internals.describe=function(item,options={}){if(Array.isArray(item)){return item.map(internals.describe)}if(item===Common.symbols.deepDefault){return{special:"deep"}}if(typeof item!=="object"||item===null){return item}if(options.assign==="options"){return Clone(item)}if(Buffer&&Buffer.isBuffer(item)){return{buffer:item.toString("binary")}}if(item instanceof Date){return item.toISOString()}if(item instanceof Error){return item}if(item instanceof RegExp){if(options.assign==="regex"){return item.toString()}return{regex:item.toString()}}if(item[Common.symbols.literal]){return{function:item.literal}}if(typeof item.describe==="function"){if(options.assign==="ref"){return item.describe().ref}return item.describe()}const normalized={};for(const key in item){const value=item[key];if(value===undefined){continue}normalized[key]=internals.describe(value,{assign:key})}return normalized};exports.build=function(joi,desc){const builder=new internals.Builder(joi);return builder.parse(desc)};internals.Builder=class{constructor(joi){this.joi=joi}parse(desc){internals.validate(this.joi,desc);let schema=this.joi[desc.type]();const def=schema._definition;if(desc.flags){for(const flag in desc.flags){const setter=def.flags[flag]&&def.flags[flag].setter||flag;Assert(typeof schema[setter]==="function","Invalid flag",flag,"for type",desc.type);schema=schema[setter](this.build(desc.flags[flag]))}}if(desc.preferences){schema=schema.preferences(this.build(desc.preferences))}if(desc.allow){schema=schema.allow(...this.build(desc.allow))}if(desc.invalid){schema=schema.invalid(...this.build(desc.invalid))}if(desc.rules){for(const rule of desc.rules){Assert(typeof schema[rule.name]==="function","Invalid rule",rule.name,"for type",desc.type);const args=[];if(rule.args){const built={};for(const key in rule.args){built[key]=this.build(rule.args[key],{assign:key})}const keys=Object.keys(built);const definition=def.rules[rule.name].args;if(definition){Assert(keys.length<=definition.length,"Invalid number of arguments for",desc.type,rule.name,"(expected up to",definition.length,", found",keys.length,")");for(const{name}of definition){args.push(built[name])}}else{Assert(keys.length===1,"Invalid number of arguments for",desc.type,rule.name,"(expected up to 1, found",keys.length,")");args.push(built[keys[0]])}}schema=schema[rule.name](...args);const options={};for(const custom in def.modifiers){if(rule[custom]!==undefined){options[custom]=this.build(rule[custom])}}if(Object.keys(options).length){schema=schema.rule(options)}}}const terms={};for(const key in desc){if(["allow","flags","invalid","whens","preferences","rules","type"].includes(key)){continue}Assert(def.terms[key],"Term",key,"missing configuration");const manifest=def.terms[key].manifest;if(manifest==="schema"){terms[key]=desc[key].map(item=>this.parse(item));continue}if(manifest==="values"){terms[key]=desc[key].map(item=>this.build(item));continue}if(manifest==="single"){terms[key]=this.build(desc[key]);continue}if(typeof manifest==="object"){terms[key]={};for(const name in desc[key]){const value=desc[key][name];terms[key][name]=this.parse(value)}continue}terms[key]=this.build(desc[key])}if(desc.whens){terms.whens=desc.whens.map(when=>this.build(when))}schema=def.manifest.build(schema,terms);schema.$_temp.ruleset=false;return schema}build(desc,options={}){if(desc===null){return null}if(Array.isArray(desc)){return desc.map(item=>this.build(item))}if(desc instanceof Error){return desc}if(options.assign==="options"){return Clone(desc)}if(options.assign==="regex"){return internals.regex(desc)}if(options.assign==="ref"){return Ref.build(desc)}if(typeof desc!=="object"){return desc}if(Object.keys(desc).length===1){if(desc.buffer){Assert(Buffer,"Buffers are not supported");return Buffer&&Buffer.from(desc.buffer,"binary")}if(desc.function){return{[Common.symbols.literal]:true,literal:desc.function}}if(desc.override){return Common.symbols.override}if(desc.ref){return Ref.build(desc.ref)}if(desc.regex){return internals.regex(desc.regex)}if(desc.special){Assert(["deep"].includes(desc.special),"Unknown special value",desc.special);return Common.symbols.deepDefault}if(desc.value){return Clone(desc.value)}}if(desc.type){return this.parse(desc)}if(desc.template){return Template.build(desc)}const normalized={};for(const key in desc){normalized[key]=this.build(desc[key],{assign:key})}return normalized}};internals.regex=function(string){const end=string.lastIndexOf("/");const exp=string.slice(1,end);const flags=string.slice(end+1);return new RegExp(exp,flags)};internals.validate=function(joi,desc){Schemas=Schemas||require("./schemas");joi.assert(desc,Schemas.description)}},{"./common":25,"./messages":31,"./ref":33,"./schemas":34,"./template":36,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118}],31:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Template=require("./template");const internals={};exports.compile=function(messages,target){if(typeof messages==="string"){Assert(!target,"Cannot set single message string");return new Template(messages)}if(Template.isTemplate(messages)){Assert(!target,"Cannot set single message template");return messages}Assert(typeof messages==="object"&&!Array.isArray(messages),"Invalid message options");target=target?Clone(target):{};for(let code in messages){const message=messages[code];if(code==="root"||Template.isTemplate(message)){target[code]=message;continue}if(typeof message==="string"){target[code]=new Template(message);continue}Assert(typeof message==="object"&&!Array.isArray(message),"Invalid message for",code);const language=code;target[language]=target[language]||{};for(code in message){const localized=message[code];if(code==="root"||Template.isTemplate(localized)){target[language][code]=localized;continue}Assert(typeof localized==="string","Invalid message for",code,"in",language);target[language][code]=new Template(localized)}}return target};exports.decompile=function(messages){const target={};for(let code in messages){const message=messages[code];if(code==="root"){target[code]=message;continue}if(Template.isTemplate(message)){target[code]=message.describe({compact:true});continue}const language=code;target[language]={};for(code in message){const localized=message[code];if(code==="root"){target[language][code]=localized;continue}target[language][code]=localized.describe({compact:true})}}return target};exports.merge=function(base,extended){if(!base){return exports.compile(extended)}if(!extended){return base}if(typeof extended==="string"){return new Template(extended)}if(Template.isTemplate(extended)){return extended}const target=Clone(base);for(let code in extended){const message=extended[code];if(code==="root"||Template.isTemplate(message)){target[code]=message;continue}if(typeof message==="string"){target[code]=new Template(message);continue}Assert(typeof message==="object"&&!Array.isArray(message),"Invalid message for",code);const language=code;target[language]=target[language]||{};for(code in message){const localized=message[code];if(code==="root"||Template.isTemplate(localized)){target[language][code]=localized;continue}Assert(typeof localized==="string","Invalid message for",code,"in",language);target[language][code]=new Template(localized)}}return target}},{"./template":36,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118}],32:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Common=require("./common");const Ref=require("./ref");const internals={};exports.Ids=internals.Ids=class{constructor(){this._byId=new Map;this._byKey=new Map;this._schemaChain=false}clone(){const clone=new internals.Ids;clone._byId=new Map(this._byId);clone._byKey=new Map(this._byKey);clone._schemaChain=this._schemaChain;return clone}concat(source){if(source._schemaChain){this._schemaChain=true}for(const[id,value]of source._byId.entries()){Assert(!this._byKey.has(id),"Schema id conflicts with existing key:",id);this._byId.set(id,value)}for(const[key,value]of source._byKey.entries()){Assert(!this._byId.has(key),"Schema key conflicts with existing id:",key);this._byKey.set(key,value)}}fork(path,adjuster,root){const chain=this._collect(path);chain.push({schema:root});const tail=chain.shift();let adjusted={id:tail.id,schema:adjuster(tail.schema)};Assert(Common.isSchema(adjusted.schema),"adjuster function failed to return a joi schema type");for(const node of chain){adjusted={id:node.id,schema:internals.fork(node.schema,adjusted.id,adjusted.schema)}}return adjusted.schema}labels(path,behind=[]){const current=path[0];const node=this._get(current);if(!node){return[...behind,...path].join(".")}const forward=path.slice(1);behind=[...behind,node.schema._flags.label||current];if(!forward.length){return behind.join(".")}return node.schema._ids.labels(forward,behind)}reach(path,behind=[]){const current=path[0];const node=this._get(current);Assert(node,"Schema does not contain path",[...behind,...path].join("."));const forward=path.slice(1);if(!forward.length){return node.schema}return node.schema._ids.reach(forward,[...behind,current])}register(schema,{key}={}){if(!schema||!Common.isSchema(schema)){return}if(schema.$_property("schemaChain")||schema._ids._schemaChain){this._schemaChain=true}const id=schema._flags.id;if(id){const existing=this._byId.get(id);Assert(!existing||existing.schema===schema,"Cannot add different schemas with the same id:",id);Assert(!this._byKey.has(id),"Schema id conflicts with existing key:",id);this._byId.set(id,{schema:schema,id:id})}if(key){Assert(!this._byKey.has(key),"Schema already contains key:",key);Assert(!this._byId.has(key),"Schema key conflicts with existing id:",key);this._byKey.set(key,{schema:schema,id:key})}}reset(){this._byId=new Map;this._byKey=new Map;this._schemaChain=false}_collect(path,behind=[],nodes=[]){const current=path[0];const node=this._get(current);Assert(node,"Schema does not contain path",[...behind,...path].join("."));nodes=[node,...nodes];const forward=path.slice(1);if(!forward.length){return nodes}return node.schema._ids._collect(forward,[...behind,current],nodes)}_get(id){return this._byId.get(id)||this._byKey.get(id)}};internals.fork=function(schema,id,replacement){const each=(item,{key})=>{if(id===(item._flags.id||key)){return replacement}};const obj=exports.schema(schema,{each:each,ref:false});return obj.$_mutateRebuild()};exports.schema=function(schema,options){let obj;for(const name in schema._flags){if(name[0]==="_"){continue}const result=internals.scan(schema._flags[name],{source:"flags",name:name},options);if(result!==undefined){obj=obj||schema.clone();obj._flags[name]=result}}for(let i=0;i<schema._rules.length;++i){const rule=schema._rules[i];const result=internals.scan(rule.args,{source:"rules",name:rule.name},options);if(result!==undefined){obj=obj||schema.clone();const clone=Object.assign({},rule);clone.args=result;obj._rules[i]=clone;const existingUnique=obj._singleRules.get(rule.name);if(existingUnique===rule){obj._singleRules.set(rule.name,clone)}}}for(const name in schema.$_terms){if(name[0]==="_"){continue}const result=internals.scan(schema.$_terms[name],{source:"terms",name:name},options);if(result!==undefined){obj=obj||schema.clone();obj.$_terms[name]=result}}return obj};internals.scan=function(item,source,options,_path,_key){const path=_path||[];if(item===null||typeof item!=="object"){return}let clone;if(Array.isArray(item)){for(let i=0;i<item.length;++i){const key=source.source==="terms"&&source.name==="keys"&&item[i].key;const result=internals.scan(item[i],source,options,[i,...path],key);if(result!==undefined){clone=clone||item.slice();clone[i]=result}}return clone}if(options.schema!==false&&Common.isSchema(item)||options.ref!==false&&Ref.isRef(item)){const result=options.each(item,{...source,path:path,key:_key});if(result===item){return}return result}for(const key in item){if(key[0]==="_"){continue}const result=internals.scan(item[key],source,options,[key,...path],_key);if(result!==undefined){clone=clone||Object.assign({},item);clone[key]=result}}return clone}},{"./common":25,"./ref":33,"@hapi/hoek/lib/assert":115}],33:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Reach=require("@hapi/hoek/lib/reach");const Common=require("./common");let Template;const internals={symbol:Symbol("ref"),defaults:{adjust:null,in:false,iterables:null,map:null,separator:".",type:"value"}};exports.create=function(key,options={}){Assert(typeof key==="string","Invalid reference key:",key);Common.assertOptions(options,["adjust","ancestor","in","iterables","map","prefix","separator"]);Assert(!options.prefix||typeof options.prefix==="object","options.prefix must be of type object");const ref=Object.assign({},internals.defaults,options);delete ref.prefix;const separator=ref.separator;const context=internals.context(key,separator,options.prefix);ref.type=context.type;key=context.key;if(ref.type==="value"){if(context.root){Assert(!separator||key[0]!==separator,"Cannot specify relative path with root prefix");ref.ancestor="root";if(!key){key=null}}if(separator&&separator===key){key=null;ref.ancestor=0}else{if(ref.ancestor!==undefined){Assert(!separator||!key||key[0]!==separator,"Cannot combine prefix with ancestor option")}else{const[ancestor,slice]=internals.ancestor(key,separator);if(slice){key=key.slice(slice);if(key===""){key=null}}ref.ancestor=ancestor}}}ref.path=separator?key===null?[]:key.split(separator):[key];return new internals.Ref(ref)};exports.in=function(key,options={}){return exports.create(key,Object.assign({},options,{in:true}))};exports.isRef=function(ref){return ref?!!ref[Common.symbols.ref]:false};internals.Ref=class{constructor(options){Assert(typeof options==="object","Invalid reference construction");Common.assertOptions(options,["adjust","ancestor","in","iterables","map","path","separator","type","depth","key","root","display"]);Assert([false,undefined].includes(options.separator)||typeof options.separator==="string"&&options.separator.length===1,"Invalid separator");Assert(!options.adjust||typeof options.adjust==="function","options.adjust must be a function");Assert(!options.map||Array.isArray(options.map),"options.map must be an array");Assert(!options.map||!options.adjust,"Cannot set both map and adjust options");Object.assign(this,internals.defaults,options);Assert(this.type==="value"||this.ancestor===undefined,"Non-value references cannot reference ancestors");if(Array.isArray(this.map)){this.map=new Map(this.map)}this.depth=this.path.length;this.key=this.path.length?this.path.join(this.separator):null;this.root=this.path[0];this.updateDisplay()}resolve(value,state,prefs,local,options={}){Assert(!this.in||options.in,"Invalid in() reference usage");if(this.type==="global"){return this._resolve(prefs.context,state,options)}if(this.type==="local"){return this._resolve(local,state,options)}if(!this.ancestor){return this._resolve(value,state,options)}if(this.ancestor==="root"){return this._resolve(state.ancestors[state.ancestors.length-1],state,options)}Assert(this.ancestor<=state.ancestors.length,"Invalid reference exceeds the schema root:",this.display);return this._resolve(state.ancestors[this.ancestor-1],state,options)}_resolve(target,state,options){let resolved;if(this.type==="value"&&state.mainstay.shadow&&options.shadow!==false){resolved=state.mainstay.shadow.get(this.absolute(state))}if(resolved===undefined){resolved=Reach(target,this.path,{iterables:this.iterables,functions:true})}if(this.adjust){resolved=this.adjust(resolved)}if(this.map){const mapped=this.map.get(resolved);if(mapped!==undefined){resolved=mapped}}if(state.mainstay){state.mainstay.tracer.resolve(state,this,resolved)}return resolved}toString(){return this.display}absolute(state){return[...state.path.slice(0,-this.ancestor),...this.path]}clone(){return new internals.Ref(this)}describe(){const ref={path:this.path};if(this.type!=="value"){ref.type=this.type}if(this.separator!=="."){ref.separator=this.separator}if(this.type==="value"&&this.ancestor!==1){ref.ancestor=this.ancestor}if(this.map){ref.map=[...this.map]}for(const key of["adjust","iterables"]){if(this[key]!==null){ref[key]=this[key]}}if(this.in!==false){ref.in=true}return{ref:ref}}updateDisplay(){const key=this.key!==null?this.key:"";if(this.type!=="value"){this.display=`ref:${this.type}:${key}`;return}if(!this.separator){this.display=`ref:${key}`;return}if(!this.ancestor){this.display=`ref:${this.separator}${key}`;return}if(this.ancestor==="root"){this.display=`ref:root:${key}`;return}if(this.ancestor===1){this.display=`ref:${key||".."}`;return}const lead=new Array(this.ancestor+1).fill(this.separator).join("");this.display=`ref:${lead}${key||""}`}};internals.Ref.prototype[Common.symbols.ref]=true;exports.build=function(desc){desc=Object.assign({},internals.defaults,desc);if(desc.type==="value"&&desc.ancestor===undefined){desc.ancestor=1}return new internals.Ref(desc)};internals.context=function(key,separator,prefix={}){key=key.trim();if(prefix){const globalp=prefix.global===undefined?"$":prefix.global;if(globalp!==separator&&key.startsWith(globalp)){return{key:key.slice(globalp.length),type:"global"}}const local=prefix.local===undefined?"#":prefix.local;if(local!==separator&&key.startsWith(local)){return{key:key.slice(local.length),type:"local"}}const root=prefix.root===undefined?"/":prefix.root;if(root!==separator&&key.startsWith(root)){return{key:key.slice(root.length),type:"value",root:true}}}return{key:key,type:"value"}};internals.ancestor=function(key,separator){if(!separator){return[1,0]}if(key[0]!==separator){return[1,0]}if(key[1]!==separator){return[0,1]}let i=2;while(key[i]===separator){++i}return[i-1,i]};exports.toSibling=0;exports.toParent=1;exports.Manager=class{constructor(){this.refs=[]}register(source,target){if(!source){return}target=target===undefined?exports.toParent:target;if(Array.isArray(source)){for(const ref of source){this.register(ref,target)}return}if(Common.isSchema(source)){for(const item of source._refs.refs){if(item.ancestor-target>=0){this.refs.push({ancestor:item.ancestor-target,root:item.root})}}return}if(exports.isRef(source)&&source.type==="value"&&source.ancestor-target>=0){this.refs.push({ancestor:source.ancestor-target,root:source.root})}Template=Template||require("./template");if(Template.isTemplate(source)){this.register(source.refs(),target)}}get length(){return this.refs.length}clone(){const copy=new exports.Manager;copy.refs=Clone(this.refs);return copy}reset(){this.refs=[]}roots(){return this.refs.filter(ref=>!ref.ancestor).map(ref=>ref.root)}}},{"./common":25,"./template":36,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133}],34:[function(require,module,exports){"use strict";const Joi=require("./index");const internals={};exports.preferences=Joi.object({allowUnknown:Joi.boolean(),abortEarly:Joi.boolean(),cache:Joi.boolean(),context:Joi.object(),convert:Joi.boolean(),dateFormat:Joi.valid("date","iso","string","time","utc"),debug:Joi.boolean(),errors:{escapeHtml:Joi.boolean(),label:Joi.valid("path","key",false),language:[Joi.string(),Joi.object().ref()],render:Joi.boolean(),stack:Joi.boolean(),wrapArrays:Joi.boolean()},externals:Joi.boolean(),messages:Joi.object(),noDefaults:Joi.boolean(),nonEnumerables:Joi.boolean(),presence:Joi.valid("required","optional","forbidden"),skipFunctions:Joi.boolean(),stripUnknown:Joi.object({arrays:Joi.boolean(),objects:Joi.boolean()}).or("arrays","objects").allow(true,false),warnings:Joi.boolean()}).strict();internals.nameRx=/^[a-zA-Z0-9]+$/;internals.rule=Joi.object({alias:Joi.array().items(Joi.string().pattern(internals.nameRx)).single(),args:Joi.array().items(Joi.string(),Joi.object({name:Joi.string().pattern(internals.nameRx).required(),ref:Joi.boolean(),assert:Joi.alternatives([Joi.function(),Joi.object().schema()]).conditional("ref",{is:true,then:Joi.required()}),normalize:Joi.function(),message:Joi.string().when("assert",{is:Joi.function(),then:Joi.required()})})),convert:Joi.boolean(),manifest:Joi.boolean(),method:Joi.function().allow(false),multi:Joi.boolean(),validate:Joi.function()});exports.extension=Joi.object({type:Joi.string().required(),args:Joi.function(),base:Joi.object().schema(),coerce:[Joi.function().maxArity(3),Joi.object({method:Joi.function().maxArity(3).required(),from:Joi.array().items(Joi.string()).single()})],flags:Joi.object().pattern(internals.nameRx,Joi.object({setter:Joi.string(),default:Joi.any()})),manifest:{build:Joi.function().arity(2)},messages:[Joi.object(),Joi.string()],modifiers:Joi.object().pattern(internals.nameRx,Joi.function().minArity(1).maxArity(2)),overrides:Joi.object().pattern(internals.nameRx,Joi.function()),prepare:Joi.function().maxArity(3),rebuild:Joi.function().arity(1),rules:Joi.object().pattern(internals.nameRx,internals.rule),terms:Joi.object().pattern(internals.nameRx,Joi.object({init:Joi.array().allow(null).required(),manifest:Joi.object().pattern(/.+/,[Joi.valid("schema","single"),Joi.object({mapped:Joi.object({from:Joi.string().required(),to:Joi.string().required()}).required()})])})),validate:Joi.function().maxArity(3)}).strict();exports.extensions=Joi.array().items(Joi.object(),Joi.function().arity(1)).strict();internals.desc={buffer:Joi.object({buffer:Joi.string()}),func:Joi.object({function:Joi.function().required(),options:{literal:true}}),override:Joi.object({override:true}),ref:Joi.object({ref:Joi.object({type:Joi.valid("value","global","local"),path:Joi.array().required(),separator:Joi.string().length(1).allow(false),ancestor:Joi.number().min(0).integer().allow("root"),map:Joi.array().items(Joi.array().length(2)).min(1),adjust:Joi.function(),iterables:Joi.boolean(),in:Joi.boolean()}).required()}),regex:Joi.object({regex:Joi.string().min(3)}),special:Joi.object({special:Joi.valid("deep").required()}),template:Joi.object({template:Joi.string().required(),options:Joi.object()}),value:Joi.object({value:Joi.alternatives([Joi.object(),Joi.array()]).required()})};internals.desc.entity=Joi.alternatives([Joi.array().items(Joi.link("...")),Joi.boolean(),Joi.function(),Joi.number(),Joi.string(),internals.desc.buffer,internals.desc.func,internals.desc.ref,internals.desc.regex,internals.desc.special,internals.desc.template,internals.desc.value,Joi.link("/")]);internals.desc.values=Joi.array().items(null,Joi.boolean(),Joi.function(),Joi.number().allow(Infinity,-Infinity),Joi.string().allow(""),Joi.symbol(),internals.desc.buffer,internals.desc.func,internals.desc.override,internals.desc.ref,internals.desc.regex,internals.desc.template,internals.desc.value);internals.desc.messages=Joi.object().pattern(/.+/,[Joi.string(),internals.desc.template,Joi.object().pattern(/.+/,[Joi.string(),internals.desc.template])]);exports.description=Joi.object({type:Joi.string().required(),flags:Joi.object({cast:Joi.string(),default:Joi.any(),description:Joi.string(),empty:Joi.link("/"),failover:internals.desc.entity,id:Joi.string(),label:Joi.string(),only:true,presence:["optional","required","forbidden"],result:["raw","strip"],strip:Joi.boolean(),unit:Joi.string()}).unknown(),preferences:{allowUnknown:Joi.boolean(),abortEarly:Joi.boolean(),cache:Joi.boolean(),convert:Joi.boolean(),dateFormat:["date","iso","string","time","utc"],errors:{escapeHtml:Joi.boolean(),label:["path","key"],language:[Joi.string(),internals.desc.ref],wrapArrays:Joi.boolean()},externals:Joi.boolean(),messages:internals.desc.messages,noDefaults:Joi.boolean(),nonEnumerables:Joi.boolean(),presence:["required","optional","forbidden"],skipFunctions:Joi.boolean(),stripUnknown:Joi.object({arrays:Joi.boolean(),objects:Joi.boolean()}).or("arrays","objects").allow(true,false),warnings:Joi.boolean()},allow:internals.desc.values,invalid:internals.desc.values,rules:Joi.array().min(1).items({name:Joi.string().required(),args:Joi.object().min(1),keep:Joi.boolean(),message:[Joi.string(),internals.desc.messages],warn:Joi.boolean()}),keys:Joi.object().pattern(/.*/,Joi.link("/")),link:internals.desc.ref}).pattern(/^[a-z]\w*$/,Joi.any())},{"./index":29}],35:[function(require,module,exports){"use strict";const Clone=require("@hapi/hoek/lib/clone");const Reach=require("@hapi/hoek/lib/reach");const Common=require("./common");const internals={value:Symbol("value")};module.exports=internals.State=class{constructor(path,ancestors,state){this.path=path;this.ancestors=ancestors;this.mainstay=state.mainstay;this.schemas=state.schemas;this.debug=null}localize(path,ancestors=null,schema=null){const state=new internals.State(path,ancestors,this);if(schema&&state.schemas){state.schemas=[internals.schemas(schema),...state.schemas]}return state}nest(schema,debug){const state=new internals.State(this.path,this.ancestors,this);state.schemas=state.schemas&&[internals.schemas(schema),...state.schemas];state.debug=debug;return state}shadow(value,reason){this.mainstay.shadow=this.mainstay.shadow||new internals.Shadow;this.mainstay.shadow.set(this.path,value,reason)}snapshot(){if(this.mainstay.shadow){this._snapshot=Clone(this.mainstay.shadow.node(this.path))}}restore(){if(this.mainstay.shadow){this.mainstay.shadow.override(this.path,this._snapshot);this._snapshot=undefined}}};internals.schemas=function(schema){if(Common.isSchema(schema)){return{schema:schema}}return schema};internals.Shadow=class{constructor(){this._values=null}set(path,value,reason){if(!path.length){return}if(reason==="strip"&&typeof path[path.length-1]==="number"){return}this._values=this._values||new Map;let node=this._values;for(let i=0;i<path.length;++i){const segment=path[i];let next=node.get(segment);if(!next){next=new Map;node.set(segment,next)}node=next}node[internals.value]=value}get(path){const node=this.node(path);if(node){return node[internals.value]}}node(path){if(!this._values){return}return Reach(this._values,path,{iterables:true})}override(path,node){if(!this._values){return}const parents=path.slice(0,-1);const own=path[path.length-1];const parent=Reach(this._values,parents,{iterables:true});if(node){parent.set(own,node);return}if(parent){parent.delete(own)}}}},{"./common":25,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133}],36:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const EscapeHtml=require("@hapi/hoek/lib/escapeHtml");const Formula=require("@hapi/formula");const Common=require("./common");const Errors=require("./errors");const Ref=require("./ref");const internals={symbol:Symbol("template"),opens:new Array(1e3).join("\0"),closes:new Array(1e3).join(""),dateFormat:{date:Date.prototype.toDateString,iso:Date.prototype.toISOString,string:Date.prototype.toString,time:Date.prototype.toTimeString,utc:Date.prototype.toUTCString}};module.exports=exports=internals.Template=class{constructor(source,options){Assert(typeof source==="string","Template source must be a string");Assert(!source.includes("\0")&&!source.includes(""),"Template source cannot contain reserved control characters");this.source=source;this.rendered=source;this._template=null;this._settings=Clone(options);this._parse()}_parse(){if(!this.source.includes("{")){return}const encoded=internals.encode(this.source);const parts=internals.split(encoded);let refs=false;const processed=[];const head=parts.shift();if(head){processed.push(head)}for(const part of parts){const raw=part[0]!=="{";const ender=raw?"}":"}}";const end=part.indexOf(ender);if(end===-1||part[1]==="{"){processed.push(`{${internals.decode(part)}`);continue}const variable=part.slice(raw?0:1,end);const dynamic=this._ref(internals.decode(variable),raw);processed.push(dynamic);if(typeof dynamic!=="string"){refs=true}const rest=part.slice(end+ender.length);if(rest){processed.push(internals.decode(rest))}}if(!refs){this.rendered=processed.join("");return}this._template=processed}static date(date,prefs){return internals.dateFormat[prefs.dateFormat].call(date)}describe(options={}){if(!this._settings&&options.compact){return this.source}const desc={template:this.source};if(this._settings){desc.options=this._settings}return desc}static build(desc){return new internals.Template(desc.template,desc.options)}isDynamic(){return!!this._template}static isTemplate(template){return template?!!template[Common.symbols.template]:false}refs(){if(!this._template){return}const refs=[];for(const part of this._template){if(typeof part!=="string"){refs.push(...part.refs)}}return refs}resolve(value,state,prefs,local){if(this._template&&this._template.length===1){return this._part(this._template[0],value,state,prefs,local,{})}return this.render(value,state,prefs,local)}_part(part,...args){if(part.ref){return part.ref.resolve(...args)}return part.formula.evaluate(args)}render(value,state,prefs,local,options={}){if(!this.isDynamic()){return this.rendered}const parts=[];for(const part of this._template){if(typeof part==="string"){parts.push(part)}else{const rendered=this._part(part,value,state,prefs,local,options);const string=internals.stringify(rendered,prefs,options.errors);if(string!==undefined){const result=part.raw||(options.errors&&options.errors.escapeHtml)===false?string:EscapeHtml(string);parts.push(result)}}}return parts.join("")}_ref(content,raw){const refs=[];const reference=variable=>{const ref=Ref.create(variable,this._settings);refs.push(ref);return context=>ref.resolve(...context)};try{var formula=new Formula(content,{reference:reference,functions:internals.functions,constants:internals.constants})}catch(err){err.message=`Invalid template variable "${content}" fails due to: ${err.message}`;throw err}if(formula.single){if(formula.single.type==="reference"){return{ref:refs[0],raw:raw,refs:refs}}return internals.stringify(formula.single.value)}return{formula:formula,raw:raw,refs:refs}}toString(){return this.source}};internals.Template.prototype[Common.symbols.template]=true;internals.Template.prototype.isImmutable=true;internals.encode=function(string){return string.replace(/\\(\{+)/g,($0,$1)=>{return internals.opens.slice(0,$1.length)}).replace(/\\(\}+)/g,($0,$1)=>{return internals.closes.slice(0,$1.length)})};internals.decode=function(string){return string.replace(/\u0000/g,"{").replace(/\u0001/g,"}")};internals.split=function(string){const parts=[];let current="";for(let i=0;i<string.length;++i){const char=string[i];if(char==="{"){let next="";while(i+1<string.length&&string[i+1]==="{"){next+="{";++i}parts.push(current);current=next}else{current+=char}}parts.push(current);return parts};internals.stringify=function(value,prefs,options){const type=typeof value;if(value===null){return"null"}if(type==="string"){return value}if(type==="number"||type==="function"||type==="symbol"){return value.toString()}if(type!=="object"){return JSON.stringify(value)}if(value instanceof Date){return internals.Template.date(value,prefs)}if(value instanceof Map){const pairs=[];for(const[key,sym]of value.entries()){pairs.push(`${key.toString()} -> ${sym.toString()}`)}value=pairs}if(!Array.isArray(value)){return value.toString()}let partial="";for(const item of value){partial=partial+(partial.length?", ":"")+internals.stringify(item,prefs,options)}return options.wrapArrays?"["+partial+"]":partial};internals.constants={true:true,false:false,null:null,second:1e3,minute:60*1e3,hour:60*60*1e3,day:24*60*60*1e3};internals.functions={if(condition,then,otherwise){return condition?then:otherwise},msg(code){const[value,state,prefs,local,options]=this;const messages=options.messages;if(!messages){return""}const template=Errors.template(value,messages[0],code,state,prefs)||Errors.template(value,messages[1],code,state,prefs);if(!template){return""}return template.render(value,state,prefs,local,options)},number(value){if(typeof value==="number"){return value}if(typeof value==="string"){return parseFloat(value)}if(typeof value==="boolean"){return value?1:0}if(value instanceof Date){return value.getTime()}return null}}},{"./common":25,"./errors":27,"./ref":33,"@hapi/formula":59,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/escapeHtml":123}],37:[function(require,module,exports){"use strict";const DeepEqual=require("@hapi/hoek/lib/deepEqual");const Pinpoint=require("@hapi/pinpoint");const Errors=require("./errors");const internals={codes:{error:1,pass:2,full:3},labels:{0:"never used",1:"always error",2:"always pass"}};exports.setup=function(root){const trace=function(){root._tracer=root._tracer||new internals.Tracer;return root._tracer};root.trace=trace;root[Symbol.for("@hapi/lab/coverage/initialize")]=trace;root.untrace=()=>{root._tracer=null}};exports.location=function(schema){return schema.$_setFlag("_tracerLocation",Pinpoint.location(2))};internals.Tracer=class{constructor(){this.name="Joi";this._schemas=new Map}_register(schema){const existing=this._schemas.get(schema);if(existing){return existing.store}const store=new internals.Store(schema);const{filename,line}=schema._flags._tracerLocation||Pinpoint.location(5);this._schemas.set(schema,{filename:filename,line:line,store:store});return store}_combine(merged,sources){for(const{store}of this._schemas.values()){store._combine(merged,sources)}}report(file){const coverage=[];for(const{filename,line,store}of this._schemas.values()){if(file&&file!==filename){continue}const missing=[];const skipped=[];for(const[schema,log]of store._sources.entries()){if(internals.sub(log.paths,skipped)){continue}if(!log.entry){missing.push({status:"never reached",paths:[...log.paths]});skipped.push(...log.paths);continue}for(const type of["valid","invalid"]){const set=schema[`_${type}s`];if(!set){continue}const values=new Set(set._values);const refs=new Set(set._refs);for(const{value,ref}of log[type]){values.delete(value);refs.delete(ref)}if(values.size||refs.size){missing.push({status:[...values,...[...refs].map(ref=>ref.display)],rule:`${type}s`})}}const rules=schema._rules.map(rule=>rule.name);for(const type of["default","failover"]){if(schema._flags[type]!==undefined){rules.push(type)}}for(const name of rules){const status=internals.labels[log.rule[name]||0];if(status){const report={rule:name,status:status};if(log.paths.size){report.paths=[...log.paths]}missing.push(report)}}}if(missing.length){coverage.push({filename:filename,line:line,missing:missing,severity:"error",message:`Schema missing tests for ${missing.map(internals.message).join(", ")}`})}}return coverage.length?coverage:null}};internals.Store=class{constructor(schema){this.active=true;this._sources=new Map;this._combos=new Map;this._scan(schema)}debug(state,source,name,result){state.mainstay.debug&&state.mainstay.debug.push({type:source,name:name,result:result,path:state.path})}entry(schema,state){internals.debug(state,{type:"entry"});this._record(schema,log=>{log.entry=true})}filter(schema,state,source,value){internals.debug(state,{type:source,...value});this._record(schema,log=>{log[source].add(value)})}log(schema,state,source,name,result){internals.debug(state,{type:source,name:name,result:result==="full"?"pass":result});this._record(schema,log=>{log[source][name]=log[source][name]||0;log[source][name]|=internals.codes[result]})}resolve(state,ref,to){if(!state.mainstay.debug){return}const log={type:"resolve",ref:ref.display,to:to,path:state.path};state.mainstay.debug.push(log)}value(state,by,from,to,name){if(!state.mainstay.debug||DeepEqual(from,to)){return}const log={type:"value",by:by,from:from,to:to,path:state.path};if(name){log.name=name}state.mainstay.debug.push(log)}_record(schema,each){const log=this._sources.get(schema);if(log){each(log);return}const sources=this._combos.get(schema);for(const source of sources){this._record(source,each)}}_scan(schema,_path){const path=_path||[];let log=this._sources.get(schema);if(!log){log={paths:new Set,entry:false,rule:{},valid:new Set,invalid:new Set};this._sources.set(schema,log)}if(path.length){log.paths.add(path)}const each=(sub,source)=>{const subId=internals.id(sub,source);this._scan(sub,path.concat(subId))};schema.$_modify({each:each,ref:false})}_combine(merged,sources){this._combos.set(merged,sources)}};internals.message=function(item){const path=item.paths?Errors.path(item.paths[0])+(item.rule?":":""):"";return`${path}${item.rule||""} (${item.status})`};internals.id=function(schema,{source,name,path,key}){if(schema._flags.id){return schema._flags.id}if(key){return key}name=`@${name}`;if(source==="terms"){return[name,path[Math.min(path.length-1,1)]]}return name};internals.sub=function(paths,skipped){for(const path of paths){for(const skip of skipped){if(DeepEqual(path.slice(0,skip.length),skip)){return true}}}return false};internals.debug=function(state,event){if(state.mainstay.debug){event.path=state.debug?[...state.path,state.debug]:state.path;state.mainstay.debug.push(event)}}},{"./errors":27,"@hapi/hoek/lib/deepEqual":120,"@hapi/pinpoint":169}],38:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const Common=require("../common");const Compile=require("../compile");const Errors=require("../errors");const Ref=require("../ref");const internals={};module.exports=Any.extend({type:"alternatives",flags:{match:{default:"any"}},terms:{matches:{init:[],register:Ref.toSibling}},args(schema,...schemas){if(schemas.length===1){if(Array.isArray(schemas[0])){return schema.try(...schemas[0])}}return schema.try(...schemas)},validate(value,helpers){const{schema,error,state,prefs}=helpers;if(schema._flags.match){let hits=0;let matched;for(let i=0;i<schema.$_terms.matches.length;++i){const item=schema.$_terms.matches[i];const localState=state.nest(item.schema,`match.${i}`);localState.snapshot();const result=item.schema.$_validate(value,localState,prefs);if(!result.errors){++hits;matched=result.value}else{localState.restore()}}if(!hits){return{errors:error("alternatives.any")}}if(schema._flags.match==="one"){return hits===1?{value:matched}:{errors:error("alternatives.one")}}return hits===schema.$_terms.matches.length?{value:value}:{errors:error("alternatives.all")}}const errors=[];for(let i=0;i<schema.$_terms.matches.length;++i){const item=schema.$_terms.matches[i];if(item.schema){const localState=state.nest(item.schema,`match.${i}`);localState.snapshot();const result=item.schema.$_validate(value,localState,prefs);if(!result.errors){return result}localState.restore();errors.push({schema:item.schema,reports:result.errors});continue}const input=item.ref?item.ref.resolve(value,state,prefs):value;const tests=item.is?[item]:item.switch;for(let j=0;j<tests.length;++j){const test=tests[j];const{is,then,otherwise}=test;const id=`match.${i}${item.switch?"."+j:""}`;if(!is.$_match(input,state.nest(is,`${id}.is`),prefs)){if(otherwise){return otherwise.$_validate(value,state.nest(otherwise,`${id}.otherwise`),prefs)}}else if(then){return then.$_validate(value,state.nest(then,`${id}.then`),prefs)}}}return internals.errors(errors,helpers)},rules:{conditional:{method(condition,options){Assert(!this._flags._endedSwitch,"Unreachable condition");Assert(!this._flags.match,"Cannot combine match mode",this._flags.match,"with conditional rule");Assert(options.break===undefined,"Cannot use break option with alternatives conditional");const obj=this.clone();const match=Compile.when(obj,condition,options);const conditions=match.is?[match]:match.switch;for(const item of conditions){if(item.then&&item.otherwise){obj.$_setFlag("_endedSwitch",true,{clone:false});break}}obj.$_terms.matches.push(match);return obj.$_mutateRebuild()}},match:{method(mode){Assert(["any","one","all"].includes(mode),"Invalid alternatives match mode",mode);if(mode!=="any"){for(const match of this.$_terms.matches){Assert(match.schema,"Cannot combine match mode",mode,"with conditional rules")}}return this.$_setFlag("match",mode)}},try:{method(...schemas){Assert(schemas.length,"Missing alternative schemas");Common.verifyFlat(schemas,"try");Assert(!this._flags._endedSwitch,"Unreachable condition");const obj=this.clone();for(const schema of schemas){obj.$_terms.matches.push({schema:obj.$_compile(schema)})}return obj.$_mutateRebuild()}}},overrides:{label(name){const obj=this.$_super.label(name);const each=(item,source)=>source.path[0]!=="is"?item.label(name):undefined;return obj.$_modify({each:each,ref:false})}},rebuild(schema){const each=item=>{if(Common.isSchema(item)&&item.type==="array"){schema.$_setFlag("_arrayItems",true,{clone:false})}};schema.$_modify({each:each})},manifest:{build(obj,desc){if(desc.matches){for(const match of desc.matches){const{schema,ref,is,not,then,otherwise}=match;if(schema){obj=obj.try(schema)}else if(ref){obj=obj.conditional(ref,{is:is,then:then,not:not,otherwise:otherwise,switch:match.switch})}else{obj=obj.conditional(is,{then:then,otherwise:otherwise})}}}return obj}},messages:{"alternatives.all":'"{{#label}}" does not match all of the required types',"alternatives.any":'"{{#label}}" does not match any of the allowed types',"alternatives.match":'"{{#label}}" does not match any of the allowed types',"alternatives.one":'"{{#label}}" matches more than one allowed type',"alternatives.types":'"{{#label}}" must be one of {{#types}}'}});internals.errors=function(failures,{error,state}){if(!failures.length){return{errors:error("alternatives.any")}}if(failures.length===1){return{errors:failures[0].reports}}const valids=new Set;const complex=[];for(const{reports,schema}of failures){if(reports.length>1){return internals.unmatched(failures,error)}const report=reports[0];if(report instanceof Errors.Report===false){return internals.unmatched(failures,error)}if(report.state.path.length!==state.path.length){complex.push({type:schema.type,report:report});continue}if(report.code==="any.only"){for(const valid of report.local.valids){valids.add(valid)}continue}const[type,code]=report.code.split(".");if(code!=="base"){complex.push({type:schema.type,report:report});continue}valids.add(type)}if(!complex.length){return{errors:error("alternatives.types",{types:[...valids]})}}if(complex.length===1){return{errors:complex[0].report}}return internals.unmatched(failures,error)};internals.unmatched=function(failures,error){const errors=[];for(const failure of failures){errors.push(...failure.reports)}return{errors:error("alternatives.match",Errors.details(errors,{override:false}))}}},{"../common":25,"../compile":26,"../errors":27,"../ref":33,"./any":39,"@hapi/hoek/lib/assert":115}],39:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Base=require("../base");const Common=require("../common");const Messages=require("../messages");const internals={};module.exports=Base.extend({type:"any",flags:{only:{default:false}},terms:{alterations:{init:null},examples:{init:null},externals:{init:null},metas:{init:[]},notes:{init:[]},shared:{init:null},tags:{init:[]},whens:{init:null}},rules:{custom:{method(method,description){Assert(typeof method==="function","Method must be a function");Assert(description===undefined||description&&typeof description==="string","Description must be a non-empty string");return this.$_addRule({name:"custom",args:{method:method,description:description}})},validate(value,helpers,{method}){try{return method(value,helpers)}catch(err){return helpers.error("any.custom",{error:err})}},args:["method","description"],multi:true},messages:{method(messages){return this.prefs({messages:messages})}},shared:{method(schema){Assert(Common.isSchema(schema)&&schema._flags.id,"Schema must be a schema with an id");const obj=this.clone();obj.$_terms.shared=obj.$_terms.shared||[];obj.$_terms.shared.push(schema);obj.$_mutateRegister(schema);return obj}},warning:{method(code,local){Assert(code&&typeof code==="string","Invalid warning code");return this.$_addRule({name:"warning",args:{code:code,local:local},warn:true})},validate(value,helpers,{code,local}){return helpers.error(code,local)},args:["code","local"],multi:true}},modifiers:{keep(rule,enabled=true){rule.keep=enabled},message(rule,message){rule.message=Messages.compile(message)},warn(rule,enabled=true){rule.warn=enabled}},manifest:{build(obj,desc){for(const key in desc){const values=desc[key];if(["examples","externals","metas","notes","tags"].includes(key)){for(const value of values){obj=obj[key.slice(0,-1)](value)}continue}if(key==="alterations"){const alter={};for(const{target,adjuster}of values){alter[target]=adjuster}obj=obj.alter(alter);continue}if(key==="whens"){for(const value of values){const{ref,is,not,then,otherwise,concat}=value;if(concat){obj=obj.concat(concat)}else if(ref){obj=obj.when(ref,{is:is,not:not,then:then,otherwise:otherwise,switch:value.switch,break:value.break})}else{obj=obj.when(is,{then:then,otherwise:otherwise,break:value.break})}}continue}if(key==="shared"){for(const value of values){obj=obj.shared(value)}}}return obj}},messages:{"any.custom":'"{{#label}}" failed custom validation because {{#error.message}}',"any.default":'"{{#label}}" threw an error when running default method',"any.failover":'"{{#label}}" threw an error when running failover method',"any.invalid":'"{{#label}}" contains an invalid value',"any.only":'"{{#label}}" must be {if(#valids.length == 1, "", "one of ")}{{#valids}}',"any.ref":'"{{#label}}" {{#arg}} references "{{#ref}}" which {{#reason}}',"any.required":'"{{#label}}" is required',"any.unknown":'"{{#label}}" is not allowed'}})},{"../base":23,"../common":25,"../messages":31,"@hapi/hoek/lib/assert":115}],40:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const DeepEqual=require("@hapi/hoek/lib/deepEqual");const Reach=require("@hapi/hoek/lib/reach");const Any=require("./any");const Common=require("../common");const Compile=require("../compile");const internals={};module.exports=Any.extend({type:"array",flags:{single:{default:false},sparse:{default:false}},terms:{items:{init:[],manifest:"schema"},ordered:{init:[],manifest:"schema"},_exclusions:{init:[]},_inclusions:{init:[]},_requireds:{init:[]}},coerce:{from:"object",method(value,{schema,state,prefs}){if(!Array.isArray(value)){return}const sort=schema.$_getRule("sort");if(!sort){return}return internals.sort(schema,value,sort.args.options,state,prefs)}},validate(value,{schema,error}){if(!Array.isArray(value)){if(schema._flags.single){const single=[value];single[Common.symbols.arraySingle]=true;return{value:single}}return{errors:error("array.base")}}if(!schema.$_getRule("items")&&!schema.$_terms.externals){return}return{value:value.slice()}},rules:{has:{method(schema){schema=this.$_compile(schema,{appendPath:true});const obj=this.$_addRule({name:"has",args:{schema:schema}});obj.$_mutateRegister(schema);return obj},validate(value,{state,prefs,error},{schema:has}){const ancestors=[value,...state.ancestors];for(let i=0;i<value.length;++i){const localState=state.localize([...state.path,i],ancestors,has);if(has.$_match(value[i],localState,prefs)){return value}}const patternLabel=has._flags.label;if(patternLabel){return error("array.hasKnown",{patternLabel:patternLabel})}return error("array.hasUnknown",null)},multi:true},items:{method(...schemas){Common.verifyFlat(schemas,"items");const obj=this.$_addRule("items");for(let i=0;i<schemas.length;++i){const type=Common.tryWithPath(()=>this.$_compile(schemas[i]),i,{append:true});obj.$_terms.items.push(type)}return obj.$_mutateRebuild()},validate(value,{schema,error,state,prefs}){const requireds=schema.$_terms._requireds.slice();const ordereds=schema.$_terms.ordered.slice();const inclusions=[...schema.$_terms._inclusions,...requireds];const wasArray=!value[Common.symbols.arraySingle];delete value[Common.symbols.arraySingle];const errors=[];let il=value.length;for(let i=0;i<il;++i){const item=value[i];let errored=false;let isValid=false;const key=wasArray?i:new Number(i);const path=[...state.path,key];if(!schema._flags.sparse&&item===undefined){errors.push(error("array.sparse",{key:key,path:path,pos:i,value:undefined},state.localize(path)));if(prefs.abortEarly){return errors}ordereds.shift();continue}const ancestors=[value,...state.ancestors];for(const exclusion of schema.$_terms._exclusions){if(!exclusion.$_match(item,state.localize(path,ancestors,exclusion),prefs,{presence:"ignore"})){continue}errors.push(error("array.excludes",{pos:i,value:item},state.localize(path)));if(prefs.abortEarly){return errors}errored=true;ordereds.shift();break}if(errored){continue}if(schema.$_terms.ordered.length){if(ordereds.length){const ordered=ordereds.shift();const res=ordered.$_validate(item,state.localize(path,ancestors,ordered),prefs);if(!res.errors){if(ordered._flags.result==="strip"){internals.fastSplice(value,i);--i;--il}else if(!schema._flags.sparse&&res.value===undefined){errors.push(error("array.sparse",{key:key,path:path,pos:i,value:undefined},state.localize(path)));if(prefs.abortEarly){return errors}continue}else{value[i]=res.value}}else{errors.push(...res.errors);if(prefs.abortEarly){return errors}}continue}else if(!schema.$_terms.items.length){errors.push(error("array.orderedLength",{pos:i,limit:schema.$_terms.ordered.length}));if(prefs.abortEarly){return errors}break}}const requiredChecks=[];let jl=requireds.length;for(let j=0;j<jl;++j){const localState=state.localize(path,ancestors,requireds[j]);localState.snapshot();const res=requireds[j].$_validate(item,localState,prefs);requiredChecks[j]=res;if(!res.errors){value[i]=res.value;isValid=true;internals.fastSplice(requireds,j);--j;--jl;if(!schema._flags.sparse&&res.value===undefined){errors.push(error("array.sparse",{key:key,path:path,pos:i,value:undefined},state.localize(path)));if(prefs.abortEarly){return errors}}break}localState.restore()}if(isValid){continue}const stripUnknown=prefs.stripUnknown&&!!prefs.stripUnknown.arrays||false;jl=inclusions.length;for(const inclusion of inclusions){let res;const previousCheck=requireds.indexOf(inclusion);if(previousCheck!==-1){res=requiredChecks[previousCheck]}else{const localState=state.localize(path,ancestors,inclusion);localState.snapshot();res=inclusion.$_validate(item,localState,prefs);if(!res.errors){if(inclusion._flags.result==="strip"){internals.fastSplice(value,i);--i;--il}else if(!schema._flags.sparse&&res.value===undefined){errors.push(error("array.sparse",{key:key,path:path,pos:i,value:undefined},state.localize(path)));errored=true}else{value[i]=res.value}isValid=true;break}localState.restore()}if(jl===1){if(stripUnknown){internals.fastSplice(value,i);--i;--il;isValid=true;break}errors.push(...res.errors);if(prefs.abortEarly){return errors}errored=true;break}}if(errored){continue}if(schema.$_terms._inclusions.length&&!isValid){if(stripUnknown){internals.fastSplice(value,i);--i;--il;continue}errors.push(error("array.includes",{pos:i,value:item},state.localize(path)));if(prefs.abortEarly){return errors}}}if(requireds.length){internals.fillMissedErrors(schema,errors,requireds,value,state,prefs)}if(ordereds.length){internals.fillOrderedErrors(schema,errors,ordereds,value,state,prefs)}return errors.length?errors:value},priority:true,manifest:false},length:{method(limit){return this.$_addRule({name:"length",args:{limit:limit},operator:"="})},validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(value.length,limit,operator)){return value}return helpers.error("array."+name,{limit:args.limit,value:value})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"}]},max:{method(limit){return this.$_addRule({name:"max",method:"length",args:{limit:limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"length",args:{limit:limit},operator:">="})}},ordered:{method(...schemas){Common.verifyFlat(schemas,"ordered");const obj=this.$_addRule("items");for(let i=0;i<schemas.length;++i){const type=Common.tryWithPath(()=>this.$_compile(schemas[i]),i,{append:true});internals.validateSingle(type,obj);obj.$_mutateRegister(type);obj.$_terms.ordered.push(type)}return obj.$_mutateRebuild()}},single:{method(enabled){const value=enabled===undefined?true:!!enabled;Assert(!value||!this._flags._arrayItems,"Cannot specify single rule when array has array items");return this.$_setFlag("single",value)}},sort:{method(options={}){Common.assertOptions(options,["by","order"]);const settings={order:options.order||"ascending"};if(options.by){settings.by=Compile.ref(options.by,{ancestor:0});Assert(!settings.by.ancestor,"Cannot sort by ancestor")}return this.$_addRule({name:"sort",args:{options:settings}})},validate(value,{error,state,prefs,schema},{options}){const{value:sorted,errors}=internals.sort(schema,value,options,state,prefs);if(errors){return errors}for(let i=0;i<value.length;++i){if(value[i]!==sorted[i]){return error("array.sort",{order:options.order,by:options.by?options.by.key:"value"})}}return value},convert:true},sparse:{method(enabled){const value=enabled===undefined?true:!!enabled;if(this._flags.sparse===value){return this}const obj=value?this.clone():this.$_addRule("items");return obj.$_setFlag("sparse",value,{clone:false})}},unique:{method(comparator,options={}){Assert(!comparator||typeof comparator==="function"||typeof comparator==="string","comparator must be a function or a string");Common.assertOptions(options,["ignoreUndefined","separator"]);const rule={name:"unique",args:{options:options,comparator:comparator}};if(comparator){if(typeof comparator==="string"){const separator=Common.default(options.separator,".");rule.path=separator?comparator.split(separator):[comparator]}else{rule.comparator=comparator}}return this.$_addRule(rule)},validate(value,{state,error,schema},{comparator:raw,options},{comparator,path}){const found={string:Object.create(null),number:Object.create(null),undefined:Object.create(null),boolean:Object.create(null),object:new Map,function:new Map,custom:new Map};const compare=comparator||DeepEqual;const ignoreUndefined=options.ignoreUndefined;for(let i=0;i<value.length;++i){const item=path?Reach(value[i],path):value[i];const records=comparator?found.custom:found[typeof item];Assert(records,"Failed to find unique map container for type",typeof item);if(records instanceof Map){const entries=records.entries();let current;while(!(current=entries.next()).done){if(compare(current.value[0],item)){const localState=state.localize([...state.path,i],[value,...state.ancestors]);const context={pos:i,value:value[i],dupePos:current.value[1],dupeValue:value[current.value[1]]};if(path){context.path=raw}return error("array.unique",context,localState)}}records.set(item,i)}else{if((!ignoreUndefined||item!==undefined)&&records[item]!==undefined){const context={pos:i,value:value[i],dupePos:records[item],dupeValue:value[records[item]]};if(path){context.path=raw}const localState=state.localize([...state.path,i],[value,...state.ancestors]);return error("array.unique",context,localState)}records[item]=i}}return value},args:["comparator","options"],multi:true}},cast:{set:{from:Array.isArray,to(value,helpers){return new Set(value)}}},rebuild(schema){schema.$_terms._inclusions=[];schema.$_terms._exclusions=[];schema.$_terms._requireds=[];for(const type of schema.$_terms.items){internals.validateSingle(type,schema);if(type._flags.presence==="required"){schema.$_terms._requireds.push(type)}else if(type._flags.presence==="forbidden"){schema.$_terms._exclusions.push(type)}else{schema.$_terms._inclusions.push(type)}}for(const type of schema.$_terms.ordered){internals.validateSingle(type,schema)}},manifest:{build(obj,desc){if(desc.items){obj=obj.items(...desc.items)}if(desc.ordered){obj=obj.ordered(...desc.ordered)}return obj}},messages:{"array.base":'"{{#label}}" must be an array',"array.excludes":'"{{#label}}" contains an excluded value',"array.hasKnown":'"{{#label}}" does not contain at least one required match for type "{#patternLabel}"',"array.hasUnknown":'"{{#label}}" does not contain at least one required match',"array.includes":'"{{#label}}" does not match any of the allowed types',"array.includesRequiredBoth":'"{{#label}}" does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)',"array.includesRequiredKnowns":'"{{#label}}" does not contain {{#knownMisses}}',"array.includesRequiredUnknowns":'"{{#label}}" does not contain {{#unknownMisses}} required value(s)',"array.length":'"{{#label}}" must contain {{#limit}} items',"array.max":'"{{#label}}" must contain less than or equal to {{#limit}} items',"array.min":'"{{#label}}" must contain at least {{#limit}} items',"array.orderedLength":'"{{#label}}" must contain at most {{#limit}} items',"array.sort":'"{{#label}}" must be sorted in {#order} order by {{#by}}',"array.sort.mismatching":'"{{#label}}" cannot be sorted due to mismatching types',"array.sort.unsupported":'"{{#label}}" cannot be sorted due to unsupported type {#type}',"array.sparse":'"{{#label}}" must not be a sparse array item',"array.unique":'"{{#label}}" contains a duplicate value'}});internals.fillMissedErrors=function(schema,errors,requireds,value,state,prefs){const knownMisses=[];let unknownMisses=0;for(const required of requireds){const label=required._flags.label;if(label){knownMisses.push(label)}else{++unknownMisses}}if(knownMisses.length){if(unknownMisses){errors.push(schema.$_createError("array.includesRequiredBoth",value,{knownMisses:knownMisses,unknownMisses:unknownMisses},state,prefs))}else{errors.push(schema.$_createError("array.includesRequiredKnowns",value,{knownMisses:knownMisses},state,prefs))}}else{errors.push(schema.$_createError("array.includesRequiredUnknowns",value,{unknownMisses:unknownMisses},state,prefs))}};internals.fillOrderedErrors=function(schema,errors,ordereds,value,state,prefs){const requiredOrdereds=[];for(const ordered of ordereds){if(ordered._flags.presence==="required"){requiredOrdereds.push(ordered)}}if(requiredOrdereds.length){internals.fillMissedErrors(schema,errors,requiredOrdereds,value,state,prefs)}};internals.fastSplice=function(arr,i){let pos=i;while(pos<arr.length){arr[pos++]=arr[pos]}--arr.length};internals.validateSingle=function(type,obj){if(type.type==="array"||type._flags._arrayItems){Assert(!obj._flags.single,"Cannot specify array item with single rule enabled");obj.$_setFlag("_arrayItems",true,{clone:false})}};internals.sort=function(schema,value,settings,state,prefs){const order=settings.order==="ascending"?1:-1;const aFirst=-1*order;const bFirst=order;const sort=(a,b)=>{let compare=internals.compare(a,b,aFirst,bFirst);if(compare!==null){return compare}if(settings.by){a=settings.by.resolve(a,state,prefs);b=settings.by.resolve(b,state,prefs)}compare=internals.compare(a,b,aFirst,bFirst);if(compare!==null){return compare}const type=typeof a;if(type!==typeof b){throw schema.$_createError("array.sort.mismatching",value,null,state,prefs)}if(type!=="number"&&type!=="string"){throw schema.$_createError("array.sort.unsupported",value,{type:type},state,prefs)}if(type==="number"){return(a-b)*order}return a<b?aFirst:bFirst};try{return{value:value.slice().sort(sort)}}catch(err){return{errors:err}}};internals.compare=function(a,b,aFirst,bFirst){if(a===b){return 0}if(a===undefined){return 1}if(b===undefined){return-1}if(a===null){return bFirst}if(b===null){return aFirst}return null}},{"../common":25,"../compile":26,"./any":39,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/reach":133}],41:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const Common=require("../common");const internals={};module.exports=Any.extend({type:"binary",coerce:{from:"string",method(value,{schema}){try{return{value:Buffer.from(value,schema._flags.encoding)}}catch(ignoreErr){}}},validate(value,{error}){if(!Buffer.isBuffer(value)){return{value:value,errors:error("binary.base")}}},rules:{encoding:{method(encoding){Assert(Buffer.isEncoding(encoding),"Invalid encoding:",encoding);return this.$_setFlag("encoding",encoding)}},length:{method(limit){return this.$_addRule({name:"length",method:"length",args:{limit:limit},operator:"="})},validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(value.length,limit,operator)){return value}return helpers.error("binary."+name,{limit:args.limit,value:value})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"}]},max:{method(limit){return this.$_addRule({name:"max",method:"length",args:{limit:limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"length",args:{limit:limit},operator:">="})}}},cast:{string:{from:value=>Buffer.isBuffer(value),to(value,helpers){return value.toString()}}},messages:{"binary.base":'"{{#label}}" must be a buffer or a string',"binary.length":'"{{#label}}" must be {{#limit}} bytes',"binary.max":'"{{#label}}" must be less than or equal to {{#limit}} bytes',"binary.min":'"{{#label}}" must be at least {{#limit}} bytes'}})},{"../common":25,"./any":39,"@hapi/hoek/lib/assert":115}],42:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const Common=require("../common");const Values=require("../values");const internals={};internals.isBool=function(value){return typeof value==="boolean"};module.exports=Any.extend({type:"boolean",flags:{sensitive:{default:false}},terms:{falsy:{init:null,manifest:"values"},truthy:{init:null,manifest:"values"}},coerce(value,{schema}){if(typeof value==="boolean"){return}if(typeof value==="string"){const normalized=schema._flags.sensitive?value:value.toLowerCase();value=normalized==="true"?true:normalized==="false"?false:value}if(typeof value!=="boolean"){value=schema.$_terms.truthy&&schema.$_terms.truthy.has(value,null,null,!schema._flags.sensitive)||(schema.$_terms.falsy&&schema.$_terms.falsy.has(value,null,null,!schema._flags.sensitive)?false:value)}return{value:value}},validate(value,{error}){if(typeof value!=="boolean"){return{value:value,errors:error("boolean.base")}}},rules:{truthy:{method(...values){Common.verifyFlat(values,"truthy");const obj=this.clone();obj.$_terms.truthy=obj.$_terms.truthy||new Values;for(let i=0;i<values.length;++i){const value=values[i];Assert(value!==undefined,"Cannot call truthy with undefined");obj.$_terms.truthy.add(value)}return obj}},falsy:{method(...values){Common.verifyFlat(values,"falsy");const obj=this.clone();obj.$_terms.falsy=obj.$_terms.falsy||new Values;for(let i=0;i<values.length;++i){const value=values[i];Assert(value!==undefined,"Cannot call falsy with undefined");obj.$_terms.falsy.add(value)}return obj}},sensitive:{method(enabled=true){return this.$_setFlag("sensitive",enabled)}}},cast:{number:{from:internals.isBool,to(value,helpers){return value?1:0}},string:{from:internals.isBool,to(value,helpers){return value?"true":"false"}}},manifest:{build(obj,desc){if(desc.truthy){obj=obj.truthy(...desc.truthy)}if(desc.falsy){obj=obj.falsy(...desc.falsy)}return obj}},messages:{"boolean.base":'"{{#label}}" must be a boolean'}})},{"../common":25,"../values":54,"./any":39,"@hapi/hoek/lib/assert":115}],43:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const Common=require("../common");const Template=require("../template");const internals={};internals.isDate=function(value){return value instanceof Date};module.exports=Any.extend({type:"date",coerce:{from:["number","string"],method(value,{schema}){return{value:internals.parse(value,schema._flags.format)||value}}},validate(value,{schema,error,prefs}){if(value instanceof Date&&!isNaN(value.getTime())){return}const format=schema._flags.format;if(!prefs.convert||!format||typeof value!=="string"){return{value:value,errors:error("date.base")}}return{value:value,errors:error("date.format",{format:format})}},rules:{compare:{method:false,validate(value,helpers,{date},{name,operator,args}){const to=date==="now"?Date.now():date.getTime();if(Common.compare(value.getTime(),to,operator)){return value}return helpers.error("date."+name,{limit:args.date,value:value})},args:[{name:"date",ref:true,normalize:date=>{return date==="now"?date:internals.parse(date)},assert:date=>date!==null,message:"must have a valid date format"}]},format:{method(format){Assert(["iso","javascript","unix"].includes(format),"Unknown date format",format);return this.$_setFlag("format",format)}},greater:{method(date){return this.$_addRule({name:"greater",method:"compare",args:{date:date},operator:">"})}},iso:{method(){return this.format("iso")}},less:{method(date){return this.$_addRule({name:"less",method:"compare",args:{date:date},operator:"<"})}},max:{method(date){return this.$_addRule({name:"max",method:"compare",args:{date:date},operator:"<="})}},min:{method(date){return this.$_addRule({name:"min",method:"compare",args:{date:date},operator:">="})}},timestamp:{method(type="javascript"){Assert(["javascript","unix"].includes(type),'"type" must be one of "javascript, unix"');return this.format(type)}}},cast:{number:{from:internals.isDate,to(value,helpers){return value.getTime()}},string:{from:internals.isDate,to(value,{prefs}){return Template.date(value,prefs)}}},messages:{"date.base":'"{{#label}}" must be a valid date',"date.format":'"{{#label}}" must be in {msg("date.format." + #format) || #format} format',"date.greater":'"{{#label}}" must be greater than "{{#limit}}"',"date.less":'"{{#label}}" must be less than "{{#limit}}"',"date.max":'"{{#label}}" must be less than or equal to "{{#limit}}"',"date.min":'"{{#label}}" must be larger than or equal to "{{#limit}}"',"date.format.iso":"ISO 8601 date","date.format.javascript":"timestamp or number of milliseconds","date.format.unix":"timestamp or number of seconds"}});internals.parse=function(value,format){if(value instanceof Date){return value}if(typeof value!=="string"&&(isNaN(value)||!isFinite(value))){return null}if(/^\s*$/.test(value)){return null}if(format==="iso"){if(!Common.isIsoDate(value)){return null}return internals.date(value.toString())}const original=value;if(typeof value==="string"&&/^[+-]?\d+(\.\d+)?$/.test(value)){value=parseFloat(value)}if(format){if(format==="javascript"){return internals.date(1*value)}if(format==="unix"){return internals.date(1e3*value)}if(typeof original==="string"){return null}}return internals.date(value)};internals.date=function(value){const date=new Date(value);if(!isNaN(date.getTime())){return date}return null}},{"../common":25,"../template":36,"./any":39,"@hapi/hoek/lib/assert":115}],44:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Keys=require("./keys");const internals={};module.exports=Keys.extend({type:"function",properties:{typeof:"function"},rules:{arity:{method(n){Assert(Number.isSafeInteger(n)&&n>=0,"n must be a positive integer");return this.$_addRule({name:"arity",args:{n:n}})},validate(value,helpers,{n}){if(value.length===n){return value}return helpers.error("function.arity",{n:n})}},class:{method(){return this.$_addRule("class")},validate(value,helpers){if(/^\s*class\s/.test(value.toString())){return value}return helpers.error("function.class",{value:value})}},minArity:{method(n){Assert(Number.isSafeInteger(n)&&n>0,"n must be a strict positive integer");return this.$_addRule({name:"minArity",args:{n:n}})},validate(value,helpers,{n}){if(value.length>=n){return value}return helpers.error("function.minArity",{n:n})}},maxArity:{method(n){Assert(Number.isSafeInteger(n)&&n>=0,"n must be a positive integer");return this.$_addRule({name:"maxArity",args:{n:n}})},validate(value,helpers,{n}){if(value.length<=n){return value}return helpers.error("function.maxArity",{n:n})}}},messages:{"function.arity":'"{{#label}}" must have an arity of {{#n}}',"function.class":'"{{#label}}" must be a class',"function.maxArity":'"{{#label}}" must have an arity lesser or equal to {{#n}}',"function.minArity":'"{{#label}}" must have an arity greater or equal to {{#n}}'}})},{"./keys":45,"@hapi/hoek/lib/assert":115}],45:[function(require,module,exports){"use strict";const ApplyToDefaults=require("@hapi/hoek/lib/applyToDefaults");const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Topo=require("@hapi/topo");const Any=require("./any");const Common=require("../common");const Compile=require("../compile");const Errors=require("../errors");const Ref=require("../ref");const Template=require("../template");const internals={renameDefaults:{alias:false,multiple:false,override:false}};module.exports=Any.extend({type:"_keys",properties:{typeof:"object"},flags:{unknown:{default:false}},terms:{dependencies:{init:null},keys:{init:null,manifest:{mapped:{from:"schema",to:"key"}}},patterns:{init:null},renames:{init:null}},args(schema,keys){return schema.keys(keys)},validate(value,{schema,error,state,prefs}){if(!value||typeof value!==schema.$_property("typeof")||Array.isArray(value)){return{value:value,errors:error("object.base",{type:schema.$_property("typeof")})}}if(!schema.$_terms.renames&&!schema.$_terms.dependencies&&!schema.$_terms.keys&&!schema.$_terms.patterns&&!schema.$_terms.externals){return}value=internals.clone(value,prefs);const errors=[];if(schema.$_terms.renames&&!internals.rename(schema,value,state,prefs,errors)){return{value:value,errors:errors}}if(!schema.$_terms.keys&&!schema.$_terms.patterns&&!schema.$_terms.dependencies){return{value:value,errors:errors}}const unprocessed=new Set(Object.keys(value));if(schema.$_terms.keys){const ancestors=[value,...state.ancestors];for(const child of schema.$_terms.keys){const key=child.key;const item=value[key];unprocessed.delete(key);const localState=state.localize([...state.path,key],ancestors,child);const result=child.schema.$_validate(item,localState,prefs);if(result.errors){if(prefs.abortEarly){return{value:value,errors:result.errors}}errors.push(...result.errors)}else if(child.schema._flags.result==="strip"||result.value===undefined&&item!==undefined){delete value[key]}else if(result.value!==undefined){value[key]=result.value}}}if(unprocessed.size||schema._flags._hasPatternMatch){const early=internals.unknown(schema,value,unprocessed,errors,state,prefs);if(early){return early}}if(schema.$_terms.dependencies){for(const dep of schema.$_terms.dependencies){if(dep.key&&dep.key.resolve(value,state,prefs,null,{shadow:false})===undefined){continue}const failed=internals.dependencies[dep.rel](schema,dep,value,state,prefs);if(failed){const report=schema.$_createError(failed.code,value,failed.context,state,prefs);if(prefs.abortEarly){return{value:value,errors:report}}errors.push(report)}}}return{value:value,errors:errors}},rules:{and:{method(...peers){Common.verifyFlat(peers,"and");return internals.dependency(this,"and",null,peers)}},append:{method(schema){if(schema===null||schema===undefined||Object.keys(schema).length===0){return this}return this.keys(schema)}},assert:{method(subject,schema,message){if(!Template.isTemplate(subject)){subject=Compile.ref(subject)}Assert(message===undefined||typeof message==="string","Message must be a string");schema=this.$_compile(schema,{appendPath:true});const obj=this.$_addRule({name:"assert",args:{subject:subject,schema:schema,message:message}});obj.$_mutateRegister(subject);obj.$_mutateRegister(schema);return obj},validate(value,{error,prefs,state},{subject,schema,message}){const about=subject.resolve(value,state,prefs);const path=Ref.isRef(subject)?subject.absolute(state):[];if(schema.$_match(about,state.localize(path,[value,...state.ancestors],schema),prefs)){return value}return error("object.assert",{subject:subject,message:message})},args:["subject","schema","message"],multi:true},instance:{method(constructor,name){Assert(typeof constructor==="function","constructor must be a function");name=name||constructor.name;return this.$_addRule({name:"instance",args:{constructor:constructor,name:name}})},validate(value,helpers,{constructor,name}){if(value instanceof constructor){return value}return helpers.error("object.instance",{type:name,value:value})},args:["constructor","name"]},keys:{method(schema){Assert(schema===undefined||typeof schema==="object","Object schema must be a valid object");Assert(!Common.isSchema(schema),"Object schema cannot be a joi schema");const obj=this.clone();if(!schema){obj.$_terms.keys=null}else if(!Object.keys(schema).length){obj.$_terms.keys=[]}else{obj.$_terms.keys=obj.$_terms.keys?obj.$_terms.keys.filter(child=>!schema.hasOwnProperty(child.key)):[];for(const key in schema){Common.tryWithPath(()=>obj.$_terms.keys.push({key:key,schema:this.$_compile(schema[key])}),key)}}return obj.$_mutateRebuild()}},length:{method(limit){return this.$_addRule({name:"length",args:{limit:limit},operator:"="})},validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(Object.keys(value).length,limit,operator)){return value}return helpers.error("object."+name,{limit:args.limit,value:value})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"}]},max:{method(limit){return this.$_addRule({name:"max",method:"length",args:{limit:limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"length",args:{limit:limit},operator:">="})}},nand:{method(...peers){Common.verifyFlat(peers,"nand");return internals.dependency(this,"nand",null,peers)}},or:{method(...peers){Common.verifyFlat(peers,"or");return internals.dependency(this,"or",null,peers)}},oxor:{method(...peers){return internals.dependency(this,"oxor",null,peers)}},pattern:{method(pattern,schema,options={}){const isRegExp=pattern instanceof RegExp;if(!isRegExp){pattern=this.$_compile(pattern,{appendPath:true})}Assert(schema!==undefined,"Invalid rule");Common.assertOptions(options,["fallthrough","matches"]);if(isRegExp){Assert(!pattern.flags.includes("g")&&!pattern.flags.includes("y"),"pattern should not use global or sticky mode")}schema=this.$_compile(schema,{appendPath:true});const obj=this.clone();obj.$_terms.patterns=obj.$_terms.patterns||[];const config={[isRegExp?"regex":"schema"]:pattern,rule:schema};if(options.matches){config.matches=this.$_compile(options.matches);if(config.matches.type!=="array"){config.matches=config.matches.$_root.array().items(config.matches)}obj.$_mutateRegister(config.matches);obj.$_setFlag("_hasPatternMatch",true,{clone:false})}if(options.fallthrough){config.fallthrough=true}obj.$_terms.patterns.push(config);obj.$_mutateRegister(schema);return obj}},ref:{method(){return this.$_addRule("ref")},validate(value,helpers){if(Ref.isRef(value)){return value}return helpers.error("object.refType",{value:value})}},rename:{method(from,to,options={}){Assert(typeof from==="string"||from instanceof RegExp,"Rename missing the from argument");Assert(typeof to==="string"||to instanceof Template,"Invalid rename to argument");Assert(to!==from,"Cannot rename key to same name:",from);Common.assertOptions(options,["alias","ignoreUndefined","override","multiple"]);const obj=this.clone();obj.$_terms.renames=obj.$_terms.renames||[];for(const rename of obj.$_terms.renames){Assert(rename.from!==from,"Cannot rename the same key multiple times")}if(to instanceof Template){obj.$_mutateRegister(to)}obj.$_terms.renames.push({from:from,to:to,options:ApplyToDefaults(internals.renameDefaults,options)});return obj}},schema:{method(type="any"){return this.$_addRule({name:"schema",args:{type:type}})},validate(value,helpers,{type}){if(Common.isSchema(value)&&(type==="any"||value.type===type)){return value}return helpers.error("object.schema",{type:type})}},unknown:{method(allow){return this.$_setFlag("unknown",allow!==false)}},with:{method(key,peers,options={}){return internals.dependency(this,"with",key,peers,options)}},without:{method(key,peers,options={}){return internals.dependency(this,"without",key,peers,options)}},xor:{method(...peers){Common.verifyFlat(peers,"xor");return internals.dependency(this,"xor",null,peers)}}},overrides:{default(value,options){if(value===undefined){value=Common.symbols.deepDefault}return this.$_super.default(value,options)}},rebuild(schema){if(schema.$_terms.keys){const topo=new Topo;for(const child of schema.$_terms.keys){Common.tryWithPath(()=>topo.add(child,{after:child.schema.$_rootReferences(),group:child.key}),child.key)}schema.$_terms.keys=new internals.Keys(...topo.nodes)}},manifest:{build(obj,desc){if(desc.keys){obj=obj.keys(desc.keys)}if(desc.dependencies){for(const{rel,key:key=null,peers,options}of desc.dependencies){obj=internals.dependency(obj,rel,key,peers,options)}}if(desc.patterns){for(const{regex,schema,rule,fallthrough,matches}of desc.patterns){obj=obj.pattern(regex||schema,rule,{fallthrough:fallthrough,matches:matches})}}if(desc.renames){for(const{from,to,options}of desc.renames){obj=obj.rename(from,to,options)}}return obj}},messages:{"object.and":'"{{#label}}" contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}',"object.assert":'"{{#label}}" is invalid because {if(#subject.key, `"` + #subject.key + `" failed to ` + (#message || "pass the assertion test"), #message || "the assertion failed")}',"object.base":'"{{#label}}" must be of type {{#type}}',"object.instance":'"{{#label}}" must be an instance of "{{#type}}"',"object.length":'"{{#label}}" must have {{#limit}} key{if(#limit == 1, "", "s")}',"object.max":'"{{#label}}" must have less than or equal to {{#limit}} key{if(#limit == 1, "", "s")}',"object.min":'"{{#label}}" must have at least {{#limit}} key{if(#limit == 1, "", "s")}',"object.missing":'"{{#label}}" must contain at least one of {{#peersWithLabels}}',"object.nand":'"{{#mainWithLabel}}" must not exist simultaneously with {{#peersWithLabels}}',"object.oxor":'"{{#label}}" contains a conflict between optional exclusive peers {{#peersWithLabels}}',"object.pattern.match":'"{{#label}}" keys failed to match pattern requirements',"object.refType":'"{{#label}}" must be a Joi reference',"object.rename.multiple":'"{{#label}}" cannot rename "{{#from}}" because multiple renames are disabled and another key was already renamed to "{{#to}}"',"object.rename.override":'"{{#label}}" cannot rename "{{#from}}" because override is disabled and target "{{#to}}" exists',"object.schema":'"{{#label}}" must be a Joi schema of {{#type}} type',"object.unknown":'"{{#label}}" is not allowed',"object.with":'"{{#mainWithLabel}}" missing required peer "{{#peerWithLabel}}"',"object.without":'"{{#mainWithLabel}}" conflict with forbidden peer "{{#peerWithLabel}}"',"object.xor":'"{{#label}}" contains a conflict between exclusive peers {{#peersWithLabels}}'}});internals.clone=function(value,prefs){if(typeof value==="object"){if(prefs.nonEnumerables){return Clone(value,{shallow:true})}const clone=Object.create(Object.getPrototypeOf(value));Object.assign(clone,value);return clone}const clone=function(...args){return value.apply(this,args)};clone.prototype=Clone(value.prototype);Object.defineProperty(clone,"name",{value:value.name,writable:false});Object.defineProperty(clone,"length",{value:value.length,writable:false});Object.assign(clone,value);return clone};internals.dependency=function(schema,rel,key,peers,options){Assert(key===null||typeof key==="string",rel,"key must be a strings");if(!options){options=peers.length>1&&typeof peers[peers.length-1]==="object"?peers.pop():{}}Common.assertOptions(options,["separator"]);peers=[].concat(peers);const separator=Common.default(options.separator,".");const paths=[];for(const peer of peers){Assert(typeof peer==="string",rel,"peers must be a string or a reference");paths.push(Compile.ref(peer,{separator:separator,ancestor:0,prefix:false}))}if(key!==null){key=Compile.ref(key,{separator:separator,ancestor:0,prefix:false})}const obj=schema.clone();obj.$_terms.dependencies=obj.$_terms.dependencies||[];obj.$_terms.dependencies.push(new internals.Dependency(rel,key,paths,peers));return obj};internals.dependencies={and(schema,dep,value,state,prefs){const missing=[];const present=[];const count=dep.peers.length;for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})===undefined){missing.push(peer.key)}else{present.push(peer.key)}}if(missing.length!==count&&present.length!==count){return{code:"object.and",context:{present:present,presentWithLabels:internals.keysToLabels(schema,present),missing:missing,missingWithLabels:internals.keysToLabels(schema,missing)}}}},nand(schema,dep,value,state,prefs){const present=[];for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})!==undefined){present.push(peer.key)}}if(present.length!==dep.peers.length){return}const main=dep.paths[0];const values=dep.paths.slice(1);return{code:"object.nand",context:{main:main,mainWithLabel:internals.keysToLabels(schema,main),peers:values,peersWithLabels:internals.keysToLabels(schema,values)}}},or(schema,dep,value,state,prefs){for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})!==undefined){return}}return{code:"object.missing",context:{peers:dep.paths,peersWithLabels:internals.keysToLabels(schema,dep.paths)}}},oxor(schema,dep,value,state,prefs){const present=[];for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})!==undefined){present.push(peer.key)}}if(!present.length||present.length===1){return}const context={peers:dep.paths,peersWithLabels:internals.keysToLabels(schema,dep.paths)};context.present=present;context.presentWithLabels=internals.keysToLabels(schema,present);return{code:"object.oxor",context:context}},with(schema,dep,value,state,prefs){for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})===undefined){return{code:"object.with",context:{main:dep.key.key,mainWithLabel:internals.keysToLabels(schema,dep.key.key),peer:peer.key,peerWithLabel:internals.keysToLabels(schema,peer.key)}}}}},without(schema,dep,value,state,prefs){for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})!==undefined){return{code:"object.without",context:{main:dep.key.key,mainWithLabel:internals.keysToLabels(schema,dep.key.key),peer:peer.key,peerWithLabel:internals.keysToLabels(schema,peer.key)}}}}},xor(schema,dep,value,state,prefs){const present=[];for(const peer of dep.peers){if(peer.resolve(value,state,prefs,null,{shadow:false})!==undefined){present.push(peer.key)}}if(present.length===1){return}const context={peers:dep.paths,peersWithLabels:internals.keysToLabels(schema,dep.paths)};if(present.length===0){return{code:"object.missing",context:context}}context.present=present;context.presentWithLabels=internals.keysToLabels(schema,present);return{code:"object.xor",context:context}}};internals.keysToLabels=function(schema,keys){if(Array.isArray(keys)){return keys.map(key=>schema.$_mapLabels(key))}return schema.$_mapLabels(keys)};internals.rename=function(schema,value,state,prefs,errors){const renamed={};for(const rename of schema.$_terms.renames){const matches=[];const pattern=typeof rename.from!=="string";if(!pattern){if(Object.prototype.hasOwnProperty.call(value,rename.from)&&(value[rename.from]!==undefined||!rename.options.ignoreUndefined)){matches.push(rename)}}else{for(const from in value){if(value[from]===undefined&&rename.options.ignoreUndefined){continue}if(from===rename.to){continue}const match=rename.from.exec(from);if(!match){continue}matches.push({from:from,to:rename.to,match:match})}}for(const match of matches){const from=match.from;let to=match.to;if(to instanceof Template){to=to.render(value,state,prefs,match.match)}if(from===to){continue}if(!rename.options.multiple&&renamed[to]){errors.push(schema.$_createError("object.rename.multiple",value,{from:from,to:to,pattern:pattern},state,prefs));if(prefs.abortEarly){return false}}if(Object.prototype.hasOwnProperty.call(value,to)&&!rename.options.override&&!renamed[to]){errors.push(schema.$_createError("object.rename.override",value,{from:from,to:to,pattern:pattern},state,prefs));if(prefs.abortEarly){return false}}if(value[from]===undefined){delete value[to]}else{value[to]=value[from]}renamed[to]=true;if(!rename.options.alias){delete value[from]}}}return true};internals.unknown=function(schema,value,unprocessed,errors,state,prefs){if(schema.$_terms.patterns){let hasMatches=false;const matches=schema.$_terms.patterns.map(pattern=>{if(pattern.matches){hasMatches=true;return[]}});const ancestors=[value,...state.ancestors];for(const key of unprocessed){const item=value[key];const path=[...state.path,key];for(let i=0;i<schema.$_terms.patterns.length;++i){const pattern=schema.$_terms.patterns[i];if(pattern.regex){const match=pattern.regex.test(key);state.mainstay.tracer.debug(state,"rule",`pattern.${i}`,match?"pass":"error");if(!match){continue}}else{if(!pattern.schema.$_match(key,state.nest(pattern.schema,`pattern.${i}`),prefs)){continue}}unprocessed.delete(key);const localState=state.localize(path,ancestors,{schema:pattern.rule,key:key});const result=pattern.rule.$_validate(item,localState,prefs);if(result.errors){if(prefs.abortEarly){return{value:value,errors:result.errors}}errors.push(...result.errors)}if(pattern.matches){matches[i].push(key)}value[key]=result.value;if(!pattern.fallthrough){break}}}if(hasMatches){for(let i=0;i<matches.length;++i){const match=matches[i];if(!match){continue}const stpm=schema.$_terms.patterns[i].matches;const localState=state.localize(state.path,ancestors,stpm);const result=stpm.$_validate(match,localState,prefs);if(result.errors){const details=Errors.details(result.errors,{override:false});details.matches=match;const report=schema.$_createError("object.pattern.match",value,details,state,prefs);if(prefs.abortEarly){return{value:value,errors:report}}errors.push(report)}}}}if(!unprocessed.size||!schema.$_terms.keys&&!schema.$_terms.patterns){return}if(prefs.stripUnknown&&!schema._flags.unknown||prefs.skipFunctions){const stripUnknown=prefs.stripUnknown?prefs.stripUnknown===true?true:!!prefs.stripUnknown.objects:false;for(const key of unprocessed){if(stripUnknown){delete value[key];unprocessed.delete(key)}else if(typeof value[key]==="function"){unprocessed.delete(key)}}}const forbidUnknown=!Common.default(schema._flags.unknown,prefs.allowUnknown);if(forbidUnknown){for(const unprocessedKey of unprocessed){const localState=state.localize([...state.path,unprocessedKey],[]);const report=schema.$_createError("object.unknown",value[unprocessedKey],{child:unprocessedKey},localState,prefs,{flags:false});if(prefs.abortEarly){return{value:value,errors:report}}errors.push(report)}}};internals.Dependency=class{constructor(rel,key,peers,paths){this.rel=rel;this.key=key;this.peers=peers;this.paths=paths}describe(){const desc={rel:this.rel,peers:this.paths};if(this.key!==null){desc.key=this.key.key}if(this.peers[0].separator!=="."){desc.options={separator:this.peers[0].separator}}return desc}};internals.Keys=class extends Array{concat(source){const result=this.slice();const keys=new Map;for(let i=0;i<result.length;++i){keys.set(result[i].key,i)}for(const item of source){const key=item.key;const pos=keys.get(key);if(pos!==undefined){result[pos]={key:key,schema:result[pos].schema.concat(item.schema)}}else{result.push(item)}}return result}}},{"../common":25,"../compile":26,"../errors":27,"../ref":33,"../template":36,"./any":39,"@hapi/hoek/lib/applyToDefaults":114,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/topo":278}],46:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const Common=require("../common");const Compile=require("../compile");const Errors=require("../errors");const internals={};module.exports=Any.extend({type:"link",properties:{schemaChain:true},terms:{link:{init:null,manifest:"single",register:false}},args(schema,ref){return schema.ref(ref)},validate(value,{schema,state,prefs}){Assert(schema.$_terms.link,"Uninitialized link schema");const linked=internals.generate(schema,value,state,prefs);const ref=schema.$_terms.link[0].ref;return linked.$_validate(value,state.nest(linked,`link:${ref.display}:${linked.type}`),prefs)},generate(schema,value,state,prefs){return internals.generate(schema,value,state,prefs)},rules:{ref:{method(ref){Assert(!this.$_terms.link,"Cannot reinitialize schema");ref=Compile.ref(ref);Assert(ref.type==="value"||ref.type==="local","Invalid reference type:",ref.type);Assert(ref.type==="local"||ref.ancestor==="root"||ref.ancestor>0,"Link cannot reference itself");const obj=this.clone();obj.$_terms.link=[{ref:ref}];return obj}},relative:{method(enabled=true){return this.$_setFlag("relative",enabled)}}},overrides:{concat(source){Assert(this.$_terms.link,"Uninitialized link schema");Assert(Common.isSchema(source),"Invalid schema object");Assert(source.type!=="link","Cannot merge type link with another link");const obj=this.clone();if(!obj.$_terms.whens){obj.$_terms.whens=[]}obj.$_terms.whens.push({concat:source});return obj.$_mutateRebuild()}},manifest:{build(obj,desc){Assert(desc.link,"Invalid link description missing link");return obj.ref(desc.link)}}});internals.generate=function(schema,value,state,prefs){let linked=state.mainstay.links.get(schema);if(linked){return linked._generate(value,state,prefs).schema}const ref=schema.$_terms.link[0].ref;const{perspective,path}=internals.perspective(ref,state);internals.assert(perspective,"which is outside of schema boundaries",ref,schema,state,prefs);try{linked=path.length?perspective.$_reach(path):perspective}catch(ignoreErr){internals.assert(false,"to non-existing schema",ref,schema,state,prefs)}internals.assert(linked.type!=="link","which is another link",ref,schema,state,prefs);if(!schema._flags.relative){state.mainstay.links.set(schema,linked)}return linked._generate(value,state,prefs).schema};internals.perspective=function(ref,state){if(ref.type==="local"){for(const{schema,key}of state.schemas){const id=schema._flags.id||key;if(id===ref.path[0]){return{perspective:schema,path:ref.path.slice(1)}}if(schema.$_terms.shared){for(const shared of schema.$_terms.shared){if(shared._flags.id===ref.path[0]){return{perspective:shared,path:ref.path.slice(1)}}}}}return{perspective:null,path:null}}if(ref.ancestor==="root"){return{perspective:state.schemas[state.schemas.length-1].schema,path:ref.path}}return{perspective:state.schemas[ref.ancestor]&&state.schemas[ref.ancestor].schema,path:ref.path}};internals.assert=function(condition,message,ref,schema,state,prefs){if(condition){return}Assert(false,`"${Errors.label(schema._flags,state,prefs)}" contains link reference "${ref.display}" ${message}`)}},{"../common":25,"../compile":26,"../errors":27,"./any":39,"@hapi/hoek/lib/assert":115}],47:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const Common=require("../common");const internals={numberRx:/^\s*[+-]?(?:(?:\d+(?:\.\d*)?)|(?:\.\d+))(?:e([+-]?\d+))?\s*$/i,precisionRx:/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/};module.exports=Any.extend({type:"number",flags:{unsafe:{default:false}},coerce:{from:"string",method(value,{schema,error}){const matches=value.match(internals.numberRx);if(!matches){return}value=value.trim();const result={value:parseFloat(value)};if(result.value===0){result.value=0}if(!schema._flags.unsafe){if(value.match(/e/i)){const constructed=internals.normalizeExponent(`${result.value/Math.pow(10,matches[1])}e${matches[1]}`);if(constructed!==internals.normalizeExponent(value)){result.errors=error("number.unsafe");return result}}else{const string=result.value.toString();if(string.match(/e/i)){return result}if(string!==internals.normalizeDecimal(value)){result.errors=error("number.unsafe");return result}}}return result}},validate(value,{schema,error,prefs}){if(value===Infinity||value===-Infinity){return{value:value,errors:error("number.infinity")}}if(!Common.isNumber(value)){return{value:value,errors:error("number.base")}}const result={value:value};if(prefs.convert){const rule=schema.$_getRule("precision");if(rule){const precision=Math.pow(10,rule.args.limit);result.value=Math.round(result.value*precision)/precision}}if(result.value===0){result.value=0}if(!schema._flags.unsafe&&(value>Number.MAX_SAFE_INTEGER||value<Number.MIN_SAFE_INTEGER)){result.errors=error("number.unsafe")}return result},rules:{compare:{method:false,validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(value,limit,operator)){return value}return helpers.error("number."+name,{limit:args.limit,value:value})},args:[{name:"limit",ref:true,assert:Common.isNumber,message:"must be a number"}]},greater:{method(limit){return this.$_addRule({name:"greater",method:"compare",args:{limit:limit},operator:">"})}},integer:{method(){return this.$_addRule("integer")},validate(value,helpers){if(Math.trunc(value)-value===0){return value}return helpers.error("number.integer")}},less:{method(limit){return this.$_addRule({name:"less",method:"compare",args:{limit:limit},operator:"<"})}},max:{method(limit){return this.$_addRule({name:"max",method:"compare",args:{limit:limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"compare",args:{limit:limit},operator:">="})}},multiple:{method(base){return this.$_addRule({name:"multiple",args:{base:base}})},validate(value,helpers,{base},options){if(value%base===0){return value}return helpers.error("number.multiple",{multiple:options.args.base,value:value})},args:[{name:"base",ref:true,assert:value=>typeof value==="number"&&isFinite(value)&&value>0,message:"must be a positive number"}],multi:true},negative:{method(){return this.sign("negative")}},port:{method(){return this.$_addRule("port")},validate(value,helpers){if(Number.isSafeInteger(value)&&value>=0&&value<=65535){return value}return helpers.error("number.port")}},positive:{method(){return this.sign("positive")}},precision:{method(limit){Assert(Number.isSafeInteger(limit),"limit must be an integer");return this.$_addRule({name:"precision",args:{limit:limit}})},validate(value,helpers,{limit}){const places=value.toString().match(internals.precisionRx);const decimals=Math.max((places[1]?places[1].length:0)-(places[2]?parseInt(places[2],10):0),0);if(decimals<=limit){return value}return helpers.error("number.precision",{limit:limit,value:value})},convert:true},sign:{method(sign){Assert(["negative","positive"].includes(sign),"Invalid sign",sign);return this.$_addRule({name:"sign",args:{sign:sign}})},validate(value,helpers,{sign}){if(sign==="negative"&&value<0||sign==="positive"&&value>0){return value}return helpers.error(`number.${sign}`)}},unsafe:{method(enabled=true){Assert(typeof enabled==="boolean","enabled must be a boolean");return this.$_setFlag("unsafe",enabled)}}},cast:{string:{from:value=>typeof value==="number",to(value,helpers){return value.toString()}}},messages:{"number.base":'"{{#label}}" must be a number',"number.greater":'"{{#label}}" must be greater than {{#limit}}',"number.infinity":'"{{#label}}" cannot be infinity',"number.integer":'"{{#label}}" must be an integer',"number.less":'"{{#label}}" must be less than {{#limit}}',"number.max":'"{{#label}}" must be less than or equal to {{#limit}}',"number.min":'"{{#label}}" must be larger than or equal to {{#limit}}',"number.multiple":'"{{#label}}" must be a multiple of {{#multiple}}',"number.negative":'"{{#label}}" must be a negative number',"number.port":'"{{#label}}" must be a valid port',"number.positive":'"{{#label}}" must be a positive number',"number.precision":'"{{#label}}" must have no more than {{#limit}} decimal places',"number.unsafe":'"{{#label}}" must be a safe number'}});internals.normalizeExponent=function(str){return str.replace(/E/,"e").replace(/\.(\d*[1-9])?0+e/,".$1e").replace(/\.e/,"e").replace(/e\+/,"e").replace(/^\+/,"").replace(/^(-?)0+([1-9])/,"$1$2")};internals.normalizeDecimal=function(str){str=str.replace(/^\+/,"").replace(/\.0+$/,"").replace(/^(-?)\.([^\.]*)$/,"$10.$2").replace(/^(-?)0+([1-9])/,"$1$2");if(str.includes(".")&&str.endsWith("0")){str=str.replace(/0+$/,"")}if(str==="-0"){return"0"}return str}},{"../common":25,"./any":39,"@hapi/hoek/lib/assert":115}],48:[function(require,module,exports){"use strict";const Keys=require("./keys");const internals={};module.exports=Keys.extend({type:"object",cast:{map:{from:value=>value&&typeof value==="object",to(value,helpers){return new Map(Object.entries(value))}}}})},{"./keys":45}],49:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Domain=require("@hapi/address/lib/domain");const Email=require("@hapi/address/lib/email");const EscapeRegex=require("@hapi/hoek/lib/escapeRegex");const Tlds=require("@hapi/address/lib/tlds");const Any=require("../any");const Common=require("../../common");const Ip=require("./ip");const Uri=require("./uri");const internals={tlds:Tlds instanceof Set?{tlds:{allow:Tlds,deny:null}}:false,base64Regex:{true:{true:/^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}==|[\w\-]{3}=)?$/,false:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/},false:{true:/^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}(==)?|[\w\-]{3}=?)?$/,false:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/}},dataUriRegex:/^data:[\w+.-]+\/[\w+.-]+;((charset=[\w-]+|base64),)?(.*)$/,hexRegex:/^[a-f0-9]+$/i,hostRegex:/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$/,ipRegex:Ip.createIpRegex(["ipv4","ipv6","ipvfuture"],"optional"),isoDurationRegex:/^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$/,guidBrackets:{"{":"}","[":"]","(":")","":""},guidVersions:{uuidv1:"1",uuidv2:"2",uuidv3:"3",uuidv4:"4",uuidv5:"5"},cidrPresences:["required","optional","forbidden"],normalizationForms:["NFC","NFD","NFKC","NFKD"]};module.exports=Any.extend({type:"string",flags:{insensitive:{default:false},truncate:{default:false}},terms:{replacements:{init:null}},coerce:{from:"string",method(value,{schema,state,prefs}){const normalize=schema.$_getRule("normalize");if(normalize){value=value.normalize(normalize.args.form)}const casing=schema.$_getRule("case");if(casing){value=casing.args.direction==="upper"?value.toLocaleUpperCase():value.toLocaleLowerCase()}const trim=schema.$_getRule("trim");if(trim&&trim.args.enabled){value=value.trim()}if(schema.$_terms.replacements){for(const replacement of schema.$_terms.replacements){value=value.replace(replacement.pattern,replacement.replacement)}}const hex=schema.$_getRule("hex");if(hex&&hex.args.options.byteAligned&&value.length%2!==0){value=`0${value}`}if(schema.$_getRule("isoDate")){const iso=internals.isoDate(value);if(iso){value=iso}}if(schema._flags.truncate){const rule=schema.$_getRule("max");if(rule){let limit=rule.args.limit;if(Common.isResolvable(limit)){limit=limit.resolve(value,state,prefs);if(!Common.limit(limit)){return{value:value,errors:schema.$_createError("any.ref",limit,{ref:rule.args.limit,arg:"limit",reason:"must be a positive integer"},state,prefs)}}}value=value.slice(0,limit)}}return{value:value}}},validate(value,{error}){if(typeof value!=="string"){return{value:value,errors:error("string.base")}}if(value===""){return{value:value,errors:error("string.empty")}}},rules:{alphanum:{method(){return this.$_addRule("alphanum")},validate(value,helpers){if(/^[a-zA-Z0-9]+$/.test(value)){return value}return helpers.error("string.alphanum")}},base64:{method(options={}){Common.assertOptions(options,["paddingRequired","urlSafe"]);options={urlSafe:false,paddingRequired:true,...options};Assert(typeof options.paddingRequired==="boolean","paddingRequired must be boolean");Assert(typeof options.urlSafe==="boolean","urlSafe must be boolean");return this.$_addRule({name:"base64",args:{options:options}})},validate(value,helpers,{options}){const regex=internals.base64Regex[options.paddingRequired][options.urlSafe];if(regex.test(value)){return value}return helpers.error("string.base64")}},case:{method(direction){Assert(["lower","upper"].includes(direction),"Invalid case:",direction);return this.$_addRule({name:"case",args:{direction:direction}})},validate(value,helpers,{direction}){if(direction==="lower"&&value===value.toLocaleLowerCase()||direction==="upper"&&value===value.toLocaleUpperCase()){return value}return helpers.error(`string.${direction}case`)},convert:true},creditCard:{method(){return this.$_addRule("creditCard")},validate(value,helpers){let i=value.length;let sum=0;let mul=1;while(i--){const char=value.charAt(i)*mul;sum=sum+(char-(char>9)*9);mul=mul^3}if(sum>0&&sum%10===0){return value}return helpers.error("string.creditCard")}},dataUri:{method(options={}){Common.assertOptions(options,["paddingRequired"]);options={paddingRequired:true,...options};Assert(typeof options.paddingRequired==="boolean","paddingRequired must be boolean");return this.$_addRule({name:"dataUri",args:{options:options}})},validate(value,helpers,{options}){const matches=value.match(internals.dataUriRegex);if(matches){if(!matches[2]){return value}if(matches[2]!=="base64"){return value}const base64regex=internals.base64Regex[options.paddingRequired].false;if(base64regex.test(matches[3])){return value}}return helpers.error("string.dataUri")}},domain:{method(options){if(options){Common.assertOptions(options,["allowUnicode","minDomainSegments","tlds"])}const address=internals.addressOptions(options);return this.$_addRule({name:"domain",args:{options:options},address:address})},validate(value,helpers,args,{address}){if(Domain.isValid(value,address)){return value}return helpers.error("string.domain")}},email:{method(options={}){Common.assertOptions(options,["allowUnicode","ignoreLength","minDomainSegments","multiple","separator","tlds"]);Assert(options.multiple===undefined||typeof options.multiple==="boolean","multiple option must be an boolean");const address=internals.addressOptions(options);const regex=new RegExp(`\\s*[${options.separator?EscapeRegex(options.separator):","}]\\s*`);return this.$_addRule({name:"email",args:{options:options},regex:regex,address:address})},validate(value,helpers,{options},{regex,address}){const emails=options.multiple?value.split(regex):[value];const invalids=[];for(const email of emails){if(!Email.isValid(email,address)){invalids.push(email)}}if(!invalids.length){return value}return helpers.error("string.email",{value:value,invalids:invalids})}},guid:{alias:"uuid",method(options={}){Common.assertOptions(options,["version"]);let versionNumbers="";if(options.version){const versions=[].concat(options.version);Assert(versions.length>=1,"version must have at least 1 valid version specified");const set=new Set;for(let i=0;i<versions.length;++i){const version=versions[i];Assert(typeof version==="string","version at position "+i+" must be a string");const versionNumber=internals.guidVersions[version.toLowerCase()];Assert(versionNumber,"version at position "+i+" must be one of "+Object.keys(internals.guidVersions).join(", "));Assert(!set.has(versionNumber),"version at position "+i+" must not be a duplicate");versionNumbers+=versionNumber;set.add(versionNumber)}}const regex=new RegExp(`^([\\[{\\(]?)[0-9A-F]{8}([:-]?)[0-9A-F]{4}\\2?[${versionNumbers||"0-9A-F"}][0-9A-F]{3}\\2?[${versionNumbers?"89AB":"0-9A-F"}][0-9A-F]{3}\\2?[0-9A-F]{12}([\\]}\\)]?)$`,"i");return this.$_addRule({name:"guid",args:{options:options},regex:regex})},validate(value,helpers,args,{regex}){const results=regex.exec(value);if(!results){return helpers.error("string.guid")}if(internals.guidBrackets[results[1]]!==results[results.length-1]){return helpers.error("string.guid")}return value}},hex:{method(options={}){Common.assertOptions(options,["byteAligned"]);options={byteAligned:false,...options};Assert(typeof options.byteAligned==="boolean","byteAligned must be boolean");return this.$_addRule({name:"hex",args:{options:options}})},validate(value,helpers,{options}){if(!internals.hexRegex.test(value)){return helpers.error("string.hex")}if(options.byteAligned&&value.length%2!==0){return helpers.error("string.hexAlign")}return value}},hostname:{method(){return this.$_addRule("hostname")},validate(value,helpers){if(value.length<=255&&internals.hostRegex.test(value)||internals.ipRegex.test(value)){return value}return helpers.error("string.hostname")}},insensitive:{method(){return this.$_setFlag("insensitive",true)}},ip:{method(options={}){Common.assertOptions(options,["cidr","version"]);options=Object.assign({},options);let regex=internals.ipRegex;if(options.cidr){Assert(typeof options.cidr==="string","cidr must be a string");options.cidr=options.cidr.toLowerCase();Assert(internals.cidrPresences.includes(options.cidr),"cidr must be one of "+internals.cidrPresences.join(", "));if(!options.version&&options.cidr!=="optional"){regex=Ip.createIpRegex(["ipv4","ipv6","ipvfuture"],options.cidr)}}else{options.cidr="optional"}let versions;if(options.version){if(!Array.isArray(options.version)){options.version=[options.version]}Assert(options.version.length>=1,"version must have at least 1 version specified");versions=[];for(let i=0;i<options.version.length;++i){let version=options.version[i];Assert(typeof version==="string","version at position "+i+" must be a string");version=version.toLowerCase();Assert(Ip.versions[version],"version at position "+i+" must be one of "+Object.keys(Ip.versions).join(", "));versions.push(version)}versions=Array.from(new Set(versions));regex=Ip.createIpRegex(versions,options.cidr)}return this.$_addRule({name:"ip",args:{options:options},versions:versions,regex:regex})},validate(value,helpers,{options},{versions,regex}){if(regex.test(value)){return value}if(versions){return helpers.error("string.ipVersion",{value:value,cidr:options.cidr,version:versions})}return helpers.error("string.ip",{value:value,cidr:options.cidr})}},isoDate:{method(){return this.$_addRule("isoDate")},validate(value,{error}){if(internals.isoDate(value)){return value}return error("string.isoDate")}},isoDuration:{method(){return this.$_addRule("isoDuration")},validate(value,helpers){if(internals.isoDurationRegex.test(value)){return value}return helpers.error("string.isoDuration")}},length:{method(limit,encoding){return internals.length(this,"length",limit,"=",encoding)},validate(value,helpers,{limit,encoding},{name,operator,args}){const length=encoding?Buffer&&Buffer.byteLength(value,encoding):value.length;if(Common.compare(length,limit,operator)){return value}return helpers.error("string."+name,{limit:args.limit,value:value,encoding:encoding})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"},"encoding"]},lowercase:{method(){return this.case("lower")}},max:{method(limit,encoding){return internals.length(this,"max",limit,"<=",encoding)},args:["limit","encoding"]},min:{method(limit,encoding){return internals.length(this,"min",limit,">=",encoding)},args:["limit","encoding"]},normalize:{method(form="NFC"){Assert(internals.normalizationForms.includes(form),"normalization form must be one of "+internals.normalizationForms.join(", "));return this.$_addRule({name:"normalize",args:{form:form}})},validate(value,{error},{form}){if(value===value.normalize(form)){return value}return error("string.normalize",{value:value,form:form})},convert:true},pattern:{alias:"regex",method(regex,options={}){Assert(regex instanceof RegExp,"regex must be a RegExp");Assert(!regex.flags.includes("g")&&!regex.flags.includes("y"),"regex should not use global or sticky mode");if(typeof options==="string"){options={name:options}}Common.assertOptions(options,["invert","name"]);const errorCode=["string.pattern",options.invert?".invert":"",options.name?".name":".base"].join("");return this.$_addRule({name:"pattern",args:{regex:regex,options:options},errorCode:errorCode})},validate(value,helpers,{regex,options},{errorCode}){const patternMatch=regex.test(value);if(patternMatch^options.invert){return value}return helpers.error(errorCode,{name:options.name,regex:regex,value:value})},args:["regex","options"],multi:true},replace:{method(pattern,replacement){if(typeof pattern==="string"){pattern=new RegExp(EscapeRegex(pattern),"g")}Assert(pattern instanceof RegExp,"pattern must be a RegExp");Assert(typeof replacement==="string","replacement must be a String");const obj=this.clone();if(!obj.$_terms.replacements){obj.$_terms.replacements=[]}obj.$_terms.replacements.push({pattern:pattern,replacement:replacement});return obj}},token:{method(){return this.$_addRule("token")},validate(value,helpers){if(/^\w+$/.test(value)){return value}return helpers.error("string.token")}},trim:{method(enabled=true){Assert(typeof enabled==="boolean","enabled must be a boolean");return this.$_addRule({name:"trim",args:{enabled:enabled}})},validate(value,helpers,{enabled}){if(!enabled||value===value.trim()){return value}return helpers.error("string.trim")},convert:true},truncate:{method(enabled=true){Assert(typeof enabled==="boolean","enabled must be a boolean");return this.$_setFlag("truncate",enabled)}},uppercase:{method(){return this.case("upper")}},uri:{method(options={}){Common.assertOptions(options,["allowRelative","allowQuerySquareBrackets","domain","relativeOnly","scheme"]);if(options.domain){Common.assertOptions(options.domain,["allowUnicode","minDomainSegments","tlds"])}const regex=Uri.createRegex(options);const domain=options.domain?internals.addressOptions(options.domain):null;return this.$_addRule({name:"uri",args:{options:options},regex:regex,domain:domain})},validate(value,helpers,{options},{regex,domain}){if(["http:/","https:/"].includes(value)){return helpers.error("string.uri")}const match=regex.exec(value);if(match){if(domain&&!Domain.isValid(match[1],domain)){return helpers.error("string.domain",{value:match[1]})}return value}if(options.relativeOnly){return helpers.error("string.uriRelativeOnly")}if(options.scheme){return helpers.error("string.uriCustomScheme",{scheme:regex.scheme,value:value})}return helpers.error("string.uri")}}},manifest:{build(obj,desc){if(desc.replacements){for(const{pattern,replacement}of desc.replacements){obj=obj.replace(pattern,replacement)}}return obj}},messages:{"string.alphanum":'"{{#label}}" must only contain alpha-numeric characters',"string.base":'"{{#label}}" must be a string',"string.base64":'"{{#label}}" must be a valid base64 string',"string.creditCard":'"{{#label}}" must be a credit card',"string.dataUri":'"{{#label}}" must be a valid dataUri string',"string.domain":'"{{#label}}" must contain a valid domain name',"string.email":'"{{#label}}" must be a valid email',"string.empty":'"{{#label}}" is not allowed to be empty',"string.guid":'"{{#label}}" must be a valid GUID',"string.hex":'"{{#label}}" must only contain hexadecimal characters',"string.hexAlign":'"{{#label}}" hex decoded representation must be byte aligned',"string.hostname":'"{{#label}}" must be a valid hostname',"string.ip":'"{{#label}}" must be a valid ip address with a {{#cidr}} CIDR',"string.ipVersion":'"{{#label}}" must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR',"string.isoDate":'"{{#label}}" must be in iso format',"string.isoDuration":'"{{#label}}" must be a valid ISO 8601 duration',"string.length":'"{{#label}}" length must be {{#limit}} characters long',"string.lowercase":'"{{#label}}" must only contain lowercase characters',"string.max":'"{{#label}}" length must be less than or equal to {{#limit}} characters long',"string.min":'"{{#label}}" length must be at least {{#limit}} characters long',"string.normalize":'"{{#label}}" must be unicode normalized in the {{#form}} form',"string.token":'"{{#label}}" must only contain alpha-numeric and underscore characters',"string.pattern.base":'"{{#label}}" with value "{[.]}" fails to match the required pattern: {{#regex}}',"string.pattern.name":'"{{#label}}" with value "{[.]}" fails to match the {{#name}} pattern',"string.pattern.invert.base":'"{{#label}}" with value "{[.]}" matches the inverted pattern: {{#regex}}',"string.pattern.invert.name":'"{{#label}}" with value "{[.]}" matches the inverted {{#name}} pattern',"string.trim":'"{{#label}}" must not have leading or trailing whitespace',"string.uri":'"{{#label}}" must be a valid uri',"string.uriCustomScheme":'"{{#label}}" must be a valid uri with a scheme matching the {{#scheme}} pattern',"string.uriRelativeOnly":'"{{#label}}" must be a valid relative uri',"string.uppercase":'"{{#label}}" must only contain uppercase characters'}});internals.addressOptions=function(options){if(!options){return options}Assert(options.minDomainSegments===undefined||Number.isSafeInteger(options.minDomainSegments)&&options.minDomainSegments>0,"minDomainSegments must be a positive integer");if(options.tlds===false){return options}if(options.tlds===true||options.tlds===undefined){Assert(internals.tlds,"Built-in TLD list disabled");return Object.assign({},options,internals.tlds)}Assert(typeof options.tlds==="object","tlds must be true, false, or an object");const deny=options.tlds.deny;if(deny){if(Array.isArray(deny)){options=Object.assign({},options,{tlds:{deny:new Set(deny)}})}Assert(options.tlds.deny instanceof Set,"tlds.deny must be an array, Set, or boolean");Assert(!options.tlds.allow,"Cannot specify both tlds.allow and tlds.deny lists");return options}const allow=options.tlds.allow;if(!allow){return options}if(allow===true){Assert(internals.tlds,"Built-in TLD list disabled");return Object.assign({},options,internals.tlds)}if(Array.isArray(allow)){options=Object.assign({},options,{tlds:{allow:new Set(allow)}})}Assert(options.tlds.allow instanceof Set,"tlds.allow must be an array, Set, or boolean");return options};internals.isoDate=function(value){if(!Common.isIsoDate(value)){return null}const date=new Date(value);if(isNaN(date.getTime())){return null}return date.toISOString()};internals.length=function(schema,name,limit,operator,encoding){Assert(!encoding||Buffer&&Buffer.isEncoding(encoding),"Invalid encoding:",encoding);return schema.$_addRule({name:name,method:"length",args:{limit:limit,encoding:encoding},operator:operator})}},{"../../common":25,"../any":39,"./ip":50,"./uri":51,"@hapi/address/lib/domain":4,"@hapi/address/lib/email":5,"@hapi/address/lib/tlds":7,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125}],50:[function(require,module,exports){"use strict";const Uri=require("./uri");const internals={};exports.cidrs={ipv4:{required:"\\/(?:"+Uri.ipv4Cidr+")",optional:"(?:\\/(?:"+Uri.ipv4Cidr+"))?",forbidden:""},ipv6:{required:"\\/"+Uri.ipv6Cidr,optional:"(?:\\/"+Uri.ipv6Cidr+")?",forbidden:""},ipvfuture:{required:"\\/"+Uri.ipv6Cidr,optional:"(?:\\/"+Uri.ipv6Cidr+")?",forbidden:""}};exports.versions={ipv4:Uri.ipv4address,ipv6:Uri.ipv6address,ipvfuture:Uri.ipvFuture};exports.createIpRegex=function(versions,cidr){const parts=versions.map(version=>exports.versions[version]+exports.cidrs[version][cidr]);return new RegExp("^(?:"+parts.join("|")+")$")}},{"./uri":51}],51:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const EscapeRegex=require("@hapi/hoek/lib/escapeRegex");const internals={};internals.generate=function(){const rfc3986={};const hexDigit="\\dA-Fa-f";const hexDigitOnly="["+hexDigit+"]";const unreserved="\\w-\\.~";const subDelims="!\\$&'\\(\\)\\*\\+,;=";const pctEncoded="%"+hexDigit;const pchar=unreserved+pctEncoded+subDelims+":@";const pcharOnly="["+pchar+"]";const decOctect="(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])";rfc3986.ipv4address="(?:"+decOctect+"\\.){3}"+decOctect;const h16=hexDigitOnly+"{1,4}";const ls32="(?:"+h16+":"+h16+"|"+rfc3986.ipv4address+")";const IPv6SixHex="(?:"+h16+":){6}"+ls32;const IPv6FiveHex="::(?:"+h16+":){5}"+ls32;const IPv6FourHex="(?:"+h16+")?::(?:"+h16+":){4}"+ls32;const IPv6ThreeHex="(?:(?:"+h16+":){0,1}"+h16+")?::(?:"+h16+":){3}"+ls32;const IPv6TwoHex="(?:(?:"+h16+":){0,2}"+h16+")?::(?:"+h16+":){2}"+ls32;const IPv6OneHex="(?:(?:"+h16+":){0,3}"+h16+")?::"+h16+":"+ls32;const IPv6NoneHex="(?:(?:"+h16+":){0,4}"+h16+")?::"+ls32;const IPv6NoneHex2="(?:(?:"+h16+":){0,5}"+h16+")?::"+h16;const IPv6NoneHex3="(?:(?:"+h16+":){0,6}"+h16+")?::";rfc3986.ipv4Cidr="\\d|[1-2]\\d|3[0-2]";rfc3986.ipv6Cidr="(?:0{0,2}\\d|0?[1-9]\\d|1[01]\\d|12[0-8])";rfc3986.ipv6address="(?:"+IPv6SixHex+"|"+IPv6FiveHex+"|"+IPv6FourHex+"|"+IPv6ThreeHex+"|"+IPv6TwoHex+"|"+IPv6OneHex+"|"+IPv6NoneHex+"|"+IPv6NoneHex2+"|"+IPv6NoneHex3+")";rfc3986.ipvFuture="v"+hexDigitOnly+"+\\.["+unreserved+subDelims+":]+";rfc3986.scheme="[a-zA-Z][a-zA-Z\\d+-\\.]*";rfc3986.schemeRegex=new RegExp(rfc3986.scheme);const userinfo="["+unreserved+pctEncoded+subDelims+":]*";const IPLiteral="\\[(?:"+rfc3986.ipv6address+"|"+rfc3986.ipvFuture+")\\]";const regName="["+unreserved+pctEncoded+subDelims+"]{1,255}";const host="(?:"+IPLiteral+"|"+rfc3986.ipv4address+"|"+regName+")";const port="\\d*";const authority="(?:"+userinfo+"@)?"+host+"(?::"+port+")?";const authorityCapture="(?:"+userinfo+"@)?("+host+")(?::"+port+")?";const segment=pcharOnly+"*";const segmentNz=pcharOnly+"+";const segmentNzNc="["+unreserved+pctEncoded+subDelims+"@"+"]+";const pathEmpty="";const pathAbEmpty="(?:\\/"+segment+")*";const pathAbsolute="\\/(?:"+segmentNz+pathAbEmpty+")?";const pathRootless=segmentNz+pathAbEmpty;const pathNoScheme=segmentNzNc+pathAbEmpty;const pathAbNoAuthority="(?:\\/\\/\\/"+segment+pathAbEmpty+")";rfc3986.hierPart="(?:"+"(?:\\/\\/"+authority+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathRootless+"|"+pathAbNoAuthority+")";rfc3986.hierPartCapture="(?:"+"(?:\\/\\/"+authorityCapture+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathRootless+")";rfc3986.relativeRef="(?:"+"(?:\\/\\/"+authority+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathNoScheme+"|"+pathEmpty+")";rfc3986.query="["+pchar+"\\/\\?]*(?=#|$)";rfc3986.queryWithSquareBrackets="["+pchar+"\\[\\]\\/\\?]*(?=#|$)";rfc3986.fragment="["+pchar+"\\/\\?]*";return rfc3986};module.exports=exports=internals.rfc3986=internals.generate();internals.createRegex=function(options){const rfc=internals.rfc3986;const query=options.allowQuerySquareBrackets?rfc.queryWithSquareBrackets:rfc.query;const suffix="(?:\\?"+query+")?"+"(?:#"+rfc.fragment+")?$";if(options.relativeOnly){return new RegExp("^"+rfc.relativeRef+suffix)}let customScheme="";if(options.scheme){Assert(options.scheme instanceof RegExp||typeof options.scheme==="string"||Array.isArray(options.scheme),"scheme must be a RegExp, String, or Array");const schemes=[].concat(options.scheme);Assert(schemes.length>=1,"scheme must have at least 1 scheme specified");const selections=[];for(let i=0;i<schemes.length;++i){const scheme=schemes[i];Assert(scheme instanceof RegExp||typeof scheme==="string","scheme at position "+i+" must be a RegExp or String");if(scheme instanceof RegExp){selections.push(scheme.source.toString())}else{Assert(rfc.schemeRegex.test(scheme),"scheme at position "+i+" must be a valid scheme");selections.push(EscapeRegex(scheme))}}customScheme=selections.join("|")}const scheme=customScheme?"(?:"+customScheme+")":rfc.scheme;const absolute="(?:"+scheme+":"+(options.domain?rfc.hierPartCapture:rfc.hierPart)+")";const prefix=options.allowRelative?"(?:"+absolute+"|"+rfc.relativeRef+")":absolute;const regex=new RegExp("^"+prefix+suffix);regex.scheme=customScheme;return regex};internals.uriRegex=internals.createRegex({});exports.createRegex=function(options={}){if(options.scheme||options.allowRelative||options.relativeOnly||options.allowQuerySquareBrackets||options.domain){return internals.createRegex(options)}return internals.uriRegex}},{"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125}],52:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Any=require("./any");const internals={};internals.Map=class extends Map{slice(){return new internals.Map(this)}};module.exports=Any.extend({type:"symbol",terms:{map:{init:new internals.Map}},coerce:{method(value,{schema,error}){const lookup=schema.$_terms.map.get(value);if(lookup){value=lookup}if(!schema._flags.only||typeof value==="symbol"){return{value:value}}return{value:value,errors:error("symbol.map",{map:schema.$_terms.map})}}},validate(value,{error}){if(typeof value!=="symbol"){return{value:value,errors:error("symbol.base")}}},rules:{map:{method(iterable){if(iterable&&!iterable[Symbol.iterator]&&typeof iterable==="object"){iterable=Object.entries(iterable)}Assert(iterable&&iterable[Symbol.iterator],"Iterable must be an iterable or object");const obj=this.clone();const symbols=[];for(const entry of iterable){Assert(entry&&entry[Symbol.iterator],"Entry must be an iterable");const[key,value]=entry;Assert(typeof key!=="object"&&typeof key!=="function"&&typeof key!=="symbol","Key must not be of type object, function, or Symbol");Assert(typeof value==="symbol","Value must be a Symbol");obj.$_terms.map.set(key,value);symbols.push(value)}return obj.valid(...symbols)}}},manifest:{build(obj,desc){if(desc.map){obj=obj.map(desc.map)}return obj}},messages:{"symbol.base":'"{{#label}}" must be a symbol',"symbol.map":'"{{#label}}" must be one of {{#map}}'}})},{"./any":39,"@hapi/hoek/lib/assert":115}],53:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const Clone=require("@hapi/hoek/lib/clone");const Ignore=require("@hapi/hoek/lib/ignore");const Reach=require("@hapi/hoek/lib/reach");const Common=require("./common");const Errors=require("./errors");const State=require("./state");const internals={result:Symbol("result")};exports.entry=function(value,schema,prefs){let settings=Common.defaults;if(prefs){Assert(prefs.warnings===undefined,"Cannot override warnings preference in synchronous validation");settings=Common.preferences(Common.defaults,prefs)}const result=internals.entry(value,schema,settings);Assert(!result.mainstay.externals.length,"Schema with external rules must use validateAsync()");const outcome={value:result.value};if(result.error){outcome.error=result.error}if(result.mainstay.warnings.length){outcome.warning=Errors.details(result.mainstay.warnings)}if(result.mainstay.debug){outcome.debug=result.mainstay.debug}return outcome};exports.entryAsync=async function(value,schema,prefs){let settings=Common.defaults;if(prefs){settings=Common.preferences(Common.defaults,prefs)}const result=internals.entry(value,schema,settings);const mainstay=result.mainstay;if(result.error){if(mainstay.debug){result.error.debug=mainstay.debug}throw result.error}if(mainstay.externals.length){let root=result.value;for(const{method,path,label}of mainstay.externals){let node=root;let key;let parent;if(path.length){key=path[path.length-1];parent=Reach(root,path.slice(0,-1));node=parent[key]}try{const output=await method(node);if(output===undefined||output===node){continue}if(parent){parent[key]=output}else{root=output}}catch(err){err.message+=` (${label})`;throw err}}result.value=root}if(!settings.warnings&&!settings.debug){return result.value}const outcome={value:result.value};if(mainstay.warnings.length){outcome.warning=Errors.details(mainstay.warnings)}if(mainstay.debug){outcome.debug=mainstay.debug}return outcome};internals.entry=function(value,schema,prefs){const{tracer,cleanup}=internals.tracer(schema,prefs);const debug=prefs.debug?[]:null;const links=schema._ids._schemaChain?new Map:null;const mainstay={externals:[],warnings:[],tracer:tracer,debug:debug,links:links};const schemas=schema._ids._schemaChain?[{schema:schema}]:null;const state=new State([],[],{mainstay:mainstay,schemas:schemas});const result=exports.validate(value,schema,state,prefs);if(cleanup){schema.$_root.untrace()}const error=Errors.process(result.errors,value,prefs);return{value:result.value,error:error,mainstay:mainstay}};internals.tracer=function(schema,prefs){if(schema.$_root._tracer){return{tracer:schema.$_root._tracer._register(schema)}}if(prefs.debug){Assert(schema.$_root.trace,"Debug mode not supported");return{tracer:schema.$_root.trace()._register(schema),cleanup:true}}return{tracer:internals.ignore}};exports.validate=function(value,schema,state,prefs,overrides={}){if(schema.$_terms.whens){schema=schema._generate(value,state,prefs).schema}if(schema._preferences){prefs=internals.prefs(schema,prefs)}if(schema._cache&&prefs.cache){const result=schema._cache.get(value);state.mainstay.tracer.debug(state,"validate","cached",!!result);if(result){return result}}const createError=(code,local,localState)=>schema.$_createError(code,value,local,localState||state,prefs);const helpers={original:value,prefs:prefs,schema:schema,state:state,error:createError,warn:(code,local,localState)=>state.mainstay.warnings.push(createError(code,local,localState)),message:(messages,local)=>schema.$_createError("custom",value,local,state,prefs,{messages:messages})};state.mainstay.tracer.entry(schema,state);const def=schema._definition;if(def.prepare&&value!==undefined&&prefs.convert){const prepared=def.prepare(value,helpers);if(prepared){state.mainstay.tracer.value(state,"prepare",value,prepared.value);if(prepared.errors){return internals.finalize(prepared.value,[].concat(prepared.errors),helpers)}value=prepared.value}}if(def.coerce&&value!==undefined&&prefs.convert&&(!def.coerce.from||def.coerce.from.includes(typeof value))){const coerced=def.coerce.method(value,helpers);if(coerced){state.mainstay.tracer.value(state,"coerced",value,coerced.value);if(coerced.errors){return internals.finalize(coerced.value,[].concat(coerced.errors),helpers)}value=coerced.value}}const empty=schema._flags.empty;if(empty&&empty.$_match(internals.trim(value,schema),state.nest(empty),Common.defaults)){state.mainstay.tracer.value(state,"empty",value,undefined);value=undefined}const presence=overrides.presence||schema._flags.presence||(schema._flags._endedSwitch?"ignore":prefs.presence);if(value===undefined){if(presence==="forbidden"){return internals.finalize(value,null,helpers)}if(presence==="required"){return internals.finalize(value,[schema.$_createError("any.required",value,null,state,prefs)],helpers)}if(presence==="optional"){if(schema._flags.default!==Common.symbols.deepDefault){return internals.finalize(value,null,helpers)}state.mainstay.tracer.value(state,"default",value,{});value={}}}else if(presence==="forbidden"){return internals.finalize(value,[schema.$_createError("any.unknown",value,null,state,prefs)],helpers)}const errors=[];if(schema._valids){const match=schema._valids.get(value,state,prefs,schema._flags.insensitive);if(match){if(prefs.convert){state.mainstay.tracer.value(state,"valids",value,match.value);value=match.value}state.mainstay.tracer.filter(schema,state,"valid",match);return internals.finalize(value,null,helpers)}if(schema._flags.only){const report=schema.$_createError("any.only",value,{valids:schema._valids.values({display:true})},state,prefs);if(prefs.abortEarly){return internals.finalize(value,[report],helpers)}errors.push(report)}}if(schema._invalids){const match=schema._invalids.get(value,state,prefs,schema._flags.insensitive);if(match){state.mainstay.tracer.filter(schema,state,"invalid",match);const report=schema.$_createError("any.invalid",value,{invalids:schema._invalids.values({display:true})},state,prefs);if(prefs.abortEarly){return internals.finalize(value,[report],helpers)}errors.push(report)}}if(def.validate){const base=def.validate(value,helpers);if(base){state.mainstay.tracer.value(state,"base",value,base.value);value=base.value;if(base.errors){if(!Array.isArray(base.errors)){errors.push(base.errors);return internals.finalize(value,errors,helpers)}if(base.errors.length){errors.push(...base.errors);return internals.finalize(value,errors,helpers)}}}}if(!schema._rules.length){return internals.finalize(value,errors,helpers)}return internals.rules(value,errors,helpers)};internals.rules=function(value,errors,helpers){const{schema,state,prefs}=helpers;for(const rule of schema._rules){const definition=schema._definition.rules[rule.method];if(definition.convert&&prefs.convert){state.mainstay.tracer.log(schema,state,"rule",rule.name,"full");continue}let ret;let args=rule.args;if(rule._resolve.length){args=Object.assign({},args);for(const key of rule._resolve){const resolver=definition.argsByName.get(key);const resolved=args[key].resolve(value,state,prefs);const normalized=resolver.normalize?resolver.normalize(resolved):resolved;const invalid=Common.validateArg(normalized,null,resolver);if(invalid){ret=schema.$_createError("any.ref",resolved,{arg:key,ref:args[key],reason:invalid},state,prefs);break}args[key]=normalized}}ret=ret||definition.validate(value,helpers,args,rule);const result=internals.rule(ret,rule);if(result.errors){state.mainstay.tracer.log(schema,state,"rule",rule.name,"error");if(rule.warn){state.mainstay.warnings.push(...result.errors);continue}if(prefs.abortEarly){return internals.finalize(value,result.errors,helpers)}errors.push(...result.errors)}else{state.mainstay.tracer.log(schema,state,"rule",rule.name,"pass");state.mainstay.tracer.value(state,"rule",value,result.value,rule.name);value=result.value}}return internals.finalize(value,errors,helpers)};internals.rule=function(ret,rule){if(ret instanceof Errors.Report){internals.error(ret,rule);return{errors:[ret],value:null}}if(Array.isArray(ret)&&(ret[0]instanceof Errors.Report||ret[0]instanceof Error)){ret.forEach(report=>internals.error(report,rule));return{errors:ret,value:null}}return{errors:null,value:ret}};internals.error=function(report,rule){if(rule.message){report._setTemplate(rule.message)}return report};internals.finalize=function(value,errors,helpers){errors=errors||[];const{schema,state,prefs}=helpers;if(errors.length){const failover=internals.default("failover",undefined,errors,helpers);if(failover!==undefined){state.mainstay.tracer.value(state,"failover",value,failover);value=failover;errors=[]}}if(errors.length&&schema._flags.error){if(typeof schema._flags.error==="function"){errors=schema._flags.error(errors);if(!Array.isArray(errors)){errors=[errors]}for(const error of errors){Assert(error instanceof Error||error instanceof Errors.Report,"error() must return an Error object")}}else{errors=[schema._flags.error]}}if(value===undefined){const defaulted=internals.default("default",value,errors,helpers);state.mainstay.tracer.value(state,"default",value,defaulted);value=defaulted}if(schema._flags.cast&&value!==undefined){const caster=schema._definition.cast[schema._flags.cast];if(caster.from(value)){const casted=caster.to(value,helpers);state.mainstay.tracer.value(state,"cast",value,casted,schema._flags.cast);value=casted}}if(schema.$_terms.externals&&prefs.externals&&prefs._externals!==false){for(const{method}of schema.$_terms.externals){state.mainstay.externals.push({method:method,path:state.path,label:Errors.label(schema._flags,state,prefs)})}}const result={value:value,errors:errors.length?errors:null};if(schema._flags.result){result.value=schema._flags.result==="strip"?undefined:helpers.original;state.mainstay.tracer.value(state,schema._flags.result,value,result.value);state.shadow(value,schema._flags.result)}if(schema._cache&&prefs.cache!==false&&!schema._refs.length){schema._cache.set(helpers.original,result)}return result};internals.prefs=function(schema,prefs){const isDefaultOptions=prefs===Common.defaults;if(isDefaultOptions&&schema._preferences[Common.symbols.prefs]){return schema._preferences[Common.symbols.prefs]}prefs=Common.preferences(prefs,schema._preferences);if(isDefaultOptions){schema._preferences[Common.symbols.prefs]=prefs}return prefs};internals.default=function(flag,value,errors,{schema,state,prefs}){const source=schema._flags[flag];if(prefs.noDefaults||source===undefined){return value}state.mainstay.tracer.log(schema,state,"rule",flag,"full");if(!source){return source}if(typeof source==="function"){const args=source.length>0?[Clone(state.ancestors[0]),prefs]:[];try{return source(...args)}catch(err){errors.push(schema.$_createError(`any.${flag}`,null,{error:err},state,prefs));return}}if(typeof source!=="object"){return source}if(source[Common.symbols.literal]){return source.literal}if(Common.isResolvable(source)){return source.resolve(value,state,prefs)}return Clone(source)};internals.trim=function(value,schema){if(typeof value!=="string"){return value}const trim=schema.$_getRule("trim");if(!trim||!trim.args.enabled){return value}return value.trim()};internals.ignore={active:false,debug:Ignore,entry:Ignore,filter:Ignore,log:Ignore,resolve:Ignore,value:Ignore}},{"./common":25,"./errors":27,"./state":35,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/ignore":127,"@hapi/hoek/lib/reach":133}],54:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const DeepEqual=require("@hapi/hoek/lib/deepEqual");const Common=require("./common");const internals={};module.exports=internals.Values=class{constructor(values,refs){this._values=new Set(values);this._refs=new Set(refs);this._lowercase=internals.lowercases(values);this._override=false}get length(){return this._values.size+this._refs.size}add(value,refs){if(Common.isResolvable(value)){if(!this._refs.has(value)){this._refs.add(value);if(refs){refs.register(value)}}return}if(!this.has(value,null,null,false)){this._values.add(value);if(typeof value==="string"){this._lowercase.set(value.toLowerCase(),value)}}}static merge(target,source,remove){target=target||new internals.Values;if(source){if(source._override){return source.clone()}for(const item of[...source._values,...source._refs]){target.add(item)}}if(remove){for(const item of[...remove._values,...remove._refs]){target.remove(item)}}return target.length?target:null}remove(value){if(Common.isResolvable(value)){this._refs.delete(value);return}this._values.delete(value);if(typeof value==="string"){this._lowercase.delete(value.toLowerCase())}}has(value,state,prefs,insensitive){return!!this.get(value,state,prefs,insensitive)}get(value,state,prefs,insensitive){if(!this.length){return false}if(this._values.has(value)){return{value:value}}if(typeof value==="string"&&value&&insensitive){const found=this._lowercase.get(value.toLowerCase());if(found){return{value:found}}}if(!this._refs.size&&typeof value!=="object"){return false}if(typeof value==="object"){for(const item of this._values){if(DeepEqual(item,value)){return{value:item}}}}if(state){for(const ref of this._refs){const resolved=ref.resolve(value,state,prefs,null,{in:true});if(resolved===undefined){continue}const items=!ref.in||typeof resolved!=="object"?[resolved]:Array.isArray(resolved)?resolved:Object.keys(resolved);for(const item of items){if(typeof item!==typeof value){continue}if(insensitive&&value&&typeof value==="string"){if(item.toLowerCase()===value.toLowerCase()){return{value:item,ref:ref}}}else{if(DeepEqual(item,value)){return{value:item,ref:ref}}}}}}return false}override(){this._override=true}values(options){if(options&&options.display){const values=[];for(const item of[...this._values,...this._refs]){if(item!==undefined){values.push(item)}}return values}return Array.from([...this._values,...this._refs])}clone(){const set=new internals.Values(this._values,this._refs);set._override=this._override;return set}concat(source){Assert(!source._override,"Cannot concat override set of values");const set=new internals.Values([...this._values,...source._values],[...this._refs,...source._refs]);set._override=this._override;return set}describe(){const normalized=[];if(this._override){normalized.push({override:true})}for(const value of this._values.values()){normalized.push(value&&typeof value==="object"?{value:value}:value)}for(const value of this._refs.values()){normalized.push(value.describe())}return normalized}};internals.Values.prototype[Common.symbols.values]=true;internals.Values.prototype.slice=internals.Values.prototype.clone;internals.lowercases=function(from){const map=new Map;if(from){for(const value of from){if(typeof value==="string"){map.set(value.toLowerCase(),value)}}}return map}},{"./common":25,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120}],55:[function(require,module,exports){module.exports={_from:"@hapi/joi@16.x.x",_id:"@hapi/joi@16.1.8",_inBundle:false,_integrity:"sha512-wAsVvTPe+FwSrsAurNt5vkg3zo+TblvC5Bb1zMVK6SJzZqw9UrJnexxR+76cpePmtUZKHAPxcQ2Bf7oVHyahhg==",_location:"/@hapi/catbox/@hapi/joi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/joi@16.x.x",name:"@hapi/joi",escapedName:"@hapi%2fjoi",scope:"@hapi",rawSpec:"16.x.x",saveSpec:null,fetchSpec:"16.x.x"},_requiredBy:["/@hapi/catbox"],_resolved:"https://registry.npmjs.org/@hapi/joi/-/joi-16.1.8.tgz",_shasum:"84c1f126269489871ad4e2decc786e0adef06839",_spec:"@hapi/joi@16.x.x",_where:"/home/osama/Desktop/Dev/hapi-server/node_modules/@hapi/catbox",browser:"dist/joi-browser.min.js",bugs:{url:"https://github.com/hapijs/joi/issues"},bundleDependencies:false,dependencies:{"@hapi/address":"^2.1.2","@hapi/formula":"^1.2.0","@hapi/hoek":"^8.2.4","@hapi/pinpoint":"^1.0.2","@hapi/topo":"^3.1.3"},deprecated:"Switch to 'npm install joi'",description:"Object schema validation",devDependencies:{"@hapi/bourne":"1.x.x","@hapi/code":"6.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"20.x.x"},files:["lib/**/*","dist/*"],homepage:"https://github.com/hapijs/joi#readme",keywords:["schema","validation"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/joi",repository:{type:"git",url:"git://github.com/hapijs/joi.git"},scripts:{prepublishOnly:"cd browser && npm install && npm run build",test:"lab -t 100 -a @hapi/code -L","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},version:"16.1.8"}},{}],56:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const internals={};internals.contentTypeRegex=/^([^\/\s]+\/[^\s;]+)(.*)?$/;internals.paramsRegex=/;\s*boundary=(?:"([^"]+)"|([^;"\s]+))/i;exports.type=function(header){if(!header){throw Boom.badRequest("Invalid content-type header")}const match=header.match(internals.contentTypeRegex);if(!match){throw Boom.badRequest("Invalid content-type header")}const result={mime:match[1].toLowerCase()};if(result.mime.indexOf("multipart/")===0){const params=match[2];if(params){const param=params.match(internals.paramsRegex);if(param){result.boundary=param[1]||param[2]}}if(!result.boundary){throw Boom.badRequest("Invalid content-type header: multipart missing boundary")}}return result};internals.contentDispositionRegex=/^\s*form-data\s*(?:;\s*(.+))?$/i;internals.contentDispositionParamRegex=/([^\=\*\s]+)(\*)?\s*\=\s*(?:([^;'"\s]+\'[\w-]*\'[^;\s]+)|(?:\"([^"]*)\")|([^;\s]*))(?:\s*(?:;\s*)|$)/g;exports.disposition=function(header){if(!header){throw Boom.badRequest("Missing content-disposition header")}const match=header.match(internals.contentDispositionRegex);if(!match){throw Boom.badRequest("Invalid content-disposition header format")}const parameters=match[1];if(!parameters){throw Boom.badRequest("Invalid content-disposition header missing parameters")}const result={};parameters.replace(internals.contentDispositionParamRegex,($0,$1,$2,$3,$4,$5)=>{if($1==="__proto__"){throw Boom.badRequest("Invalid content-disposition header format includes invalid parameters")}let value;if($2){if(!$3){throw Boom.badRequest("Invalid content-disposition header format includes invalid parameters")}try{value=decodeURIComponent($3.split("'")[2])}catch(err){throw Boom.badRequest("Invalid content-disposition header format includes invalid parameters")}}else{value=$4||$5||""}if($1==="name"&&value==="__proto__"){throw Boom.badRequest("Invalid content-disposition header format includes invalid parameters")}result[$1]=value});if(!result.name){throw Boom.badRequest("Invalid content-disposition header missing name parameter")}return result}},{"@hapi/boom":12}],57:[function(require,module,exports){"use strict";const Crypto=require("crypto");const Boom=require("@hapi/boom");const internals={};exports.randomString=function(size){const buffer=exports.randomBits((size+1)*6);const string=buffer.toString("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"");return string.slice(0,size)};exports.randomDigits=function(size){const digits=[];let buffer=internals.random(size*2);let pos=0;while(digits.length<size){if(pos>=buffer.length){buffer=internals.random(size*2);pos=0}if(buffer[pos]<250){digits.push(buffer[pos]%10)}++pos}return digits.join("")};exports.randomBits=function(bits){if(!bits||bits<0){throw Boom.internal("Invalid random bits count")}const bytes=Math.ceil(bits/8);return internals.random(bytes)};exports.fixedTimeComparison=function(a,b){try{return Crypto.timingSafeEqual(Buffer.from(a),Buffer.from(b))}catch(err){return false}};internals.random=function(bytes){try{return Crypto.randomBytes(bytes)}catch(err){throw Boom.internal("Failed generating random bits: "+err.message)}}},{"@hapi/boom":12,crypto:undefined}],58:[function(require,module,exports){"use strict";const Crypto=require("crypto");const Path=require("path");const internals={};exports.uniqueFilename=function(path,extension){if(extension){extension=extension[0]!=="."?"."+extension:extension}else{extension=""}path=Path.resolve(path);const name=[Date.now(),process.pid,Crypto.randomBytes(8).toString("hex")].join("-")+extension;return Path.join(path,name)}},{crypto:undefined,path:undefined}],59:[function(require,module,exports){"use strict";const internals={operators:["!","^","*","/","%","+","-","<","<=",">",">=","==","!=","&&","||","??"],operatorCharacters:["!","^","*","/","%","+","-","<","=",">","&","|","?"],operatorsOrder:[["^"],["*","/","%"],["+","-"],["<","<=",">",">="],["==","!="],["&&"],["||","??"]],operatorsPrefix:["!","n"],literals:{'"':'"',"`":"`","'":"'","[":"]"},numberRx:/^(?:[0-9]*\.?[0-9]*){1}$/,tokenRx:/^[\w\$\#\.\@\:\{\}]+$/,symbol:Symbol("formula"),settings:Symbol("settings")};exports=module.exports=internals.Formula=class{constructor(string,options={}){if(!options[internals.settings]&&options.constants){for(const constant in options.constants){const value=options.constants[constant];if(value!==null&&!["boolean","number","string"].includes(typeof value)){throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`)}}}this.settings=options[internals.settings]?options:Object.assign({[internals.settings]:true,constants:{},functions:{}},options);this.single=null;this._parts=null;this._parse(string)}_parse(string){let parts=[];let current="";let parenthesis=0;let literal=false;const flush=inner=>{if(parenthesis){throw new Error("Formula missing closing parenthesis")}const last=parts.length?parts[parts.length-1]:null;if(!literal&&!current&&!inner){return}if(last&&last.type==="reference"&&inner===")"){last.type="function";last.value=this._subFormula(current,last.value);current="";return}if(inner===")"){const sub=new internals.Formula(current,this.settings);parts.push({type:"segment",value:sub})}else if(literal){if(literal==="]"){parts.push({type:"reference",value:current});current="";return}parts.push({type:"literal",value:current})}else if(internals.operatorCharacters.includes(current)){if(last&&last.type==="operator"&&internals.operators.includes(last.value+current)){last.value+=current}else{parts.push({type:"operator",value:current})}}else if(current.match(internals.numberRx)){parts.push({type:"constant",value:parseFloat(current)})}else if(this.settings.constants[current]!==undefined){parts.push({type:"constant",value:this.settings.constants[current]})}else{if(!current.match(internals.tokenRx)){throw new Error(`Formula contains invalid token: ${current}`)}parts.push({type:"reference",value:current})}current=""};for(const c of string){if(literal){if(c===literal){flush();literal=false}else{current+=c}}else if(parenthesis){if(c==="("){current+=c;++parenthesis}else if(c===")"){--parenthesis;if(!parenthesis){flush(c)}else{current+=c}}else{current+=c}}else if(c in internals.literals){literal=internals.literals[c]}else if(c==="("){flush();++parenthesis}else if(internals.operatorCharacters.includes(c)){flush();current=c;flush()}else if(c!==" "){current+=c}else{flush()}}flush();parts=parts.map((part,i)=>{if(part.type!=="operator"||part.value!=="-"||i&&parts[i-1].type!=="operator"){return part}return{type:"operator",value:"n"}});let operator=false;for(const part of parts){if(part.type==="operator"){if(internals.operatorsPrefix.includes(part.value)){continue}if(!operator){throw new Error("Formula contains an operator in invalid position")}if(!internals.operators.includes(part.value)){throw new Error(`Formula contains an unknown operator ${part.value}`)}}else if(operator){throw new Error("Formula missing expected operator")}operator=!operator}if(!operator){throw new Error("Formula contains invalid trailing operator")}if(parts.length===1&&["reference","literal","constant"].includes(parts[0].type)){this.single={type:parts[0].type==="reference"?"reference":"value",value:parts[0].value}}this._parts=parts.map(part=>{if(part.type==="operator"){return internals.operatorsPrefix.includes(part.value)?part:part.value}if(part.type!=="reference"){return part.value}if(this.settings.tokenRx&&!this.settings.tokenRx.test(part.value)){throw new Error(`Formula contains invalid reference ${part.value}`)}if(this.settings.reference){return this.settings.reference(part.value)}return internals.reference(part.value)})}_subFormula(string,name){const method=this.settings.functions[name];if(typeof method!=="function"){throw new Error(`Formula contains unknown function ${name}`)}let args=[];if(string){let current="";let parenthesis=0;let literal=false;const flush=()=>{if(!current){throw new Error(`Formula contains function ${name} with invalid arguments ${string}`)}args.push(current);current=""};for(let i=0;i<string.length;++i){const c=string[i];if(literal){current+=c;if(c===literal){literal=false}}else if(c in internals.literals&&!parenthesis){current+=c;literal=internals.literals[c]}else if(c===","&&!parenthesis){flush()}else{current+=c;if(c==="("){++parenthesis}else if(c===")"){--parenthesis}}}flush()}args=args.map(arg=>new internals.Formula(arg,this.settings));return function(context){const innerValues=[];for(const arg of args){innerValues.push(arg.evaluate(context))}return method.call(context,...innerValues)}}evaluate(context){const parts=this._parts.slice();for(let i=parts.length-2;i>=0;--i){const part=parts[i];if(part&&part.type==="operator"){const current=parts[i+1];parts.splice(i+1,1);const value=internals.evaluate(current,context);parts[i]=internals.single(part.value,value)}}internals.operatorsOrder.forEach(set=>{for(let i=1;i<parts.length-1;){if(set.includes(parts[i])){const operator=parts[i];const left=internals.evaluate(parts[i-1],context);const right=internals.evaluate(parts[i+1],context);parts.splice(i,2);const result=internals.calculate(operator,left,right);parts[i-1]=result===0?0:result}else{i+=2}}});return internals.evaluate(parts[0],context)}};internals.Formula.prototype[internals.symbol]=true;internals.reference=function(name){return function(context){return context&&context[name]!==undefined?context[name]:null}};internals.evaluate=function(part,context){if(part===null){return null}if(typeof part==="function"){return part(context)}if(part[internals.symbol]){return part.evaluate(context)}return part};internals.single=function(operator,value){if(operator==="!"){return value?false:true}const negative=-value;if(negative===0){return 0}return negative};internals.calculate=function(operator,left,right){if(operator==="??"){return internals.exists(left)?left:right}if(typeof left==="string"||typeof right==="string"){if(operator==="+"){left=internals.exists(left)?left:"";right=internals.exists(right)?right:"";return left+right}}else{switch(operator){case"^":return Math.pow(left,right);case"*":return left*right;case"/":return left/right;case"%":return left%right;case"+":return left+right;case"-":return left-right}}switch(operator){case"<":return left<right;case"<=":return left<=right;case">":return left>right;case">=":return left>=right;case"==":return left===right;case"!=":return left!==right;case"&&":return left&&right;case"||":return left||right}return null};internals.exists=function(value){return value!==null&&value!==undefined}},{}],60:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const Config=require("./config");const internals={missing:Symbol("missing")};exports=module.exports=internals.Auth=class{constructor(core){this._core=core;this._schemes={};this._strategies={};this.settings={default:null};this.api={}}scheme(name,scheme){Hoek.assert(name,"Authentication scheme must have a name");Hoek.assert(!this._schemes[name],"Authentication scheme name already exists:",name);Hoek.assert(typeof scheme==="function","scheme must be a function:",name);this._schemes[name]=scheme}_strategy(server,name,scheme,options={}){Hoek.assert(name,"Authentication strategy must have a name");Hoek.assert(typeof options==="object","options must be an object");Hoek.assert(!this._strategies[name],"Authentication strategy name already exists");Hoek.assert(scheme,"Authentication strategy",name,"missing scheme");Hoek.assert(this._schemes[scheme],"Authentication strategy",name,"uses unknown scheme:",scheme);server=server._clone();const strategy=this._schemes[scheme](server,options);Hoek.assert(strategy.authenticate,"Invalid scheme:",name,"missing authenticate() method");Hoek.assert(typeof strategy.authenticate==="function","Invalid scheme:",name,"invalid authenticate() method");Hoek.assert(!strategy.payload||typeof strategy.payload==="function","Invalid scheme:",name,"invalid payload() method");Hoek.assert(!strategy.response||typeof strategy.response==="function","Invalid scheme:",name,"invalid response() method");strategy.options=strategy.options||{};Hoek.assert(strategy.payload||!strategy.options.payload,"Cannot require payload validation without a payload method");this._strategies[name]={methods:strategy,realm:server.realm};if(strategy.api){this.api[name]=strategy.api}}default(options){Hoek.assert(!this.settings.default,"Cannot set default strategy more than once");options=Config.apply("auth",options,"default strategy");this.settings.default=this._setupRoute(Hoek.clone(options));const routes=this._core.router.table();for(const route of routes){route.rebuild()}}async test(name,request){Hoek.assert(name,"Missing authentication strategy name");const strategy=this._strategies[name];Hoek.assert(strategy,"Unknown authentication strategy:",name);const bind=strategy.methods;const realm=strategy.realm;const response=await request._core.toolkit.execute(strategy.methods.authenticate,request,{bind:bind,realm:realm,auth:true});if(!response.isAuth){throw response}if(response.error){throw response.error}return response.data}async verify(request){const auth=request.auth;if(auth.error){throw auth.error}if(!auth.isAuthenticated){return}const strategy=this._strategies[auth.strategy];Hoek.assert(strategy,"Unknown authentication strategy:",auth.strategy);if(!strategy.methods.verify){return}const bind=strategy.methods;await strategy.methods.verify.call(bind,auth)}static testAccess(request,route){const auth=request._core.auth;try{return auth._access(request,route)}catch(err){Bounce.rethrow(err,"system");return false}}_setupRoute(options,path){if(!options){return options}if(typeof options==="string"){options={strategies:[options]}}else if(options.strategy){options.strategies=[options.strategy];delete options.strategy}if(path&&!options.strategies){Hoek.assert(this.settings.default,"Route missing authentication strategy and no default defined:",path);options=Hoek.applyToDefaults(this.settings.default,options)}path=path||"default strategy";Hoek.assert(options.strategies&&options.strategies.length,"Missing authentication strategy:",path);options.mode=options.mode||"required";if(options.entity!==undefined||options.scope!==undefined){options.access=[{entity:options.entity,scope:options.scope}];delete options.entity;delete options.scope}if(options.access){for(const access of options.access){access.scope=internals.setupScope(access)}}if(options.payload===true){options.payload="required"}let hasAuthenticatePayload=false;for(const name of options.strategies){const strategy=this._strategies[name];Hoek.assert(strategy,"Unknown authentication strategy",name,"in",path);Hoek.assert(strategy.methods.payload||options.payload!=="required","Payload validation can only be required when all strategies support it in",path);hasAuthenticatePayload=hasAuthenticatePayload||strategy.methods.payload;Hoek.assert(!strategy.methods.options.payload||options.payload===undefined||options.payload==="required","Cannot set authentication payload to",options.payload,"when a strategy requires payload validation in",path)}Hoek.assert(!options.payload||hasAuthenticatePayload,"Payload authentication requires at least one strategy with payload support in",path);return options}lookup(route){if(route.settings.auth===false){return false}return route.settings.auth||this.settings.default}_enabled(route,type){const config=this.lookup(route);if(!config){return false}if(type==="authenticate"){return true}if(type==="access"){return!!config.access}for(const name of config.strategies){const strategy=this._strategies[name];if(strategy.methods[type]){return true}}return false}static authenticate(request){const auth=request._core.auth;return auth._authenticate(request)}async _authenticate(request){const config=this.lookup(request.route);const errors=[];request.auth.mode=config.mode;if(request.auth.credentials){internals.validate(null,{credentials:request.auth.credentials,artifacts:request.auth.artifacts},request.auth.strategy,config,request,errors);return}for(const name of config.strategies){const strategy=this._strategies[name];const bind=strategy.methods;const realm=strategy.realm;const response=await request._core.toolkit.execute(strategy.methods.authenticate,request,{bind:bind,realm:realm,auth:true});const message=response.isAuth?internals.validate(response.error,response.data,name,config,request,errors):internals.validate(response,null,name,config,request,errors);if(!message){return}if(message!==internals.missing){return message}}const err=Boom.unauthorized("Missing authentication",errors);if(config.mode==="required"){throw err}request.auth.isAuthenticated=false;request.auth.credentials=null;request.auth.error=err;request._log(["auth","unauthenticated"])}static access(request){const auth=request._core.auth;request.auth.isAuthorized=auth._access(request)}_access(request,route){const config=this.lookup(route||request.route);if(!config||!config.access){return true}const credentials=request.auth.credentials;if(!credentials){if(config.mode!=="required"){return false}throw Boom.forbidden("Request is unauthenticated")}const requestEntity=credentials.user?"user":"app";const scopeErrors=[];for(const access of config.access){const entity=access.entity;if(entity&&entity!=="any"&&entity!==requestEntity){continue}let scope=access.scope;if(scope){if(!credentials.scope){scopeErrors.push(scope);continue}scope=internals.expandScope(request,scope);if(!internals.validateScope(credentials,scope,"required")||!internals.validateScope(credentials,scope,"selection")||!internals.validateScope(credentials,scope,"forbidden")){scopeErrors.push(scope);continue}}return true}if(scopeErrors.length){request._log(["auth","scope","error"]);throw Boom.forbidden("Insufficient scope",{got:credentials.scope,need:scopeErrors})}if(requestEntity==="app"){request._log(["auth","entity","user","error"]);throw Boom.forbidden("Application credentials cannot be used on a user endpoint")}request._log(["auth","entity","app","error"]);throw Boom.forbidden("User credentials cannot be used on an application endpoint")}static async payload(request){if(!request.auth.isAuthenticated){return}const auth=request._core.auth;const strategy=auth._strategies[request.auth.strategy];Hoek.assert(strategy,"Unknown authentication strategy:",request.auth.strategy);if(!strategy.methods.payload){return}const config=auth.lookup(request.route);const setting=config.payload||(strategy.methods.options.payload?"required":false);if(!setting){return}const bind=strategy.methods;const realm=strategy.realm;const response=await request._core.toolkit.execute(strategy.methods.payload,request,{bind:bind,realm:realm});if(response.isBoom&&response.isMissing){return setting==="optional"?undefined:Boom.unauthorized("Missing payload authentication")}return response}static async response(request){const auth=request._core.auth;if(!request.auth.isAuthenticated){return}const strategy=auth._strategies[request.auth.strategy];Hoek.assert(strategy,"Unknown authentication strategy:",request.auth.strategy);if(!strategy.methods.response){return}const bind=strategy.methods;const realm=strategy.realm;const error=await request._core.toolkit.execute(strategy.methods.response,request,{bind:bind,realm:realm,continue:"undefined"});if(error){throw error}}};internals.setupScope=function(access){if(!access.scope){return false}const scope={};for(const value of access.scope){const prefix=value[0];const type=prefix==="+"?"required":prefix==="!"?"forbidden":"selection";const clean=type==="selection"?value:value.slice(1);scope[type]=scope[type]||[];scope[type].push(clean);if((!scope._hasParameters||!scope._hasParameters[type])&&/{([^}]+)}/.test(clean)){scope._hasParameters=scope._hasParameters||{};scope._hasParameters[type]=true}}return scope};internals.validate=function(err,result,name,config,request,errors){result=result||{};if(err){if(err instanceof Error===false){request._log(["auth","unauthenticated","response",name],{statusCode:err.statusCode});return err}if(err.isMissing){request._log(["auth","unauthenticated","missing",name],err);errors.push(err.output.headers["WWW-Authenticate"]);return internals.missing}if(config.mode==="try"){request.auth.isAuthenticated=false;request.auth.strategy=name;request.auth.credentials=result.credentials;request.auth.artifacts=result.artifacts;request.auth.error=err;request._log(["auth","unauthenticated","try",name],err);return}request._log(["auth","unauthenticated","error",name],err);throw err}const credentials=result.credentials;request.auth.strategy=name;request.auth.credentials=credentials;request.auth.artifacts=result.artifacts;request.auth.isAuthenticated=true};internals.expandScope=function(request,scope){if(!scope._hasParameters){return scope}const expanded={required:internals.expandScopeType(request,scope,"required"),selection:internals.expandScopeType(request,scope,"selection"),forbidden:internals.expandScopeType(request,scope,"forbidden")};return expanded};internals.expandScopeType=function(request,scope,type){if(!scope._hasParameters[type]){return scope[type]}const expanded=[];const context={params:request.params,query:request.query,payload:request.payload,credentials:request.auth.credentials};for(const template of scope[type]){expanded.push(Hoek.reachTemplate(context,template))}return expanded};internals.validateScope=function(credentials,scope,type){if(!scope[type]){return true}const count=typeof credentials.scope==="string"?scope[type].indexOf(credentials.scope)!==-1?1:0:Hoek.intersect(scope[type],credentials.scope).length;if(type==="forbidden"){return count===0}if(type==="required"){return count===scope.required.length}return!!count}},{"./config":62,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/hoek":128}],61:[function(require,module,exports){"use strict";const Zlib=require("zlib");const Accept=require("@hapi/accept");const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const internals={common:["gzip, deflate","deflate, gzip","gzip","deflate","gzip, deflate, br"]};exports=module.exports=internals.Compression=class{constructor(){this.encodings=["identity","gzip","deflate"];this._encoders={identity:null,gzip:options=>Zlib.createGzip(options),deflate:options=>Zlib.createDeflate(options)};this._decoders={gzip:options=>Zlib.createGunzip(options),deflate:options=>Zlib.createInflate(options)};this._updateCommons()}_updateCommons(){this._common=new Map;internals.common.forEach(header=>{this._common.set(header,Accept.encoding(header,this.encodings))})}addEncoder(encoding,encoder){Hoek.assert(this._encoders[encoding]===undefined,`Cannot override existing encoder for ${encoding}`);Hoek.assert(typeof encoder==="function",`Invalid encoder function for ${encoding}`);this._encoders[encoding]=encoder;this.encodings.unshift(encoding);this._updateCommons()}addDecoder(encoding,decoder){Hoek.assert(this._decoders[encoding]===undefined,`Cannot override existing decoder for ${encoding}`);Hoek.assert(typeof decoder==="function",`Invalid decoder function for ${encoding}`);this._decoders[encoding]=decoder}accept(request){const header=request.headers["accept-encoding"];const common=this._common.get(header);if(common){return common}try{return Accept.encoding(header,this.encodings)}catch(err){Bounce.rethrow(err,"system");err.header=header;request._log(["accept-encoding","error"],err);return"identity"}}encoding(response,length){if(response.settings.compressed){response.headers["content-encoding"]=response.settings.compressed;return null}const request=response.request;if(!request._core.settings.compression||length!==null&&length<request._core.settings.compression.minBytes){return null}const mime=request._core.mime.type(response.headers["content-type"]||"application/octet-stream");if(!mime.compressible){return null}response.vary("accept-encoding");if(response.headers["content-encoding"]){return null}return request.info.acceptEncoding==="identity"?null:request.info.acceptEncoding}encoder(request,encoding){const encoder=this._encoders[encoding];Hoek.assert(encoder!==undefined,`Unknown encoding ${encoding}`);return encoder(request.route.settings.compression[encoding])}}},{"@hapi/accept":2,"@hapi/bounce":13,"@hapi/hoek":128,zlib:undefined}],62:[function(require,module,exports){"use strict";const Os=require("os");const Joi=require("@hapi/joi");const internals={};exports.symbol=Symbol("hapi-response");exports.apply=function(type,options,...message){const result=Joi.validate(options,internals[type]);if(result.error){throw new Error(`Invalid ${type} options ${message.length?"("+message.join(" ")+")":""} ${result.error.annotate()}`)}return result.value};exports.enable=function(options){const settings=options?Object.assign({},options):{};if(settings.security===true){settings.security={}}if(settings.cors===true){settings.cors={}}return settings};internals.access=Joi.object({entity:Joi.valid("user","app","any"),scope:[false,Joi.array().items(Joi.string()).single().min(1)]});internals.auth=Joi.alternatives([Joi.string(),internals.access.keys({mode:Joi.valid("required","optional","try"),strategy:Joi.string(),strategies:Joi.array().items(Joi.string()).min(1),access:Joi.array().items(internals.access.min(1)).single().min(1),payload:[Joi.valid("required","optional"),Joi.boolean()]}).without("strategy","strategies").without("access",["scope","entity"])]);internals.event=Joi.object({method:Joi.array().items(Joi.func()).single(),options:Joi.object({before:Joi.array().items(Joi.string()).single(),after:Joi.array().items(Joi.string()).single(),bind:Joi.any(),sandbox:Joi.valid("server","plugin"),timeout:Joi.number().integer().min(1)}).default({})});internals.exts=Joi.array().items(internals.event.keys({type:Joi.string().required()})).single();internals.failAction=Joi.alternatives([Joi.valid("error","log","ignore"),Joi.func()]).default("error");internals.routeBase=Joi.object({app:Joi.object().allow(null),auth:internals.auth.allow(false),bind:Joi.object().allow(null),cache:Joi.object({expiresIn:Joi.number(),expiresAt:Joi.string(),privacy:Joi.valid("default","public","private"),statuses:Joi.array().items(Joi.number().integer().min(200)).min(1).single().default([200,204]),otherwise:Joi.string().default("no-cache")}).allow(false).default(),compression:Joi.object().pattern(/.+/,Joi.object()).default(),cors:Joi.object({origin:Joi.array().min(1).allow("ignore").default(["*"]),maxAge:Joi.number().default(86400),headers:Joi.array().items(Joi.string()).default(["Accept","Authorization","Content-Type","If-None-Match"]),additionalHeaders:Joi.array().items(Joi.string()).default([]),exposedHeaders:Joi.array().items(Joi.string()).default(["WWW-Authenticate","Server-Authorization"]),additionalExposedHeaders:Joi.array().items(Joi.string()).default([]),credentials:Joi.boolean().when("origin",{is:"ignore",then:false}).default(false)}).allow(false,true).default(false),ext:Joi.object({onPreAuth:Joi.array().items(internals.event).single(),onCredentials:Joi.array().items(internals.event).single(),onPostAuth:Joi.array().items(internals.event).single(),onPreHandler:Joi.array().items(internals.event).single(),onPostHandler:Joi.array().items(internals.event).single(),onPreResponse:Joi.array().items(internals.event).single()}).default({}),files:Joi.object({relativeTo:Joi.string().regex(/^([\/\.])|([A-Za-z]:\\)|(\\\\)/).default(".")}).default(),json:Joi.object({replacer:Joi.alternatives(Joi.func(),Joi.array()).allow(null).default(null),space:Joi.number().allow(null).default(null),suffix:Joi.string().allow(null).default(null),escape:Joi.boolean().default(false)}).default(),jsonp:Joi.string(),log:Joi.object({collect:Joi.boolean().default(false)}).default(),payload:Joi.object({output:Joi.valid("data","stream","file").default("data"),parse:Joi.boolean().allow("gunzip").default(true),multipart:Joi.object({output:Joi.valid("data","stream","file","annotated").required()}).allow(false),allow:Joi.array().items(Joi.string()).single(),override:Joi.string(),protoAction:Joi.valid("error","remove","ignore").default("error"),maxBytes:Joi.number().integer().positive().default(1024*1024),uploads:Joi.string().default(Os.tmpdir()),failAction:internals.failAction,timeout:Joi.number().integer().positive().allow(false).default(10*1e3),defaultContentType:Joi.string().default("application/json"),compression:Joi.object().pattern(/.+/,Joi.object()).default()}).default(),plugins:Joi.object(),response:Joi.object({disconnectStatusCode:Joi.number().integer().min(400).default(499),emptyStatusCode:Joi.valid(200,204).default(200),failAction:internals.failAction,modify:Joi.boolean(),options:Joi.object().default(),ranges:Joi.boolean().default(true),sample:Joi.number().min(0).max(100).when("modify",{is:true,then:Joi.forbidden()}),schema:Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(true,false),status:Joi.object().pattern(/\d\d\d/,Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(true,false))}).default().assert("options.stripUnknown",Joi.when("modify",{is:true,otherwise:false}),"meet requirement of having peer modify set to true"),security:Joi.object({hsts:Joi.alternatives([Joi.object({maxAge:Joi.number(),includeSubdomains:Joi.boolean(),includeSubDomains:Joi.boolean(),preload:Joi.boolean()}),Joi.boolean(),Joi.number()]).default(15768e3),xframe:Joi.alternatives([Joi.boolean(),Joi.valid("sameorigin","deny"),Joi.object({rule:Joi.valid("sameorigin","deny","allow-from"),source:Joi.string()})]).default("deny"),xss:Joi.boolean().default(true),noOpen:Joi.boolean().default(true),noSniff:Joi.boolean().default(true),referrer:Joi.alternatives([Joi.boolean().valid(false),Joi.valid("","no-referrer","no-referrer-when-downgrade","unsafe-url","same-origin","origin","strict-origin","origin-when-cross-origin","strict-origin-when-cross-origin")]).default(false)}).allow(null,false,true).default(false),state:Joi.object({parse:Joi.boolean().default(true),failAction:internals.failAction}).default(),timeout:Joi.object({socket:Joi.number().integer().positive().allow(false),server:Joi.number().integer().positive().allow(false).default(false)}).default(),validate:Joi.object({headers:Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(null,true),params:Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(null,true),query:Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(null,false,true),payload:Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(null,false,true),state:Joi.alternatives(Joi.object(),Joi.array(),Joi.func()).allow(null,false,true),failAction:internals.failAction,errorFields:Joi.object(),options:Joi.object().default()}).default()});internals.server=Joi.object({address:Joi.string().hostname(),app:Joi.object().allow(null),autoListen:Joi.boolean(),cache:Joi.allow(null),compression:Joi.object({minBytes:Joi.number().min(1).integer().default(1024)}).allow(false).default(),debug:Joi.object({request:Joi.array().items(Joi.string()).single().allow(false).default(["implementation"]),log:Joi.array().items(Joi.string()).single().allow(false)}).allow(false).default(),host:Joi.string().hostname().allow(null),listener:Joi.any(),load:Joi.object({sampleInterval:Joi.number().integer().min(0).default(0),concurrent:Joi.number().integer().min(0).default(0)}).unknown().default(),mime:Joi.object().allow(null).default(null),operations:Joi.object({cleanStop:Joi.boolean().default(true)}).default(),plugins:Joi.object(),port:Joi.alternatives([Joi.number().integer().min(0),Joi.string().regex(/\//),Joi.string().regex(/^\\\\\.\\pipe\\/)]).allow(null),query:Joi.object({parser:Joi.func()}).default(),router:Joi.object({isCaseSensitive:Joi.boolean().default(true),stripTrailingSlash:Joi.boolean().default(false)}).default(),routes:internals.routeBase.default(),state:Joi.object(),tls:Joi.alternatives([Joi.object().allow(null),Joi.boolean()]),uri:Joi.string().regex(/[^/]$/)});internals.vhost=Joi.alternatives([Joi.string().hostname(),Joi.array().items(Joi.string().hostname()).min(1)]);internals.handler=Joi.alternatives([Joi.func(),Joi.object().length(1)]);internals.route=Joi.object({method:Joi.string().regex(/^[a-zA-Z0-9!#\$%&'\*\+\-\.^_`\|~]+$/).required(),path:Joi.string().required(),rules:Joi.object(),vhost:internals.vhost,handler:Joi.any(),options:Joi.any(),config:Joi.any()}).without("config","options");internals.pre=[Joi.func(),Joi.object({method:Joi.alternatives(Joi.string(),Joi.func()).required(),assign:Joi.string(),mode:Joi.valid("serial","parallel"),failAction:internals.failAction})];internals.routeConfig=internals.routeBase.keys({description:Joi.string(),id:Joi.string(),isInternal:Joi.boolean(),notes:[Joi.string(),Joi.array().items(Joi.string())],pre:Joi.array().items(internals.pre.concat(Joi.array().items(internals.pre).min(1))),tags:[Joi.string(),Joi.array().items(Joi.string())]});internals.cacheConfig=Joi.alternatives([Joi.func(),Joi.object({name:Joi.string().invalid("_default"),shared:Joi.boolean(),provider:[Joi.func(),{constructor:Joi.func().required(),options:Joi.object({partition:Joi.string().default("hapi-cache")}).unknown().default({})}],engine:Joi.object()}).xor("provider","engine")]);internals.cache=Joi.array().items(internals.cacheConfig).min(1).single();internals.cachePolicy=Joi.object({cache:Joi.string().allow(null).allow(""),segment:Joi.string(),shared:Joi.boolean()}).unknown();internals.method=Joi.object({bind:Joi.object().allow(null),generateKey:Joi.func(),cache:internals.cachePolicy});internals.methodObject=Joi.object({name:Joi.string().required(),method:Joi.func().required(),options:Joi.object()});internals.register=Joi.object({once:true,routes:Joi.object({prefix:Joi.string().regex(/^\/.+/),vhost:internals.vhost}).default({})});internals.semver=Joi.string();internals.plugin=internals.register.keys({options:Joi.any(),plugin:Joi.object({register:Joi.func().required(),name:Joi.string().when("pkg.name",{is:Joi.exist(),otherwise:Joi.required()}),version:Joi.string(),multiple:Joi.boolean().default(false),dependencies:[Joi.array().items(Joi.string()).single(),Joi.object().pattern(/.+/,internals.semver)],once:true,requirements:Joi.object({hapi:Joi.string(),node:Joi.string()}).default(),pkg:Joi.object({name:Joi.string(),version:Joi.string().default("0.0.0")}).unknown().default({})}).unknown()}).without("once","options").unknown();internals.rules=Joi.object({validate:Joi.object({schema:Joi.alternatives(Joi.object(),Joi.array()).required(),options:Joi.object().default({allowUnknown:true})})})},{"@hapi/joi":142,os:undefined}],63:[function(require,module,exports){"use strict";const Http=require("http");const Https=require("https");const Os=require("os");const Path=require("path");const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Call=require("@hapi/call");const Catbox=require("@hapi/catbox");const CatboxMemory=require("@hapi/catbox-memory");const Heavy=require("@hapi/heavy");const Hoek=require("@hapi/hoek");const Mimos=require("@hapi/mimos");const Podium=require("@hapi/podium");const Somever=require("@hapi/somever");const Statehood=require("@hapi/statehood");const Auth=require("./auth");const Compression=require("./compression");const Config=require("./config");const Cors=require("./cors");const Ext=require("./ext");const Methods=require("./methods");const Request=require("./request");const Route=require("./route");const Toolkit=require("./toolkit");const internals={counter:{min:1e4,max:99999},events:[{name:"log",channels:["app","internal"],tags:true},{name:"request",channels:["app","internal","error"],tags:true,spread:true},"response","route","start","stop"],badRequestResponse:Buffer.from("HTTP/1.1 400 Bad Request\r\n\r\n","ascii")};exports=module.exports=internals.Core=class{constructor(options){this.root=null;const{settings,type}=internals.setup(options);this.settings=settings;this.type=type;this.app={};this.auth=new Auth(this);this.caches=new Map;this.compression=new Compression;this.controlled=null;this.decorations={handler:[],request:[],server:[],toolkit:[]};this.dependencies=[];this.events=new Podium(internals.events);this.heavy=new Heavy(this.settings.load);this.instances=new Set;this.methods=new Methods(this);this.mime=new Mimos(this.settings.mime);this.onConnection=null;this.plugins={};this.queue=new internals.Queue(this.settings.load);this.registrations={};this.registring=0;this.requestCounter={value:internals.counter.min,min:internals.counter.min,max:internals.counter.max};this.router=new Call.Router(this.settings.router);this.phase="stopped";this.sockets=null;this.actives=new WeakMap;this.started=false;this.states=new Statehood.Definitions(this.settings.state);this.toolkit=new Toolkit;this.extensionsSeq=0;this.extensions={server:{onPreStart:new Ext("onPreStart",this),onPostStart:new Ext("onPostStart",this),onPreStop:new Ext("onPreStop",this),onPostStop:new Ext("onPostStop",this)},route:{onRequest:new Ext("onRequest",this),onPreAuth:new Ext("onPreAuth",this),onCredentials:new Ext("onCredentials",this),onPostAuth:new Ext("onPostAuth",this),onPreHandler:new Ext("onPreHandler",this),onPostHandler:new Ext("onPostHandler",this),onPreResponse:new Ext("onPreResponse",this)}};this.Request=class extends Request{};this._debug();this._decorations={handler:{},request:{},server:{},toolkit:{},requestApply:null};this._initializeCache();this.listener=this._createListener();this._initializeListener();this.info=this._info()}_debug(){if(this.settings.debug){const debug=(request,event)=>{const data=event.error||event.data;console.error("Debug:",event.tags.join(", "),data?"\n    "+(data.stack||(typeof data==="object"?Hoek.stringify(data):data)):"")};if(this.settings.debug.log){const filter=this.settings.debug.log.some(tag=>tag==="*")?undefined:this.settings.debug.log;this.events.on({name:"log",filter:filter},event=>debug(null,event))}if(this.settings.debug.request){const filter=this.settings.debug.request.some(tag=>tag==="*")?undefined:this.settings.debug.request;this.events.on({name:"request",filter:filter},debug)}}}_initializeCache(){if(this.settings.cache){this._createCache(this.settings.cache)}if(!this.caches.has("_default")){this._createCache([{provider:CatboxMemory}])}}_info(){const now=Date.now();const protocol=this.type==="tcp"?this.settings.tls?"https":"http":this.type;const host=this.settings.host||Os.hostname()||"localhost";const port=this.settings.port;const info={created:now,started:0,host:host,port:port,protocol:protocol,id:Os.hostname()+":"+process.pid+":"+now.toString(36),uri:this.settings.uri||protocol+":"+(this.type==="tcp"?"//"+host+(port?":"+port:""):port)};return info}_createCache(configs){Hoek.assert(this.phase!=="initializing","Cannot provision server cache while server is initializing");configs=Config.apply("cache",configs);const added=[];for(let config of configs){if(typeof config==="function"){config={provider:{constructor:config}}}const name=config.name||"_default";Hoek.assert(!this.caches.has(name),"Cannot configure the same cache more than once: ",name==="_default"?"default cache":name);let client=null;if(config.provider){let provider=config.provider;if(typeof provider==="function"){provider={constructor:provider}}client=new Catbox.Client(provider.constructor,provider.options||{partition:"hapi-cache"})}else{client=new Catbox.Client(config.engine)}this.caches.set(name,{client:client,segments:{},shared:config.shared||false});added.push(client)}return added}registerServer(server){if(!this.root){this.root=server;this._defaultRoutes()}this.instances.add(server)}async _start(){if(this.phase==="initialized"||this.phase==="started"){this._validateDeps()}if(this.phase==="started"){return}if(this.phase!=="stopped"&&this.phase!=="initialized"){throw new Error("Cannot start server while it is in "+this.phase+" phase")}if(this.phase!=="initialized"){await this._initialize()}this.phase="starting";this.started=true;this.info.started=Date.now();try{await this._listen()}catch(err){this.started=false;this.phase="invalid";throw err}this.phase="started";await this.events.emit("start");try{if(this.controlled){await Promise.all(this.controlled.map(control=>control.start()))}await this._invoke("onPostStart")}catch(err){this.phase="invalid";throw err}}_listen(){return new Promise((resolve,reject)=>{if(!this.settings.autoListen){resolve();return}const onError=err=>{reject(err);return};this.listener.once("error",onError);const finalize=()=>{this.listener.removeListener("error",onError);resolve();return};if(this.type!=="tcp"){this.listener.listen(this.settings.port,finalize)}else{const address=this.settings.address||this.settings.host||"0.0.0.0";this.listener.listen(this.settings.port,address,finalize)}})}async _initialize(){if(this.registring){throw new Error("Cannot start server before plugins finished registration")}if(this.phase==="initialized"){return}if(this.phase!=="stopped"){throw new Error("Cannot initialize server while it is in "+this.phase+" phase")}this._validateDeps();this.phase="initializing";try{const caches=[];this.caches.forEach(cache=>caches.push(cache.client.start()));await Promise.all(caches);await this._invoke("onPreStart");this.heavy.start();this.phase="initialized";if(this.controlled){await Promise.all(this.controlled.map(control=>control.initialize()))}}catch(err){this.phase="invalid";throw err}}_validateDeps(){for(const{deps,plugin}of this.dependencies){for(const dep in deps){const version=deps[dep];Hoek.assert(this.registrations[dep],"Plugin",plugin,"missing dependency",dep);Hoek.assert(version==="*"||Somever.match(this.registrations[dep].version,version),"Plugin",plugin,"requires",dep,"version",version,"but found",this.registrations[dep].version)}}}async _stop(options={}){options.timeout=options.timeout||5e3;if(["stopped","initialized","started","invalid"].indexOf(this.phase)===-1){throw new Error("Cannot stop server while in "+this.phase+" phase")}this.phase="stopping";try{await this._invoke("onPreStop");if(this.started){this.started=false;this.info.started=0;await this._unlisten(options.timeout)}const caches=[];this.caches.forEach(cache=>caches.push(cache.client.stop()));await Promise.all(caches);await this.events.emit("stop");this.heavy.stop();if(this.controlled){await Promise.all(this.controlled.map(control=>control.stop(options)))}await this._invoke("onPostStop");this.phase="stopped"}catch(err){this.phase="invalid";throw err}}_unlisten(timeout){let timeoutId=null;if(this.settings.operations.cleanStop){const destroy=()=>{this.sockets.forEach(connection=>connection.destroy());this.sockets.clear()};timeoutId=setTimeout(destroy,timeout);this.sockets.forEach(connection=>{if(!this.actives.has(connection)){connection.end()}})}return new Promise(resolve=>{this.listener.close(()=>{if(this.settings.operations.cleanStop){this.listener.removeListener(this.settings.tls?"secureConnection":"connection",this.onConnection);clearTimeout(timeoutId)}this._initializeListener();resolve()})})}async _invoke(type){const exts=this.extensions.server[type];if(!exts.nodes){return}for(const ext of exts.nodes){const bind=ext.bind||ext.realm.settings.bind;const operation=ext.func.call(bind,ext.server,bind);await Toolkit.timed(operation,{timeout:ext.timeout,name:type})}}_defaultRoutes(){this.router.special("notFound",new Route({method:"_special",path:"/{p*}",handler:internals.notFound},this.root,{special:true}));this.router.special("badRequest",new Route({method:"_special",path:"/{p*}",handler:internals.badRequest},this.root,{special:true}));if(this.settings.routes.cors){Cors.handler(this.root)}}_dispatch(options={}){return(req,res)=>{const request=Request.generate(this.root,req,res,options);if(req.socket){this.actives.set(req.socket,request);const env={core:this,req:req};res.on("finish",internals.onFinish.bind(res,env))}if(this.settings.load.sampleInterval){try{this.heavy.check()}catch(err){Bounce.rethrow(err,"system");this._log(["load"],this.heavy.load);request._reply(err);return}}this.queue.add(request)}}_createListener(){const listener=this.settings.listener||(this.settings.tls?Https.createServer(this.settings.tls):Http.createServer());listener.on("request",this._dispatch());listener.on("checkContinue",this._dispatch({expectContinue:true}));listener.on("clientError",(err,socket)=>{this._log(["connection","client","error"],err);if(socket.readable){const request=this.actives.get(socket);if(request){const error=Boom.badRequest();error.output.headers={connection:"close"};request._reply(error)}else{socket.end(internals.badRequestResponse)}}else{socket.destroy(err)}});return listener}_initializeListener(){this.listener.once("listening",()=>{if(this.type==="tcp"){const address=this.listener.address();this.info.address=address.address;this.info.port=address.port;this.info.uri=this.settings.uri||this.info.protocol+"://"+this.info.host+":"+this.info.port}if(this.settings.operations.cleanStop){this.sockets=new Set;const self=this;const onClose=function(){self.sockets.delete(this)};this.onConnection=connection=>{this.sockets.add(connection);connection.on("close",onClose)};this.listener.on(this.settings.tls?"secureConnection":"connection",this.onConnection)}})}_cachePolicy(options,_segment,realm){options=Config.apply("cachePolicy",options);const plugin=realm&&realm.plugin;const segment=options.segment||_segment||(plugin?`!${plugin}`:"");Hoek.assert(segment,"Missing cache segment name");const cacheName=options.cache||"_default";const cache=this.caches.get(cacheName);Hoek.assert(cache,"Unknown cache",cacheName);Hoek.assert(!cache.segments[segment]||cache.shared||options.shared,"Cannot provision the same cache segment more than once");cache.segments[segment]=true;return new Catbox.Policy(options,cache.client,segment)}log(tags,data){return this._log(tags,data,"app")}_log(tags,data,channel="internal"){if(!this.events.hasListeners("log")){return}if(!Array.isArray(tags)){tags=[tags]}const timestamp=Date.now();const field=data instanceof Error?"error":"data";let event={timestamp:timestamp,tags:tags,[field]:data,channel:channel};if(typeof data==="function"){event=()=>({timestamp:timestamp,tags:tags,data:data(),channel:channel})}this.events.emit({name:"log",tags:tags,channel:channel},event)}};internals.setup=function(options={}){let settings=Hoek.clone(options,{shallow:["cache","listener","routes.bind"]});settings.routes=Config.enable(settings.routes);settings=Config.apply("server",settings);if(settings.port===undefined){settings.port=0}const type=typeof settings.port==="string"?"socket":"tcp";if(type==="socket"){settings.port=settings.port.indexOf("/")!==-1?Path.resolve(settings.port):settings.port.toLowerCase()}if(settings.autoListen===undefined){settings.autoListen=true}Hoek.assert(settings.autoListen||!settings.port,"Cannot specify port when autoListen is false");Hoek.assert(settings.autoListen||!settings.address,"Cannot specify address when autoListen is false");return{settings:settings,type:type}};internals.notFound=function(){throw Boom.notFound()};internals.badRequest=function(){throw Boom.badRequest()};internals.onFinish=function(env){const{core,req}=env;core.actives.delete(req.socket);if(!core.started){req.socket.end()}};internals.Queue=class{constructor(options){this.settings=options;this.active=0;this.queue=[]}add(request){if(this.settings.concurrent){this.queue.push(request);this.next()}else{request._execute()}}next(){if(this.queue.length&&this.active<this.settings.concurrent){const request=this.queue.shift();++this.active;request._execute()}}release(){if(this.settings.concurrent){--this.active;this.next()}}}},{"./auth":60,"./compression":61,"./config":62,"./cors":64,"./ext":65,"./methods":69,"./request":70,"./route":72,"./toolkit":76,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/call":15,"@hapi/catbox":20,"@hapi/catbox-memory":18,"@hapi/heavy":80,"@hapi/hoek":128,"@hapi/mimos":166,"@hapi/podium":170,"@hapi/somever":241,"@hapi/statehood":242,http:undefined,https:undefined,os:undefined,path:undefined}],64:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");let Route=null;const internals={};exports.route=function(options){if(!options){return false}const settings=Hoek.clone(options);settings._headers=settings.headers.concat(settings.additionalHeaders);settings._headersString=settings._headers.join(",");for(let i=0;i<settings._headers.length;++i){settings._headers[i]=settings._headers[i].toLowerCase()}if(settings._headers.indexOf("origin")===-1){settings._headers.push("origin")}settings._exposedHeaders=settings.exposedHeaders.concat(settings.additionalExposedHeaders).join(",");if(settings.origin==="ignore"){settings._origin=false}else if(settings.origin.indexOf("*")!==-1){Hoek.assert(settings.origin.length===1,"Cannot specify cors.origin * together with other values");settings._origin=true}else{settings._origin={qualified:[],wildcards:[]};for(const origin of settings.origin){if(origin.indexOf("*")!==-1){settings._origin.wildcards.push(new RegExp("^"+Hoek.escapeRegex(origin).replace(/\\\*/g,".*").replace(/\\\?/g,".")+"$"))}else{settings._origin.qualified.push(origin)}}}return settings};exports.options=function(route,server){if(route.method==="options"||!route.settings.cors){return}exports.handler(server)};exports.handler=function(server){Route=Route||require("./route");if(server._core.router.specials.options){return}const definition={method:"_special",path:"/{p*}",handler:internals.handler,options:{cors:false}};const route=new Route(definition,server,{special:true});server._core.router.special("options",route)};internals.handler=function(request,h){const method=request.headers["access-control-request-method"];if(!method){throw Boom.notFound("CORS error: Missing Access-Control-Request-Method header")}const route=request.server.match(method,request.path,request.info.hostname);if(!route){throw Boom.notFound()}const settings=route.settings.cors;if(!settings){return{message:"CORS is disabled for this route"}}const origin=request.headers.origin;if(!origin&&settings._origin!==false){throw Boom.notFound("CORS error: Missing Origin header")}if(!exports.matchOrigin(origin,settings)){return{message:"CORS error: Origin not allowed"}}let headers=request.headers["access-control-request-headers"];if(headers){headers=headers.toLowerCase().split(/\s*,\s*/);if(Hoek.intersect(headers,settings._headers).length!==headers.length){return{message:"CORS error: Some headers are not allowed"}}}const response=h.response();response._header("access-control-allow-origin",settings._origin?origin:"*");response._header("access-control-allow-methods",method);response._header("access-control-allow-headers",settings._headersString);response._header("access-control-max-age",settings.maxAge);if(settings.credentials){response._header("access-control-allow-credentials","true")}if(settings._exposedHeaders){response._header("access-control-expose-headers",settings._exposedHeaders)}return response};exports.headers=function(request){const settings=request.route.settings.cors;const response=request.response;if(settings._origin!==false){response.vary("origin")}if(request.info.cors&&!request.info.cors.isOriginMatch||!exports.matchOrigin(request.headers.origin,request.route.settings.cors)){return}response._header("access-control-allow-origin",settings._origin?request.headers.origin:"*");if(settings.credentials){response._header("access-control-allow-credentials","true")}if(settings._exposedHeaders){response._header("access-control-expose-headers",settings._exposedHeaders,{append:true})}};exports.matchOrigin=function(origin,settings){if(settings._origin===true||settings._origin===false){return true}if(!origin){return false}if(settings._origin.qualified.indexOf(origin)!==-1){return true}for(const wildcard of settings._origin.wildcards){if(origin.match(wildcard)){return true}}return false}},{"./route":72,"@hapi/boom":12,"@hapi/hoek":128}],65:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Topo=require("@hapi/topo");const internals={};exports=module.exports=internals.Ext=class{constructor(type,core){this._topo=new Topo;this._core=core;this._routes=[];this.type=type;this.nodes=null}add(event){const methods=[].concat(event.method);for(const method of methods){const settings={before:event.options.before,after:event.options.after,group:event.realm.plugin,sort:this._core.extensionsSeq++};const node={func:method,bind:event.options.bind,server:event.server,realm:event.realm,timeout:event.options.timeout};this._topo.add(node,settings)}this.nodes=this._topo.nodes;for(const route of this._routes){route.rebuild(event)}}merge(others){const merge=[];for(const other of others){merge.push(other._topo)}this._topo.merge(merge);this.nodes=this._topo.nodes.length?this._topo.nodes:null}subscribe(route){this._routes.push(route)}static combine(route,type){const ext=new internals.Ext(type,route._core);const events=route.settings.ext[type];if(events){for(let event of events){event=Object.assign({},event);Hoek.assert(!event.options.sandbox,"Cannot specify sandbox option for route extension");event.realm=route.realm;ext.add(event)}}const server=route._core.extensions.route[type];const realm=route.realm._extensions[type];ext.merge([server,realm]);server.subscribe(route);realm.subscribe(route);return ext}}},{"@hapi/hoek":128,"@hapi/topo":278}],66:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const internals={};exports.execute=async function(request){if(request._route._prerequisites){for(const set of request._route._prerequisites){const pres=[];for(const item of set){pres.push(internals.handler(request,item.method,item))}const responses=await Promise.all(pres);for(const response of responses){if(response!==undefined){return response}}}}const result=await internals.handler(request,request.route.settings.handler);if(result._takeover||typeof result==="symbol"){return result}request._setResponse(result)};internals.handler=async function(request,method,pre){const bind=request.route.settings.bind;const realm=request.route.realm;let response=await request._core.toolkit.execute(method,request,{bind:bind,realm:realm,continue:"null"});if(!pre){if(response.isBoom){request._log(["handler","error"],response);throw response}return response}if(response.isBoom){response.assign=pre.assign;response=await request._core.toolkit.failAction(request,pre.failAction,response,{tags:["pre","error"],retain:true})}if(typeof response==="symbol"){return response}if(pre.assign){request.pre[pre.assign]=response.isBoom?response:response.source;request.preResponses[pre.assign]=response}if(response._takeover){return response}};exports.defaults=function(method,handler,core){let defaults=null;if(typeof handler==="object"){const type=Object.keys(handler)[0];const serverHandler=core._decorations.handler[type];Hoek.assert(serverHandler,"Unknown handler:",type);if(serverHandler.defaults){defaults=typeof serverHandler.defaults==="function"?serverHandler.defaults(method):serverHandler.defaults}}return defaults||{}};exports.configure=function(handler,route){if(typeof handler==="object"){const type=Object.keys(handler)[0];const serverHandler=route._core._decorations.handler[type];Hoek.assert(serverHandler,"Unknown handler:",type);return serverHandler(route.public,handler[type])}return handler};exports.prerequisitesConfig=function(config){if(!config){return null}const prerequisites=[];for(let pres of config){pres=[].concat(pres);const set=[];for(let pre of pres){if(typeof pre!=="object"){pre={method:pre}}const item={method:pre.method,assign:pre.assign,failAction:pre.failAction||"error"};set.push(item)}prerequisites.push(set)}return prerequisites.length?prerequisites:null}},{"@hapi/hoek":128}],67:[function(require,module,exports){"use strict";const Stream=require("stream");const Boom=require("@hapi/boom");const Response=require("./response");const internals={};exports.cache=function(request){const response=request.response;if(response.headers["cache-control"]){return}const settings=request.route.settings.cache;const policy=settings&&request._route._cache&&(settings._statuses.has(response.statusCode)||response.statusCode===304&&settings._statuses.has(200));if(policy||response.settings.ttl){const ttl=response.settings.ttl!==null?response.settings.ttl:request._route._cache.ttl();const privacy=request.auth.isAuthenticated||response.headers["set-cookie"]?"private":settings.privacy||"default";response._header("cache-control","max-age="+Math.floor(ttl/1e3)+", must-revalidate"+(privacy!=="default"?", "+privacy:""))}else if(settings){response._header("cache-control",settings.otherwise)}};exports.content=async function(request){const response=request.response;if(response._isPayloadSupported()||request.method==="head"){await response._marshal();if(request.jsonp&&response._payload.jsonp){response._header("content-type","text/javascript"+(response.settings.charset?"; charset="+response.settings.charset:""));response._header("x-content-type-options","nosniff");response._payload.jsonp(request.jsonp)}if(response._payload.size&&typeof response._payload.size==="function"){response._header("content-length",response._payload.size(),{override:false})}if(!response._isPayloadSupported()){response._close(request);response._payload=new internals.Empty}exports.type(request,true)}else{response._close(request);response._payload=new internals.Empty;delete response.headers["content-length"]}};exports.state=async function(request){const response=request.response;const states=[];for(const stateName in request._states){states.push(request._states[stateName])}try{for(const name in request._core.states.cookies){const autoValue=request._core.states.cookies[name].autoValue;if(!autoValue||name in request._states||name in request.state){continue}if(typeof autoValue!=="function"){states.push({name:name,value:autoValue});continue}const value=await autoValue(request);states.push({name:name,value:value})}if(!states.length){return}let header=await request._core.states.format(states);const existing=response.headers["set-cookie"];if(existing){header=(Array.isArray(existing)?existing:[existing]).concat(header)}response._header("set-cookie",header)}catch(err){const error=Boom.boomify(err);request._log(["state","response","error"],error);request._states={};throw error}};exports.type=function(request,postMarshal){const response=request.response;let type=response.headers["content-type"];if(!type){if(response._contentType){const charset=response.settings.charset&&response._contentType!=="application/octet-stream"?"; charset="+response.settings.charset:"";response.type(response._contentType+charset)}}else{type=type.trim();if((!response._contentType||!postMarshal)&&response.settings.charset&&type.match(/^(?:text\/)|(?:application\/(?:json)|(?:javascript))/)){if(!type.match(/; *charset=/)){const semi=type[type.length-1]===";";response.type(type+(semi?" ":"; ")+"charset="+response.settings.charset)}}}};exports.entity=function(request){if(!request._entity){return}const response=request.response;if(request._entity.etag&&!response.headers.etag){response.etag(request._entity.etag,{vary:request._entity.vary})}if(request._entity.modified&&!response.headers["last-modified"]){response.header("last-modified",request._entity.modified)}};exports.unmodified=function(request){const response=request.response;if(response.statusCode===304){return}const entity={etag:response.headers.etag,vary:response.settings.varyEtag,modified:response.headers["last-modified"]};const etag=Response.unmodified(request,entity);if(etag){response.code(304);if(etag!==true){response.headers.etag=etag}}};internals.Empty=class extends Stream.Readable{_read(){this.push(null)}writeToStream(stream){stream.end()}}},{"./response":71,"@hapi/boom":12,stream:undefined}],68:[function(require,module,exports){"use strict";const Server=require("./server");const internals={};exports.Server=Server;exports.server=Server},{"./server":74}],69:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");const Config=require("./config");const internals={methodNameRx:/^[_$a-zA-Z][$\w]*(?:\.[_$a-zA-Z][$\w]*)*$/};exports=module.exports=internals.Methods=class{constructor(core){this.core=core;this.methods={}}add(name,method,options,realm){if(typeof name!=="object"){return this._add(name,method,options,realm)}const items=[].concat(name);for(let item of items){item=Config.apply("methodObject",item);this._add(item.name,item.method,item.options||{},realm)}}_add(name,method,options,realm){Hoek.assert(typeof method==="function","method must be a function");Hoek.assert(typeof name==="string","name must be a string");Hoek.assert(name.match(internals.methodNameRx),"Invalid name:",name);Hoek.assert(!Hoek.reach(this.methods,name,{functions:false}),"Server method function name already exists:",name);options=Config.apply("method",options,name);const settings=Hoek.clone(options,{shallow:["bind"]});settings.generateKey=settings.generateKey||internals.generateKey;const bind=settings.bind||realm.settings.bind||null;const bound=!bind?method:(...args)=>method.apply(bind,args);if(!settings.cache){return this._assign(name,bound)}Hoek.assert(!settings.cache.generateFunc,"Cannot set generateFunc with method caching:",name);Hoek.assert(settings.cache.generateTimeout!==undefined,"Method caching requires a timeout value in generateTimeout:",name);settings.cache.generateFunc=(id,flags)=>bound(...id.args,flags);const cache=this.core._cachePolicy(settings.cache,"#"+name);const func=function(...args){const key=settings.generateKey.apply(bind,args);if(typeof key!=="string"){return Promise.reject(Boom.badImplementation("Invalid method key when invoking: "+name,{name:name,args:args}))}return cache.get({id:key,args:args})};func.cache={drop:function(...args){const key=settings.generateKey.apply(bind,args);if(typeof key!=="string"){return Promise.reject(Boom.badImplementation("Invalid method key when invoking: "+name,{name:name,args:args}))}return cache.drop(key)},stats:cache.stats};this._assign(name,func,func)}_assign(name,method){const path=name.split(".");let ref=this.methods;for(let i=0;i<path.length;++i){if(!ref[path[i]]){ref[path[i]]=i+1===path.length?method:{}}ref=ref[path[i]]}}};internals.supportedArgs=["string","number","boolean"];internals.generateKey=function(...args){let key="";for(let i=0;i<args.length;++i){const arg=args[i];if(!internals.supportedArgs.includes(typeof arg)){return null}key=key+(i?":":"")+encodeURIComponent(arg.toString())}return key}},{"./config":62,"@hapi/boom":12,"@hapi/hoek":128}],70:[function(require,module,exports){"use strict";const Url=require("url");const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const Podium=require("@hapi/podium");const Cors=require("./cors");const Response=require("./response");const Transmit=require("./transmit");const internals={events:Podium.validate(["finish",{name:"peek",spread:true},"disconnect"]),reserved:["server","url","query","path","method","mime","setUrl","setMethod","headers","id","app","plugins","route","auth","pre","preResponses","info","orig","params","paramsArray","payload","state","jsonp","response","raw","domain","log","logs","generateResponse"]};exports=module.exports=internals.Request=class{constructor(server,req,res,options){this._allowInternals=!!options.allowInternals;this._core=server._core;this._entity=null;this._eventContext={request:this};this._events=null;this._expectContinue=!!options.expectContinue;this._isPayloadPending=!!(req.headers["content-length"]||req.headers["transfer-encoding"]);this._isReplied=false;this._route=this._core.router.specials.notFound.route;this._serverTimeoutId=null;this._states={};this._urlError=null;this.app=options.app?Object.assign({},options.app):{};this.headers=req.headers;this.info=internals.info(this._core,req);this.jsonp=null;this.logs=[];this.method=req.method.toLowerCase();this.mime=null;this.orig={};this.params=null;this.paramsArray=null;this.path=null;this.payload=null;this.plugins=options.plugins?Object.assign({},options.plugins):{};this.pre={};this.preResponses={};this.raw={req:req,res:res};this.response=null;this.route=this._route.public;this.query=null;this.server=server;this.state=null;this.url=null;this.auth={isAuthenticated:false,isAuthorized:false,credentials:options.auth?options.auth.credentials:null,artifacts:options.auth&&options.auth.artifacts||null,strategy:options.auth?options.auth.strategy:null,mode:null,error:null};if(options.auth){this.auth.isInjected=true}this._initializeUrl()}static generate(server,req,res,options){const request=new server._core.Request(server,req,res,options);if(server._core._decorations.requestApply){for(const property in server._core._decorations.requestApply){const assignment=server._core._decorations.requestApply[property];request[property]=assignment(request)}}request._listen();return request}get events(){if(!this._events){this._events=new Podium(internals.events)}return this._events}_initializeUrl(){try{this._setUrl(this.raw.req.url,this._core.settings.router.stripTrailingSlash)}catch(err){this.path=this.raw.req.url;this.query={};this._urlError=Boom.boomify(err,{statusCode:400,override:false})}}setUrl(url,stripTrailingSlash){Hoek.assert(this.params===null,"Cannot change request URL after routing");if(url instanceof Url.URL){url=url.href}Hoek.assert(typeof url==="string","Url must be a string or URL object");this._setUrl(url,stripTrailingSlash);this._urlError=null}_setUrl(url,stripTrailingSlash){const base=url[0]==="/"?`${this._core.info.protocol}://${this.info.host||`${this._core.info.host}:${this._core.info.port}`}`:"";url=new Url.URL(base+url);let path=this._core.router.normalize(url.pathname);if(stripTrailingSlash&&path.length>1&&path[path.length-1]==="/"){path=path.slice(0,-1)}url.pathname=path;this.query=this._parseQuery(url.searchParams);this.url=url;this.path=path;this.info.hostname=url.hostname;this.info.host=url.host}_parseQuery(searchParams){let query=Object.create(null);for(let[key,value]of searchParams){const entry=query[key];if(entry!==undefined){value=[].concat(entry,value)}query[key]=value}const parser=this._core.settings.query.parser;if(parser){query=parser(query);if(!query||typeof query!=="object"){throw Boom.badImplementation("Parsed query must be an object")}}return query}setMethod(method){Hoek.assert(this.params===null,"Cannot change request method after routing");Hoek.assert(method&&typeof method==="string","Missing method");this.method=method.toLowerCase()}active(){return!!this._eventContext.request}async _execute(){this.info.acceptEncoding=this._core.compression.accept(this);try{await this._onRequest()}catch(err){Bounce.rethrow(err,"system");return this._reply(err)}this._lookup();this._setTimeouts();await this._lifecycle();this._reply()}async _onRequest(){if(this._core.extensions.route.onRequest.nodes){const response=await this._invoke(this._core.extensions.route.onRequest);if(response){if(!internals.skip(response)){throw Boom.badImplementation("onRequest extension methods must return an error, a takeover response, or a continue signal")}throw response}}if(this._urlError){throw this._urlError}}_listen(){if(this._isPayloadPending){this.raw.req.on("end",internals.event.bind(this.raw.req,this._eventContext,"end"))}this.raw.req.on("close",internals.event.bind(this.raw.req,this._eventContext,"close"));this.raw.req.on("error",internals.event.bind(this.raw.req,this._eventContext,"error"));this.raw.req.on("aborted",internals.event.bind(this.raw.req,this._eventContext,"abort"))}_lookup(){const match=this._core.router.route(this.method,this.path,this.info.hostname);if(!match.route.settings.isInternal||this._allowInternals){this._route=match.route;this.route=this._route.public}this.params=match.params||{};this.paramsArray=match.paramsArray||[];if(this.route.settings.cors){this.info.cors={isOriginMatch:Cors.matchOrigin(this.headers.origin,this.route.settings.cors)}}}_setTimeouts(){if(this.raw.req.socket&&this.route.settings.timeout.socket!==undefined){this.raw.req.socket.setTimeout(this.route.settings.timeout.socket||0)}let serverTimeout=this.route.settings.timeout.server;if(!serverTimeout){return}const elapsed=Date.now()-this.info.received;serverTimeout=Math.floor(serverTimeout-elapsed);if(serverTimeout<=0){internals.timeoutReply(this,serverTimeout);return}this._serverTimeoutId=setTimeout(internals.timeoutReply,serverTimeout,this,serverTimeout)}async _lifecycle(){for(const func of this._route._cycle){if(this._isReplied||!this._eventContext.request){return}try{var response=await(typeof func==="function"?func(this):this._invoke(func))}catch(err){Bounce.rethrow(err,"system");response=Response.wrap(err,this)}if(!response||response===this._core.toolkit.continue){continue}if(!internals.skip(response)){response=Boom.badImplementation("Lifecycle methods called before the handler can only return an error, a takeover response, or a continue signal")}this._setResponse(response);return}}async _invoke(event){for(const ext of event.nodes){const realm=ext.realm;const bind=ext.bind||realm.settings.bind;const response=await this._core.toolkit.execute(ext.func,this,{bind:bind,realm:realm,timeout:ext.timeout,name:event.type});if(response===this._core.toolkit.continue){continue}if(internals.skip(response)||this.response===null){return response}this._setResponse(response)}}async _reply(exit){if(this._isReplied){return}this._isReplied=true;if(this._serverTimeoutId){clearTimeout(this._serverTimeoutId)}if(!this._eventContext.request){this._finalize();return}if(exit){this._setResponse(Response.wrap(exit,this))}if(typeof this.response==="symbol"){this._abort();return}await this._postCycle();if(!this._eventContext.request||typeof this.response==="symbol"){this._abort();return}await Transmit.send(this);this._finalize()}async _postCycle(){for(const func of this._route._postCycle){if(!this._eventContext.request){return}try{var response=await(typeof func==="function"?func(this):this._invoke(func))}catch(err){Bounce.rethrow(err,"system");response=Response.wrap(err,this)}if(response&&response!==this._core.toolkit.continue){this._setResponse(response)}}}_abort(){if(this.response===this._core.toolkit.close){this.raw.res.end()}this._finalize()}_finalize(){if(this.response&&this.response.statusCode===500&&this.response._error){const tags=this.response._error.isDeveloperError?["internal","implementation","error"]:["internal","error"];this._log(tags,this.response._error,"error")}this._eventContext.request=null;if(this.response&&this.response._close){this.response._close(this)}this.info.completed=Date.now();this._core.events.emit("response",this);this._core.queue.release()}_setResponse(response){if(this.response&&!this.response.isBoom&&this.response!==response&&(response.isBoom||this.response.source!==response.source)){this.response._close(this)}if(this.info.completed){if(response._close){response._close(this)}return}this.response=response}_setState(name,value,options){const state={name:name,value:value};if(options){Hoek.assert(!options.autoValue,"Cannot set autoValue directly in a response");state.options=Hoek.clone(options)}this._states[name]=state}_clearState(name,options={}){const state={name:name};state.options=Hoek.clone(options);state.options.ttl=0;this._states[name]=state}_tap(){if(!this._events){return null}if(this._events.hasListeners("peek")||this._events.hasListeners("finish")){return new Response.Peek(this._events)}return null}log(tags,data){return this._log(tags,data,"app")}_log(tags,data,channel="internal"){if(!this._core.events.hasListeners("request")&&!this.route.settings.log.collect){return}if(!Array.isArray(tags)){tags=[tags]}const timestamp=Date.now();const field=data instanceof Error?"error":"data";let event=[this,{request:this.info.id,timestamp:timestamp,tags:tags,[field]:data,channel:channel}];if(typeof data==="function"){event=()=>[this,{request:this.info.id,timestamp:timestamp,tags:tags,data:data(),channel:channel}]}if(this.route.settings.log.collect){if(typeof data==="function"){event=event()}this.logs.push(event[1])}this._core.events.emit({name:"request",channel:channel,tags:tags},event)}generateResponse(source,options){return new Response(source,this,options)}};internals.Request.reserved=internals.reserved;internals.info=function(core,req){const host=req.headers.host?req.headers.host.trim():"";const received=Date.now();const info={received:received,remoteAddress:req.connection.remoteAddress,remotePort:req.connection.remotePort||"",referrer:req.headers.referrer||req.headers.referer||"",host:host,hostname:host.split(":")[0],id:`${received}:${core.info.id}:${core.requestCounter.value++}`,acceptEncoding:null,cors:null,responded:0,completed:0};if(core.requestCounter.value>core.requestCounter.max){core.requestCounter.value=core.requestCounter.min}return info};internals.event=function({request},event,err){if(!request){return}request._isPayloadPending=false;if(event==="close"&&request.raw.res.finished){return}if(event==="end"){return}request._log(err?["request","error"]:["request","error",event],err);if(event==="error"){return}request._eventContext.request=null;if(event==="abort"&&request._events){request._events.emit("disconnect")}};internals.timeoutReply=function(request,timeout){const elapsed=Date.now()-request.info.received;request._log(["request","server","timeout","error"],{timeout:timeout,elapsed:elapsed});request._reply(Boom.serverUnavailable())};internals.skip=function(response){return response.isBoom||response._takeover||typeof response==="symbol"}},{"./cors":64,"./response":71,"./transmit":77,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/hoek":128,"@hapi/podium":170,url:undefined}],71:[function(require,module,exports){"use strict";const Stream=require("stream");const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const Podium=require("@hapi/podium");const Streams=require("./streams");const internals={events:Podium.validate(["finish",{name:"peek",spread:true}]),hopByHop:{connection:true,"keep-alive":true,"proxy-authenticate":true,"proxy-authorization":true,te:true,trailer:true,"transfer-encoding":true,upgrade:true}};exports=module.exports=internals.Response=class{constructor(source,request,options={}){this.app={};this.headers={};this.plugins={};this.request=request;this.source=null;this.statusCode=null;this.variety=null;this.settings={charset:"utf-8",compressed:null,encoding:"utf8",message:null,passThrough:true,stringify:null,ttl:null,varyEtag:false};this._events=null;this._payload=null;this._error=null;this._contentType=null;this._takeover=false;this._statusCode=false;this._processors={marshal:options.marshal,prepare:options.prepare,close:options.close};this.temporary=null;this.permanent=null;this.rewritable=null;this._setSource(source,options.variety)}static wrap(result,request){if(result instanceof internals.Response||typeof result==="symbol"){return result}if(result instanceof Error){return Boom.boomify(result)}return new internals.Response(result,request)}_setSource(source,variety){this.variety=variety||"plain";if(source===null||source===undefined){source=null}else if(Buffer.isBuffer(source)){this.variety="buffer";this._contentType="application/octet-stream"}else if(Streams.isStream(source)){this.variety="stream";this._contentType="application/octet-stream"}this.source=source;if(this.variety==="plain"&&this.source!==null){this._contentType=typeof this.source==="string"?"text/html":"application/json"}}get events(){if(!this._events){this._events=new Podium(internals.events)}return this._events}code(statusCode){Hoek.assert(Number.isSafeInteger(statusCode),"Status code must be an integer");this.statusCode=statusCode;this._statusCode=true;return this}message(httpMessage){this.settings.message=httpMessage;return this}header(key,value,options){key=key.toLowerCase();if(key==="vary"){return this.vary(value)}return this._header(key,value,options)}_header(key,value,options={}){const append=options.append||false;const separator=options.separator||",";const override=options.override!==false;const duplicate=options.duplicate!==false;if(!append&&override||!this.headers[key]){this.headers[key]=value}else if(override){if(key==="set-cookie"){this.headers[key]=[].concat(this.headers[key],value)}else{const existing=this.headers[key];if(!duplicate){const values=existing.split(separator);for(const v of values){if(v===value){return this}}}this.headers[key]=existing+separator+value}}return this}vary(value){if(value==="*"){this.headers.vary="*"}else if(!this.headers.vary){this.headers.vary=value}else if(this.headers.vary!=="*"){this._header("vary",value,{append:true,duplicate:false})}return this}etag(tag,options){const entity=internals.Response.entity(tag,options);this._header("etag",entity.etag);this.settings.varyEtag=entity.vary;return this}static entity(tag,options={}){Hoek.assert(tag!=="*","ETag cannot be *");return{etag:(options.weak?"W/":"")+'"'+tag+'"',vary:options.vary!==false&&!options.weak,modified:options.modified}}static unmodified(request,entity){if(request.method!=="get"&&request.method!=="head"){return false}if(entity.etag&&request.headers["if-none-match"]){const ifNoneMatch=request.headers["if-none-match"].split(/\s*,\s*/);for(const etag of ifNoneMatch){if(etag===entity.etag){return true}if(!entity.vary){continue}if(etag===`W/${entity.etag}`){return etag}const etagBase=entity.etag.slice(0,-1);const encoders=request._core.compression.encodings;for(const encoder of encoders){if(etag===etagBase+`-${encoder}"`){return true}}}return false}if(!entity.modified){return false}const ifModifiedSinceHeader=request.headers["if-modified-since"];if(!ifModifiedSinceHeader){return false}const ifModifiedSince=internals.parseDate(ifModifiedSinceHeader);if(!ifModifiedSince){return false}const lastModified=internals.parseDate(entity.modified);if(!lastModified){return false}return ifModifiedSince>=lastModified}type(type){this._header("content-type",type);return this}bytes(bytes){this._header("content-length",bytes);return this}location(uri){this._header("location",uri);return this}created(location){Hoek.assert(this.request.method==="post"||this.request.method==="put"||this.request.method==="patch","Cannot return 201 status codes for "+this.request.method.toUpperCase());this.statusCode=201;this.location(location);return this}compressed(encoding){Hoek.assert(encoding&&typeof encoding==="string","Invalid content-encoding");this.settings.compressed=encoding;return this}replacer(method){this.settings.stringify=this.settings.stringify||{};this.settings.stringify.replacer=method;return this}spaces(count){this.settings.stringify=this.settings.stringify||{};this.settings.stringify.space=count;return this}suffix(suffix){this.settings.stringify=this.settings.stringify||{};this.settings.stringify.suffix=suffix;return this}escape(escape){this.settings.stringify=this.settings.stringify||{};this.settings.stringify.escape=escape;return this}passThrough(enabled){this.settings.passThrough=enabled!==false;return this}redirect(location){this.statusCode=302;this.location(location);this.temporary=this._temporary;this.permanent=this._permanent;this.rewritable=this._rewritable;return this}_temporary(isTemporary){this._setTemporary(isTemporary!==false);return this}_permanent(isPermanent){this._setTemporary(isPermanent===false);return this}_rewritable(isRewritable){this._setRewritable(isRewritable!==false);return this}_isTemporary(){return this.statusCode===302||this.statusCode===307}_isRewritable(){return this.statusCode===301||this.statusCode===302}_setTemporary(isTemporary){if(isTemporary){if(this._isRewritable()){this.statusCode=302}else{this.statusCode=307}}else{if(this._isRewritable()){this.statusCode=301}else{this.statusCode=308}}}_setRewritable(isRewritable){if(isRewritable){if(this._isTemporary()){this.statusCode=302}else{this.statusCode=301}}else{if(this._isTemporary()){this.statusCode=307}else{this.statusCode=308}}}encoding(encoding){this.settings.encoding=encoding;return this}charset(charset){this.settings.charset=charset||null;return this}ttl(ttl){this.settings.ttl=ttl;return this}state(name,value,options){this.request._setState(name,value,options);return this}unstate(name,options){this.request._clearState(name,options);return this}takeover(){this._takeover=true;return this}_prepare(){this._passThrough();if(!this._processors.prepare){return this}try{return this._processors.prepare(this)}catch(err){throw Boom.boomify(err)}}_passThrough(){if(this.variety==="stream"&&this.settings.passThrough){if(this.source.statusCode&&!this.statusCode){this.statusCode=this.source.statusCode}if(this.source.headers){let headerKeys=Object.keys(this.source.headers);if(headerKeys.length){const localHeaders=this.headers;this.headers={};const connection=this.source.headers.connection;const byHop={};if(connection){connection.split(/\s*,\s*/).forEach(header=>{byHop[header]=true})}for(const key of headerKeys){const lower=key.toLowerCase();if(!internals.hopByHop[lower]&&!byHop[lower]){this.header(lower,Hoek.clone(this.source.headers[key]))}}headerKeys=Object.keys(localHeaders);for(const key of headerKeys){this.header(key,localHeaders[key],{append:key==="set-cookie"})}}}}this.statusCode=this.statusCode||200}async _marshal(){let source=this.source;if(this._processors.marshal){try{source=await this._processors.marshal(this)}catch(err){throw Boom.boomify(err)}}if(Streams.isStream(source)){if(typeof source._read!=="function"){throw Boom.badImplementation("Stream must have a readable interface")}if(source._readableState.objectMode){throw Boom.badImplementation("Cannot reply with stream in object mode")}this._payload=source;return}const jsonify=this.variety==="plain"&&source!==null&&typeof source!=="string";if(!jsonify&&this.settings.stringify){throw Boom.badImplementation("Cannot set formatting options on non object response")}let payload=source;if(jsonify){const options=this.settings.stringify||{};const space=options.space||this.request.route.settings.json.space;const replacer=options.replacer||this.request.route.settings.json.replacer;const suffix=options.suffix||this.request.route.settings.json.suffix||"";const escape=this.request.route.settings.json.escape||false;try{if(replacer||space){payload=JSON.stringify(payload,replacer,space)}else{payload=JSON.stringify(payload)}}catch(err){throw Boom.boomify(err)}if(suffix){payload=payload+suffix}if(escape){payload=Hoek.escapeJson(payload)}}this._payload=new internals.Response.Payload(payload,this.settings)}_tap(){if(!this._events){return null}if(this._events.hasListeners("peek")||this._events.hasListeners("finish")){return new internals.Response.Peek(this._events)}return null}_close(request){if(this._processors.close){try{this._processors.close(this)}catch(err){Bounce.rethrow(err,"system");request._log(["response","cleanup","error"],err)}}const stream=this._payload||this.source;if(Streams.isStream(stream)){internals.Response.drain(stream)}}_isPayloadSupported(){return this.request.method!=="head"&&this.statusCode!==304&&this.statusCode!==204}static drain(stream){if(stream.unpipe){stream.unpipe()}if(stream.close){stream.close()}else if(stream.destroy){stream.destroy()}else{Streams.drain(stream)}}};internals.parseDate=function(string){try{return Date.parse(string)}catch(errIgnore){}};internals.Response.Payload=class extends Stream.Readable{constructor(payload,options){super();this._data=payload;this._prefix=null;this._suffix=null;this._sizeOffset=0;this._encoding=options.encoding}_read(size){if(this._prefix){this.push(this._prefix,this._encoding)}if(this._data){this.push(this._data,this._encoding)}if(this._suffix){this.push(this._suffix,this._encoding)}this.push(null)}size(){if(!this._data){return this._sizeOffset}return(Buffer.isBuffer(this._data)?this._data.length:Buffer.byteLength(this._data,this._encoding))+this._sizeOffset}jsonp(variable){this._sizeOffset=this._sizeOffset+variable.length+7;this._prefix="/**/"+variable+"(";this._data=this._data===null||Buffer.isBuffer(this._data)?this._data:this._data.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029");this._suffix=");"}writeToStream(stream){if(this._prefix){stream.write(this._prefix,this._encoding)}if(this._data){stream.write(this._data,this._encoding)}if(this._suffix){stream.write(this._suffix,this._encoding)}stream.end()}};internals.Response.Peek=class extends Stream.Transform{constructor(podium){super();this._podium=podium;this.on("finish",()=>podium.emit("finish"))}_transform(chunk,encoding,callback){this._podium.emit("peek",[chunk,encoding]);this.push(chunk,encoding);callback()}}},{"./streams":75,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/hoek":128,"@hapi/podium":170,stream:undefined}],72:[function(require,module,exports){"use strict";const Assert=require("assert");const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Catbox=require("@hapi/catbox");const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const Subtext=require("@hapi/subtext");const Auth=require("./auth");const Config=require("./config");const Cors=require("./cors");const Ext=require("./ext");const Handler=require("./handler");const Headers=require("./headers");const Security=require("./security");const Streams=require("./streams");const Validation=require("./validation");const internals={};exports=module.exports=internals.Route=class{constructor(route,server,options={}){const core=server._core;const realm=server.realm;Config.apply("route",route,route.method,route.path);const method=route.method.toLowerCase();Hoek.assert(method!=="head","Cannot set HEAD route:",route.path);const path=realm.modifiers.route.prefix?realm.modifiers.route.prefix+(route.path!=="/"?route.path:""):route.path;Hoek.assert(path==="/"||path[path.length-1]!=="/"||!core.settings.router.stripTrailingSlash,"Path cannot end with a trailing slash when configured to strip:",route.method,route.path);const vhost=realm.modifiers.route.vhost||route.vhost;this.method=method;this.path=path;let config=route.options||route.config||{};if(typeof config==="function"){config=config.call(realm.settings.bind,server)}config=Config.enable(config);this._assert(method!=="get"||!config.payload,"Cannot set payload settings on HEAD or GET request");this._assert(method!=="get"||!config.validate||!config.validate.payload,"Cannot validate HEAD or GET request payload");this._assert(!route.rules||!config.rules,"Route rules can only appear once");const rules=route.rules||config.rules;const rulesConfig=internals.rules(rules,{method:method,path:path,vhost:vhost},server);delete config.rules;this._assert(route.handler||config.handler,"Missing or undefined handler");this._assert(!!route.handler^!!config.handler,"Handler must only appear once");const handler=Config.apply("handler",route.handler||config.handler);delete config.handler;const handlerDefaults=Handler.defaults(method,handler,core);const settings=internals.config([core.settings.routes,handlerDefaults,realm.settings,rulesConfig,config]);this.settings=Config.apply("routeConfig",settings,method,path);const socketTimeout=this.settings.timeout.socket===undefined?2*60*1e3:this.settings.timeout.socket;this._assert(!this.settings.timeout.server||!socketTimeout||this.settings.timeout.server<socketTimeout,"Server timeout must be shorter than socket timeout");this._assert(!this.settings.payload.timeout||!socketTimeout||this.settings.payload.timeout<socketTimeout,"Payload timeout must be shorter than socket timeout");this._core=core;this.realm=realm;this.settings.vhost=vhost;this.settings.plugins=this.settings.plugins||{};this.settings.app=this.settings.app||{};this._special=!!options.special;this._analysis=this._core.router.analyze(this.path);this.params=this._analysis.params;this.fingerprint=this._analysis.fingerprint;this.public={method:this.method,path:this.path,vhost:vhost,realm:realm,settings:this.settings,fingerprint:this.fingerprint,auth:{access:request=>Auth.testAccess(request,this.public)}};this._setupValidation();if(this.method==="get"){this.settings.payload=null}else{this.settings.payload.decoders=this._core.compression._decoders}this._assert(!this.settings.validate.payload||this.settings.payload.parse,"Route payload must be set to 'parse' when payload validation enabled");this._assert(!this.settings.validate.state||this.settings.state.parse,"Route state must be set to 'parse' when state validation enabled");this._assert(!this.settings.jsonp||typeof this.settings.jsonp==="string","Bad route JSONP parameter name");this.settings.auth=this._special?false:this._core.auth._setupRoute(this.settings.auth,path);if(this.method==="get"&&typeof this.settings.cache==="object"&&(this.settings.cache.expiresIn||this.settings.cache.expiresAt)){this.settings.cache._statuses=new Set(this.settings.cache.statuses);this._cache=new Catbox.Policy({expiresIn:this.settings.cache.expiresIn,expiresAt:this.settings.cache.expiresAt})}this.settings.cors=Cors.route(this.settings.cors);this.settings.security=Security.route(this.settings.security);this.settings.handler=Handler.configure(handler,this);this._prerequisites=Handler.prerequisitesConfig(this.settings.pre);this._extensions={onPreResponse:Ext.combine(this,"onPreResponse")};if(this._special){this._cycle=[internals.drain,Handler.execute];this.rebuild();return}this._extensions.onPreAuth=Ext.combine(this,"onPreAuth");this._extensions.onCredentials=Ext.combine(this,"onCredentials");this._extensions.onPostAuth=Ext.combine(this,"onPostAuth");this._extensions.onPreHandler=Ext.combine(this,"onPreHandler");this._extensions.onPostHandler=Ext.combine(this,"onPostHandler");this.rebuild()}_setupValidation(){const validation=this.settings.validate;if(this.method==="get"){validation.payload=null}this._assert(!validation.params||this.params.length,"Cannot set path parameters validations without path parameters");["headers","params","query","payload","state"].forEach(type=>{validation[type]=Validation.compile(validation[type])});if(this.settings.response.schema!==undefined||this.settings.response.status){this.settings.response._validate=true;const rule=this.settings.response.schema;this.settings.response.status=this.settings.response.status||{};const statuses=Object.keys(this.settings.response.status);if(rule===true&&!statuses.length){this.settings.response._validate=false}else{this.settings.response.schema=Validation.compile(rule);for(const code of statuses){this.settings.response.status[code]=Validation.compile(this.settings.response.status[code])}}}}rebuild(event){if(event){this._extensions[event.type].add(event)}if(this._special){this._postCycle=this._extensions.onPreResponse.nodes?[this._extensions.onPreResponse]:[];this._buildMarshalCycle();return}this._cycle=[];if(this.settings.jsonp){this._cycle.push(internals.parseJSONP)}if(this.settings.state.parse){this._cycle.push(internals.state)}if(this._extensions.onPreAuth.nodes){this._cycle.push(this._extensions.onPreAuth)}if(this._core.auth._enabled(this,"authenticate")){this._cycle.push(Auth.authenticate)}if(this.method!=="get"){this._cycle.push(internals.payload);if(this._core.auth._enabled(this,"payload")){this._cycle.push(Auth.payload)}}if(this._core.auth._enabled(this,"authenticate")&&this._extensions.onCredentials.nodes){this._cycle.push(this._extensions.onCredentials)}if(this._core.auth._enabled(this,"access")){this._cycle.push(Auth.access)}if(this._extensions.onPostAuth.nodes){this._cycle.push(this._extensions.onPostAuth)}if(this.settings.validate.headers){this._cycle.push(Validation.headers)}if(this.settings.validate.params){this._cycle.push(Validation.params)}if(this.settings.jsonp){this._cycle.push(internals.cleanupJSONP)}if(this.settings.validate.query){this._cycle.push(Validation.query)}if(this.settings.validate.payload){this._cycle.push(Validation.payload)}if(this.settings.validate.state){this._cycle.push(Validation.state)}if(this._extensions.onPreHandler.nodes){this._cycle.push(this._extensions.onPreHandler)}this._cycle.push(Handler.execute);if(this._extensions.onPostHandler.nodes){this._cycle.push(this._extensions.onPostHandler)}this._postCycle=[];if(this.settings.response._validate&&this.settings.response.sample!==0){this._postCycle.push(Validation.response)}if(this._extensions.onPreResponse.nodes){this._postCycle.push(this._extensions.onPreResponse)}this._buildMarshalCycle()}_buildMarshalCycle(){this._marshalCycle=[Headers.type];if(this.settings.cors){this._marshalCycle.push(Cors.headers)}if(this.settings.security){this._marshalCycle.push(Security.headers)}this._marshalCycle.push(Headers.entity);if(this.method==="get"||this.method==="*"){this._marshalCycle.push(Headers.unmodified)}this._marshalCycle.push(Headers.cache);this._marshalCycle.push(Headers.state);this._marshalCycle.push(Headers.content);if(this._core.auth._enabled(this,"response")){this._marshalCycle.push(Auth.response)}}_assert(condition,message){if(condition){return}if(this.method[0]!=="_"){message=`${message}: ${this.method.toUpperCase()} ${this.path}`}throw new Assert.AssertionError({message:message,actual:false,expected:true,operator:"==",stackStartFunction:this._assert})}};internals.state=async function(request){request.state={};const req=request.raw.req;const cookies=req.headers.cookie;if(!cookies){return}try{var result=await request._core.states.parse(cookies)}catch(err){Bounce.rethrow(err,"system");var parseError=err}const{states,failed:failed=[]}=result||parseError;request.state=states||{};for(const item of failed){if(item.settings.clearInvalid){request._clearState(item.name)}}if(!parseError){return}parseError.header=cookies;return request._core.toolkit.failAction(request,request.route.settings.state.failAction,parseError,{tags:["state","error"]})};internals.payload=async function(request){if(request.method==="get"||request.method==="head"){return}if(request._expectContinue){request.raw.res.writeContinue()}try{const{payload,mime}=await Subtext.parse(request.raw.req,request._tap(),request.route.settings.payload);request._isPayloadPending=!!(payload&&payload._readableState);request.mime=mime;request.payload=payload}catch(err){Bounce.rethrow(err,"system");if(request._isPayloadPending){await internals.drain(request);request._isPayloadPending=false}else{request._isPayloadPending=true}request.mime=err.mime;request.payload=null;return request._core.toolkit.failAction(request,request.route.settings.payload.failAction,err,{tags:["payload","error"]})}};internals.drain=async function(request){await Streams.drain(request.raw.req);request._isPayloadPending=false};internals.jsonpRegex=/^[\w\$\[\]\.]+$/;internals.parseJSONP=function(request){const jsonp=request.query[request.route.settings.jsonp];if(jsonp){if(internals.jsonpRegex.test(jsonp)===false){throw Boom.badRequest("Invalid JSONP parameter value")}request.jsonp=jsonp}};internals.cleanupJSONP=function(request){if(request.jsonp){delete request.query[request.route.settings.jsonp]}};internals.config=function(chain){if(!chain.length){return{}}let config=chain[0];for(const item of chain){config=Hoek.applyToDefaults(config,item,{shallow:["bind","validate.headers","validate.payload","validate.params","validate.query","validate.state"]})}return config};internals.rules=function(rules,info,server){const configs=[];let realm=server.realm;while(realm){if(realm._rules){const source=!realm._rules.settings.validate?rules:Joi.attempt(rules,realm._rules.settings.validate.schema,realm._rules.settings.validate.options);const config=realm._rules.processor(source,info);if(config){configs.unshift(config)}}realm=realm.parent}return internals.config(configs)}},{"./auth":60,"./config":62,"./cors":64,"./ext":65,"./handler":66,"./headers":67,"./security":73,"./streams":75,"./validation":78,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/catbox":20,"@hapi/hoek":128,"@hapi/joi":142,"@hapi/subtext":276,assert:undefined}],73:[function(require,module,exports){"use strict";const internals={};exports.route=function(settings){if(!settings){return null}const security=settings;if(security.hsts){if(security.hsts===true){security._hsts="max-age=15768000"}else if(typeof security.hsts==="number"){security._hsts="max-age="+security.hsts}else{security._hsts="max-age="+(security.hsts.maxAge||15768e3);if(security.hsts.includeSubdomains||security.hsts.includeSubDomains){security._hsts=security._hsts+"; includeSubDomains"}if(security.hsts.preload){security._hsts=security._hsts+"; preload"}}}if(security.xframe){if(security.xframe===true){security._xframe="DENY"}else if(typeof security.xframe==="string"){security._xframe=security.xframe.toUpperCase()}else if(security.xframe.rule==="allow-from"){if(!security.xframe.source){security._xframe="SAMEORIGIN"}else{security._xframe="ALLOW-FROM "+security.xframe.source}}else{security._xframe=security.xframe.rule.toUpperCase()}}return security};exports.headers=function(request){const response=request.response;const security=response.request.route.settings.security;if(security._hsts){response._header("strict-transport-security",security._hsts,{override:false})}if(security._xframe){response._header("x-frame-options",security._xframe,{override:false})}if(security.xss){response._header("x-xss-protection","1; mode=block",{override:false})}if(security.noOpen){response._header("x-download-options","noopen",{override:false})}if(security.noSniff){response._header("x-content-type-options","nosniff",{override:false})}if(security.referrer!==false){response._header("referrer-policy",security.referrer,{override:false})}}},{}],74:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const Shot=require("@hapi/shot");const Somever=require("@hapi/somever");const Config=require("./config");const Core=require("./core");const Cors=require("./cors");const Ext=require("./ext");const Package=require("../package.json");const Request=require("./request");const Route=require("./route");const internals={};exports=module.exports=function(options){const core=new Core(options);return new internals.Server(core)};internals.Server=class{constructor(core,name,parent){this._core=core;this.app=core.app;this.auth=Object.create(this._core.auth);this.auth.strategy=this.auth._strategy.bind(this.auth,this);this.decorations=core.decorations;this.cache=internals.cache(this);this.events=core.events;this.info=core.info;this.listener=core.listener;this.load=core.heavy.load;this.methods=core.methods.methods;this.mime=core.mime;this.plugins=core.plugins;this.registrations=core.registrations;this.settings=core.settings;this.states=core.states;this.type=core.type;this.version=Package.version;this.realm={_extensions:{onPreAuth:new Ext("onPreAuth",core),onCredentials:new Ext("onCredentials",core),onPostAuth:new Ext("onPostAuth",core),onPreHandler:new Ext("onPreHandler",core),onPostHandler:new Ext("onPostHandler",core),onPreResponse:new Ext("onPreResponse",core)},modifiers:{route:{}},parent:parent?parent.realm:null,plugin:name,pluginOptions:{},plugins:{},_rules:null,settings:{bind:undefined,files:{relativeTo:undefined}}};for(const method of core.decorations.server){this[method]=core._decorations.server[method]}core.registerServer(this)}_clone(name){return new internals.Server(this._core,name,this)}bind(context){Hoek.assert(typeof context==="object","bind must be an object");this.realm.settings.bind=context}control(server){Hoek.assert(server instanceof internals.Server,"Can only control Server objects");this._core.controlled=this._core.controlled||[];this._core.controlled.push(server)}decoder(encoding,decoder){return this._core.compression.addDecoder(encoding,decoder)}decorate(type,property,method,options={}){Hoek.assert(this._core.decorations[type],"Unknown decoration type:",type);Hoek.assert(property,"Missing decoration property name");Hoek.assert(typeof property==="string"||typeof property==="symbol","Decoration property must be a string or a symbol");const propertyName=property.toString();Hoek.assert(propertyName[0]!=="_","Property name cannot begin with an underscore:",propertyName);const existing=this._core._decorations[type][property];if(options.extend){Hoek.assert(type!=="handler","Cannot extent handler decoration:",propertyName);Hoek.assert(existing,`Cannot extend missing ${type} decoration: ${propertyName}`);Hoek.assert(typeof method==="function",`Extended ${type} decoration method must be a function: ${propertyName}`);method=method(existing)}else{Hoek.assert(existing===undefined,`${type[0].toUpperCase()+type.slice(1)} decoration already defined: ${propertyName}`)}if(type==="handler"){Hoek.assert(typeof method==="function","Handler must be a function:",propertyName);Hoek.assert(!method.defaults||typeof method.defaults==="object"||typeof method.defaults==="function","Handler defaults property must be an object or function");Hoek.assert(!options.extend,"Cannot extend handler decoration:",propertyName)}else if(type==="request"){Hoek.assert(Request.reserved.indexOf(property)===-1,"Cannot override built-in request interface decoration:",propertyName);if(options.apply){this._core._decorations.requestApply=this._core._decorations.requestApply||{};this._core._decorations.requestApply[property]=method}else{this._core.Request.prototype[property]=method}}else if(type==="toolkit"){Hoek.assert(this._core.toolkit.reserved.indexOf(property)===-1,"Cannot override built-in toolkit decoration:",propertyName)}else{if(typeof property==="string"){Hoek.assert(Object.getOwnPropertyNames(internals.Server.prototype).indexOf(property)===-1,"Cannot override the built-in server interface method:",propertyName)}else{Hoek.assert(Object.getOwnPropertySymbols(internals.Server.prototype).indexOf(property)===-1,"Cannot override the built-in server interface method:",propertyName)}this._core.instances.forEach(server=>{server[property]=method})}this._core._decorations[type][property]=method;this._core.decorations[type].push(property)}dependency(dependencies,after){Hoek.assert(this.realm.plugin,"Cannot call dependency() outside of a plugin");Hoek.assert(!after||typeof after==="function","Invalid after method");if(typeof dependencies==="string"){dependencies={[dependencies]:"*"}}else if(Array.isArray(dependencies)){const map={};for(const dependency of dependencies){map[dependency]="*"}dependencies=map}this._core.dependencies.push({plugin:this.realm.plugin,deps:dependencies});if(after){this.ext("onPreStart",after,{after:Object.keys(dependencies)})}}encoder(encoding,encoder){return this._core.compression.addEncoder(encoding,encoder)}event(event){this._core.events.registerEvent(event)}expose(key,value){Hoek.assert(this.realm.plugin,"Cannot call expose() outside of a plugin");const plugin=this.realm.plugin;this._core.plugins[plugin]=this._core.plugins[plugin]||{};if(typeof key==="string"){this._core.plugins[plugin][key]=value}else{Hoek.merge(this._core.plugins[plugin],key)}}ext(events,method,options){if(typeof events==="string"){events={type:events,method:method,options:options}}events=Config.apply("exts",events);for(const event of events){this._ext(event)}}_ext(event){event=Object.assign({},event);event.realm=this.realm;const type=event.type;if(!this._core.extensions.server[type]){if(event.options.sandbox==="plugin"){Hoek.assert(this.realm._extensions[type],"Unknown event type",type);return this.realm._extensions[type].add(event)}Hoek.assert(this._core.extensions.route[type],"Unknown event type",type);return this._core.extensions.route[type].add(event)}Hoek.assert(!event.options.sandbox,"Cannot specify sandbox option for server extension");Hoek.assert(type!=="onPreStart"||this._core.phase==="stopped","Cannot add onPreStart (after) extension after the server was initialized");event.server=this;this._core.extensions.server[type].add(event)}async inject(options){let settings=options;if(typeof settings==="string"){settings={url:settings}}if(!settings.authority||settings.auth||settings.app||settings.plugins||settings.allowInternals!==undefined){settings=Object.assign({},settings);delete settings.auth;delete settings.app;delete settings.plugins;delete settings.allowInternals;settings.authority=settings.authority||this._core.info.host+":"+this._core.info.port}Hoek.assert(!options.credentials,"options.credentials no longer supported (use options.auth)");if(options.auth){Hoek.assert(typeof options.auth==="object","options.auth must be an object");Hoek.assert(options.auth.credentials,"options.auth.credentials is missing");Hoek.assert(options.auth.strategy,"options.auth.strategy is missing")}const needle=this._core._dispatch({auth:options.auth,allowInternals:options.allowInternals,app:options.app,plugins:options.plugins});const res=await Shot.inject(needle,settings);const custom=res.raw.res[Config.symbol];if(custom){res.result=custom.result;res.request=custom.request;delete res.raw.res[Config.symbol]}if(res.result===undefined){res.result=res.payload}return res}log(tags,data){return this._core.log(tags,data)}lookup(id){Hoek.assert(id&&typeof id==="string","Invalid route id:",id);const record=this._core.router.ids[id];if(!record){return null}return record.route.public}match(method,path,host){Hoek.assert(method&&typeof method==="string","Invalid method:",method);Hoek.assert(path&&typeof path==="string"&&path[0]==="/","Invalid path:",path);Hoek.assert(!host||typeof host==="string","Invalid host:",host);const match=this._core.router.route(method.toLowerCase(),path,host);Hoek.assert(match!==this._core.router.specials.badRequest,"Invalid path:",path);if(match===this._core.router.specials.notFound){return null}return match.route.public}method(name,method,options={}){return this._core.methods.add(name,method,options,this.realm)}path(relativeTo){Hoek.assert(relativeTo&&typeof relativeTo==="string","relativeTo must be a non-empty string");this.realm.settings.files.relativeTo=relativeTo}async register(plugins,options={}){if(this.realm.modifiers.route.prefix||this.realm.modifiers.route.vhost){options=Hoek.clone(options);options.routes=options.routes||{};options.routes.prefix=(this.realm.modifiers.route.prefix||"")+(options.routes.prefix||"")||undefined;options.routes.vhost=this.realm.modifiers.route.vhost||options.routes.vhost}options=Config.apply("register",options);++this._core.registring;try{const items=[].concat(plugins);for(let item of items){if(!item.plugin){item={plugin:item}}else if(!item.plugin.register){item={options:item.options,once:item.once,routes:item.routes,plugin:item.plugin.plugin}}else if(typeof item==="function"){item=Object.assign({},item)}item=Config.apply("plugin",item);const name=item.plugin.name||item.plugin.pkg.name;const clone=this._clone(name);clone.realm.modifiers.route.prefix=item.routes.prefix||options.routes.prefix;clone.realm.modifiers.route.vhost=item.routes.vhost||options.routes.vhost;clone.realm.pluginOptions=item.options||{};const requirements=item.plugin.requirements;Hoek.assert(!requirements.node||Somever.match(process.version,requirements.node),"Plugin",name,"requires node version",requirements.node,"but found",process.version);Hoek.assert(!requirements.hapi||Somever.match(this.version,requirements.hapi),"Plugin",name,"requires hapi version",requirements.hapi,"but found",this.version);if(this._core.registrations[name]){if(item.plugin.once||item.once||options.once){continue}Hoek.assert(item.plugin.multiple,"Plugin",name,"already registered")}else{this._core.registrations[name]={version:item.plugin.version||item.plugin.pkg.version,name:name,options:item.options}}if(item.plugin.dependencies){clone.dependency(item.plugin.dependencies)}await item.plugin.register(clone,item.options||{})}}catch(err){throw err}finally{--this._core.registring}}route(options){Hoek.assert(typeof options==="object","Invalid route options");options=[].concat(options);for(const config of options){if(Array.isArray(config.method)){for(const method of config.method){const settings=Object.assign({},config);settings.method=method;this._addRoute(settings,this)}}else{this._addRoute(config,this)}}}_addRoute(config,server){const route=new Route(config,server);const vhosts=[].concat(route.settings.vhost||"*");for(const vhost of vhosts){const record=this._core.router.add({method:route.method,path:route.path,vhost:vhost,analysis:route._analysis,id:route.settings.id},route);route.fingerprint=record.fingerprint;route.params=record.params}this.events.emit("route",route.public);Cors.options(route.public,server)}rules(processor,options={}){Hoek.assert(!this.realm._rules,"Server realm rules already defined");const settings=Config.apply("rules",options);if(settings.validate){const schema=settings.validate.schema;settings.validate.schema=Joi.compile(schema)}this.realm._rules={processor:processor,settings:settings}}state(name,options){this.states.add(name,options)}table(host){return this._core.router.table(host)}start(){return this._core._start()}initialize(){return this._core._initialize()}stop(options){return this._core._stop(options)}};internals.cache=plugin=>{const policy=function(options,_segment){return this._core._cachePolicy(options,_segment,plugin.realm)};policy.provision=async opts=>{const clients=plugin._core._createCache(opts);if(["initialized","starting","started"].indexOf(plugin._core.phase)!==-1){await Promise.all(clients.map(client=>client.start()))}};return policy}},{"../package.json":79,"./config":62,"./core":63,"./cors":64,"./ext":65,"./request":70,"./route":72,"@hapi/hoek":128,"@hapi/joi":142,"@hapi/shot":204,"@hapi/somever":241}],75:[function(require,module,exports){"use strict";const Teamwork=require("@hapi/teamwork");const internals={team:Symbol("team")};exports.isStream=function(stream){return stream&&typeof stream==="object"&&typeof stream.pipe==="function"};exports.drain=function(stream){const team=new Teamwork;stream[internals.team]=team;stream.on("readable",internals.read);stream.on("error",internals.end);stream.on("end",internals.end);stream.on("close",internals.end);return team.work};internals.read=function(){while(this.read()){}};internals.end=function(){this.removeListener("readable",internals.read);this.removeListener("error",internals.end);this.removeListener("end",internals.end);this.removeListener("close",internals.end);this[internals.team].attend()}},{"@hapi/teamwork":277}],76:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const Response=require("./response");const internals={reserved:["abandon","authenticated","close","context","continue","entity","redirect","realm","request","response","state","unauthenticated","unstate"]};exports=module.exports=internals.Manager=class{constructor(){this.abandon=Symbol("abandon");this.close=Symbol("close");this.continue=Symbol("continue");this.reserved=internals.reserved}async execute(method,request,options){const h=new internals.Toolkit(request,this,options);const bind=options.bind||null;try{let operation;if(bind){operation=method.call(bind,request,h)}else{if(options.args){operation=method(request,h,...options.args)}else{operation=method(request,h)}}var response=await internals.Manager.timed(operation,options)}catch(err){if(Bounce.isSystem(err)){response=Boom.badImplementation(err)}else if(!Bounce.isError(err)){response=Boom.badImplementation("Cannot throw non-error object",err)}else{response=Boom.boomify(err)}}if(response===undefined){response=Boom.badImplementation(`${method.name} method did not return a value, a promise, or throw an error`)}if(options.continue&&response===this.continue){if(options.continue==="undefined"){return}response=null}if(options.auth&&response instanceof internals.Auth){return response}if(typeof response!=="symbol"){response=Response.wrap(response,request);if(!response.isBoom){response=await response._prepare()}}return response}failAction(request,failAction,err,options){const retain=options.retain?err:undefined;if(failAction==="ignore"){return retain}if(failAction==="log"){request._log(options.tags,err);return retain}if(failAction==="error"){throw err}return this.execute(failAction,request,{realm:request.route.realm,args:[options.details||err]})}static timed(method,options){if(!options.timeout){return method}const timer=new Promise((resolve,reject)=>{const handler=()=>{reject(Boom.internal(`${options.name} timed out`))};setTimeout(handler,options.timeout)});return Promise.race([timer,method])}};internals.Toolkit=class{constructor(request,manager,options){this.abandon=manager.abandon;this.close=manager.close;this.continue=manager.continue;this.context=options.bind;this.realm=options.realm;this.request=request;if(options.auth){this.authenticated=internals.authenticated;this.unauthenticated=internals.unauthenticated}for(const method of request._core.decorations.toolkit){this[method]=request._core._decorations.toolkit[method]}}response(result){Hoek.assert(!result||typeof result!=="object"||typeof result.then!=="function","Cannot wrap a promise");Hoek.assert(result instanceof Error===false,"Cannot wrap an error");Hoek.assert(typeof result!=="symbol","Cannot wrap a symbol");return Response.wrap(result,this.request)}redirect(location){return this.response("").redirect(location)}entity(options){Hoek.assert(options,"Entity method missing required options");Hoek.assert(options.etag||options.modified,"Entity methods missing required options key");this.request._entity=options;const entity=Response.entity(options.etag,options);if(Response.unmodified(this.request,entity)){return this.response().code(304).takeover()}}state(name,value,options){this.request._setState(name,value,options)}unstate(name,options){this.request._clearState(name,options)}};internals.authenticated=function(data){Hoek.assert(data&&data.credentials,"Authentication data missing credentials information");return new internals.Auth(null,data)};internals.unauthenticated=function(error,data){Hoek.assert(!data||data.credentials,"Authentication data missing credentials information");return new internals.Auth(error,data)};internals.Auth=class{constructor(error,data){this.isAuth=true;this.error=error;this.data=data}}},{"./response":71,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/hoek":128}],77:[function(require,module,exports){"use strict";const Http=require("http");const Ammo=require("@hapi/ammo");const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const Shot=require("@hapi/shot");const Teamwork=require("@hapi/teamwork");const Config=require("./config");const Response=require("./response");const internals={};exports.send=async function(request){const response=request.response;try{if(response.isBoom){await internals.fail(request,response);return}await internals.marshal(request);await internals.transmit(response)}catch(err){Bounce.rethrow(err,"system");request._setResponse(err);return internals.fail(request,err)}};internals.marshal=async function(request){for(const func of request._route._marshalCycle){await func(request)}};internals.fail=async function(request,boom){const response=internals.error(request,boom);request.response=response;try{await internals.marshal(request)}catch(err){Bounce.rethrow(err,"system");const minimal={statusCode:response.statusCode,error:Http.STATUS_CODES[response.statusCode],message:boom.message};response._payload=new Response.Payload(JSON.stringify(minimal),{})}return internals.transmit(response)};internals.error=function(request,boom){const error=boom.output;const response=new Response(error.payload,request);response._error=boom;response.code(error.statusCode);response.headers=Hoek.clone(error.headers);return response};internals.transmit=function(response){const request=response.request;const length=internals.length(response);const encoding=request._core.compression.encoding(response,length);const ranger=encoding?null:internals.range(response,length);const compressor=internals.encoding(response,encoding);const isInjection=Shot.isInjection(request.raw.req);if(!(isInjection||request._core.started)||request._isPayloadPending&&!request.raw.req._readableState.ended){response._header("connection","close")}internals.writeHead(response);if(isInjection){request.raw.res[Config.symbol]={request:request};if(response.variety==="plain"){request.raw.res[Config.symbol].result=response._isPayloadSupported()?response.source:null}}const stream=internals.chain([response._payload,response._tap(),compressor,ranger]);return internals.pipe(request,stream)};internals.length=function(response){const request=response.request;const header=response.headers["content-length"];if(header===undefined){return null}let length=header;if(typeof length==="string"){length=parseInt(header,10);if(!isFinite(length)){delete response.headers["content-length"];return null}}if(length===0&&!response._statusCode&&response.statusCode===200&&request.route.settings.response.emptyStatusCode===204){response.code(204);delete response.headers["content-length"]}return length};internals.range=function(response,length){const request=response.request;if(!length||!request.route.settings.response.ranges||request.method!=="get"||response.statusCode!==200){return null}response._header("accept-ranges","bytes");if(!request.headers.range){return null}if(request.headers["if-range"]&&request.headers["if-range"]!==response.headers.etag){return null}const ranges=Ammo.header(request.headers.range,length);if(!ranges){const error=Boom.rangeNotSatisfiable();error.output.headers["content-range"]="bytes */"+length;throw error}if(ranges.length!==1){return null}const range=ranges[0];response.code(206);response.bytes(range.to-range.from+1);response._header("content-range","bytes "+range.from+"-"+range.to+"/"+length);return new Ammo.Stream(range)};internals.encoding=function(response,encoding){const request=response.request;const header=response.headers["content-encoding"]||encoding;if(header&&response.headers.etag&&response.settings.varyEtag){response.headers.etag=response.headers.etag.slice(0,-1)+"-"+header+'"'}if(!encoding||response.statusCode===206||!response._isPayloadSupported()){return null}delete response.headers["content-length"];response._header("content-encoding",encoding);const compressor=request._core.compression.encoder(request,encoding);if(response.variety==="stream"&&typeof response._payload.setCompressor==="function"){response._payload.setCompressor(compressor)}return compressor};internals.pipe=function(request,stream){const team=new Teamwork;const env={stream:stream,request:request,team:team};const aborted=internals.end.bind(null,env,"aborted");const close=internals.end.bind(null,env,"close");const end=internals.end.bind(null,env,null);request.raw.req.on("aborted",aborted);request.raw.req.on("close",close);request.raw.res.on("close",close);request.raw.res.on("error",end);request.raw.res.on("finish",end);if(stream.writeToStream){stream.writeToStream(request.raw.res)}else{stream.on("error",end);stream.pipe(request.raw.res)}return team.work};internals.end=function(env,event,err){const{request,stream,team}=env;if(!team){return}env.team=null;if(request.raw.res.finished){if(event!=="aborted"){request.info.responded=Date.now()}team.attend();return}if(err){request.raw.res.destroy();Response.drain(stream)}err=err||new Boom(`Request ${event}`,{statusCode:request.route.settings.response.disconnectStatusCode});const error=internals.error(request,Boom.boomify(err));request._setResponse(error);if(request.raw.res[Config.symbol]){request.raw.res.statusCode=error.statusCode;request.raw.res[Config.symbol].result=error.source}if(event){request._log(["response","error",event])}else{request._log(["response","error"],err)}request.raw.res.end();team.attend()};internals.writeHead=function(response){const res=response.request.raw.res;const headers=Object.keys(response.headers);let i=0;try{for(;i<headers.length;++i){const header=headers[i];const value=response.headers[header];if(value!==undefined){res.setHeader(header,value)}}}catch(err){for(--i;i>=0;--i){res.removeHeader(headers[i])}throw Boom.boomify(err)}if(response.settings.message){res.statusMessage=response.settings.message}try{res.writeHead(response.statusCode)}catch(err){throw Boom.boomify(err)}};internals.chain=function(sources){let from=sources[0];for(let i=1;i<sources.length;++i){const to=sources[i];if(to){from.on("error",internals.errorPipe.bind(from,to));from=from.pipe(to)}}return from};internals.errorPipe=function(to,err){to.emit("error",err)}},{"./config":62,"./response":71,"@hapi/ammo":8,"@hapi/boom":12,"@hapi/bounce":13,"@hapi/hoek":128,"@hapi/shot":204,"@hapi/teamwork":277,http:undefined}],78:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const internals={};exports.compile=function(rule){if(rule===false){return Joi.object({}).allow(null)}if(typeof rule==="function"){return rule}if(!rule||rule===true){return null}if(typeof rule.validate==="function"){return rule}return Joi.compile(rule)};exports.headers=function(request){return internals.input("headers",request)};exports.params=function(request){return internals.input("params",request)};exports.payload=function(request){if(request.method==="get"||request.method==="head"){return}return internals.input("payload",request)};exports.query=function(request){return internals.input("query",request)};exports.state=function(request){return internals.input("state",request)};internals.input=async function(source,request){const localOptions={context:{headers:request.headers,params:request.params,query:request.query,payload:request.payload,state:request.state,auth:request.auth,app:{route:request.route.settings.app,request:request.app}}};delete localOptions.context[source];Hoek.merge(localOptions,request.route.settings.validate.options);try{const schema=request.route.settings.validate[source];const bind=request.route.settings.bind;var value=await(typeof schema!=="function"?internals.validate(request[source],schema,localOptions):schema.call(bind,request[source],localOptions));return}catch(err){var validationError=err}finally{request.orig[source]=request[source];if(value!==undefined){request[source]=value}}if(request.route.settings.validate.failAction==="ignore"){return}const defaultError=validationError.isBoom?validationError:Boom.badRequest(`Invalid request ${source} input`);const detailedError=Boom.boomify(validationError,{statusCode:400,override:false});detailedError.output.payload.validation={source:source,keys:[]};if(validationError.details){for(const details of validationError.details){const path=details.path;detailedError.output.payload.validation.keys.push(Hoek.escapeHtml(path.join(".")))}}if(request.route.settings.validate.errorFields){for(const field in request.route.settings.validate.errorFields){detailedError.output.payload[field]=request.route.settings.validate.errorFields[field]}}return request._core.toolkit.failAction(request,request.route.settings.validate.failAction,defaultError,{details:detailedError,tags:["validation","error",source]})};exports.response=async function(request){if(request.route.settings.response.sample){const currentSample=Math.ceil(Math.random()*100);if(currentSample>request.route.settings.response.sample){return}}const response=request.response;const statusCode=response.isBoom?response.output.statusCode:response.statusCode;const statusSchema=request.route.settings.response.status[statusCode];if(statusCode>=400&&!statusSchema){return}const schema=statusSchema!==undefined?statusSchema:request.route.settings.response.schema;if(schema===null){return}if(!response.isBoom&&request.response.variety!=="plain"){throw Boom.badImplementation("Cannot validate non-object response")}const localOptions={context:{headers:request.headers,params:request.params,query:request.query,payload:request.payload,state:request.state,auth:request.auth,app:{route:request.route.settings.app,request:request.app}}};const source=response.isBoom?response.output.payload:response.source;Hoek.merge(localOptions,request.route.settings.response.options);try{let value;if(typeof schema!=="function"){value=await internals.validate(source,schema,localOptions)}else{value=await schema(source,localOptions)}if(value!==undefined&&request.route.settings.response.modify){if(response.isBoom){response.output.payload=value}else{response.source=value}}}catch(err){return request._core.toolkit.failAction(request,request.route.settings.response.failAction,err,{tags:["validation","response","error"]})}};internals.validate=function(value,schema,options){if(typeof schema.validateAsync==="function"){return schema.validateAsync(value,options)}return schema.validate(value,options)}},{"@hapi/boom":12,"@hapi/hoek":128,"@hapi/joi":142}],79:[function(require,module,exports){module.exports={_from:"@hapi/hapi@18",_id:"@hapi/hapi@18.4.1",_inBundle:false,_integrity:"sha512-9HjVGa0Z4Qv9jk9AVoUdJMQLA+KuZ+liKWyEEkVBx3e3H1F0JM6aGbPkY9jRfwsITBWGBU2iXazn65SFKSi/tg==",_location:"/@hapi/hapi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/hapi@18",name:"@hapi/hapi",escapedName:"@hapi%2fhapi",scope:"@hapi",rawSpec:"18",saveSpec:null,fetchSpec:"18"},_requiredBy:["#USER","/"],_resolved:"https://registry.npmjs.org/@hapi/hapi/-/hapi-18.4.1.tgz",_shasum:"023fbc131074b1cb2cd7f6766d65f4b0e92df788",_spec:"@hapi/hapi@18",_where:"/home/osama/Desktop/Dev/hapi-server",bugs:{url:"https://github.com/hapijs/hapi/issues"},bundleDependencies:false,dependencies:{"@hapi/accept":"^3.2.4","@hapi/ammo":"^3.1.2","@hapi/boom":"7.x.x","@hapi/bounce":"1.x.x","@hapi/call":"^5.1.3","@hapi/catbox":"10.x.x","@hapi/catbox-memory":"4.x.x","@hapi/heavy":"6.x.x","@hapi/hoek":"8.x.x","@hapi/joi":"15.x.x","@hapi/mimos":"4.x.x","@hapi/podium":"3.x.x","@hapi/shot":"4.x.x","@hapi/somever":"2.x.x","@hapi/statehood":"6.x.x","@hapi/subtext":"^6.1.3","@hapi/teamwork":"3.x.x","@hapi/topo":"3.x.x"},deprecated:"This version contains severe security issues and defects and should not be used! Please upgrade to the latest version of @hapi/hapi or consider a commercial license (https://github.com/hapijs/hapi/issues/4114)",description:"HTTP Server framework",devDependencies:{"@hapi/code":"6.x.x","@hapi/inert":"5.x.x","@hapi/joi-next-test":"npm:@hapi/joi@16.x.x","@hapi/lab":"20.x.x","@hapi/vision":"5.x.x","@hapi/wreck":"15.x.x",handlebars:"4.x.x"},files:["lib"],homepage:"https://hapijs.com",keywords:["framework","http","api","web"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/hapi",repository:{type:"git",url:"git://github.com/hapijs/hapi.git"},scripts:{test:"lab -a @hapi/code -t 100 -L -m 5000","test-cov-html":"lab -a @hapi/code -r html -o coverage.html -m 5000","test-tap":"lab -a @hapi/code -r tap -o tests.tap -m 5000"},version:"18.4.1"}},{}],80:[function(require,module,exports){"use strict";const Boom=require("@hapi/boom");const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const internals={};internals.schema=Joi.object({sampleInterval:Joi.number().min(0),maxHeapUsedBytes:Joi.number().min(0),maxEventLoopDelay:Joi.number().min(0),maxRssBytes:Joi.number().min(0)}).unknown();internals.defaults={sampleInterval:0,maxHeapUsedBytes:0,maxRssBytes:0,maxEventLoopDelay:0};exports=module.exports=internals.Heavy=function(options){options=options||{};Joi.assert(options,internals.schema,"Invalid load monitoring options");this.settings=Hoek.applyToDefaults(internals.defaults,options);Hoek.assert(this.settings.sampleInterval||!this.settings.maxEventLoopDelay&&!this.settings.maxHeapUsedBytes&&!this.settings.maxRssBytes,"Load sample interval must be set to enable load limits");this._eventLoopTimer=null;this._loadBench=new Hoek.Bench;this.load={eventLoopDelay:0,heapUsed:0,rss:0}};internals.Heavy.prototype.start=function(){if(!this.settings.sampleInterval){return}const loopSample=()=>{this._loadBench.reset();const measure=()=>{const mem=process.memoryUsage();this.load.eventLoopDelay=this._loadBench.elapsed()-this.settings.sampleInterval;this.load.heapUsed=mem.heapUsed;this.load.rss=mem.rss;loopSample()};this._eventLoopTimer=setTimeout(measure,this.settings.sampleInterval)};loopSample()};internals.Heavy.prototype.stop=function(){clearTimeout(this._eventLoopTimer);this._eventLoopTimer=null};internals.Heavy.prototype.check=function(){if(!this.settings.sampleInterval){return}Hoek.assert(this._eventLoopTimer,"Cannot check load when sampler is not started");const elapsed=this._loadBench.elapsed();const load=this.load;if(elapsed>this.settings.sampleInterval){load.eventLoopDelay=Math.max(load.eventLoopDelay,elapsed-this.settings.sampleInterval)}if(this.settings.maxEventLoopDelay&&load.eventLoopDelay>this.settings.maxEventLoopDelay){throw Boom.serverUnavailable("Server under heavy load (event loop)",load)}if(this.settings.maxHeapUsedBytes&&load.heapUsed>this.settings.maxHeapUsedBytes){throw Boom.serverUnavailable("Server under heavy load (heap)",load)}if(this.settings.maxRssBytes&&load.rss>this.settings.maxRssBytes){throw Boom.serverUnavailable("Server under heavy load (rss)",load)}}},{"@hapi/boom":12,"@hapi/hoek":128,"@hapi/joi":87}],81:[function(require,module,exports){arguments[4][23][0].apply(exports,arguments)},{"./cache":82,"./common":83,"./compile":84,"./errors":85,"./extend":86,"./manifest":88,"./messages":89,"./modify":90,"./ref":91,"./trace":95,"./validator":111,"./values":112,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/merge":131,dup:23}],82:[function(require,module,exports){arguments[4][24][0].apply(exports,arguments)},{"./common":83,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:24}],83:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{"../package.json":113,"./messages":89,"./schemas":92,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/error":121,dup:25}],84:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{"./common":83,"./ref":91,"@hapi/hoek/lib/assert":115,dup:26}],85:[function(require,module,exports){arguments[4][27][0].apply(exports,arguments)},{"./common":83,"./template":94,"@hapi/hoek/lib/clone":118,dup:27}],86:[function(require,module,exports){arguments[4][28][0].apply(exports,arguments)},{"./common":83,"./messages":89,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:28}],87:[function(require,module,exports){arguments[4][29][0].apply(exports,arguments)},{"./cache":82,"./common":83,"./compile":84,"./errors":85,"./extend":86,"./manifest":88,"./ref":91,"./schemas":92,"./template":94,"./trace":95,"./types/alternatives":96,"./types/any":97,"./types/array":98,"./types/binary":99,"./types/boolean":100,"./types/date":101,"./types/function":102,"./types/link":104,"./types/number":105,"./types/object":106,"./types/string":107,"./types/symbol":110,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:29}],88:[function(require,module,exports){arguments[4][30][0].apply(exports,arguments)},{"./common":83,"./messages":89,"./ref":91,"./schemas":92,"./template":94,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:30}],89:[function(require,module,exports){arguments[4][31][0].apply(exports,arguments)},{"./template":94,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:31}],90:[function(require,module,exports){arguments[4][32][0].apply(exports,arguments)},{"./common":83,"./ref":91,"@hapi/hoek/lib/assert":115,dup:32}],91:[function(require,module,exports){arguments[4][33][0].apply(exports,arguments)},{"./common":83,"./template":94,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:33}],92:[function(require,module,exports){arguments[4][34][0].apply(exports,arguments)},{"./index":87,dup:34}],93:[function(require,module,exports){arguments[4][35][0].apply(exports,arguments)},{"./common":83,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:35}],94:[function(require,module,exports){arguments[4][36][0].apply(exports,arguments)},{"./common":83,"./errors":85,"./ref":91,"@hapi/formula":59,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/escapeHtml":123,dup:36}],95:[function(require,module,exports){arguments[4][37][0].apply(exports,arguments)},{"./errors":85,"@hapi/hoek/lib/deepEqual":120,"@hapi/pinpoint":169,dup:37}],96:[function(require,module,exports){arguments[4][38][0].apply(exports,arguments)},{"../common":83,"../compile":84,"../errors":85,"../ref":91,"./any":97,"@hapi/hoek/lib/assert":115,dup:38}],97:[function(require,module,exports){arguments[4][39][0].apply(exports,arguments)},{"../base":81,"../common":83,"../messages":89,"@hapi/hoek/lib/assert":115,dup:39}],98:[function(require,module,exports){arguments[4][40][0].apply(exports,arguments)},{"../common":83,"../compile":84,"./any":97,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/reach":133,dup:40}],99:[function(require,module,exports){arguments[4][41][0].apply(exports,arguments)},{"../common":83,"./any":97,"@hapi/hoek/lib/assert":115,dup:41}],100:[function(require,module,exports){arguments[4][42][0].apply(exports,arguments)},{"../common":83,"../values":112,"./any":97,"@hapi/hoek/lib/assert":115,dup:42}],101:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments)},{"../common":83,"../template":94,"./any":97,"@hapi/hoek/lib/assert":115,dup:43}],102:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments)},{"./keys":103,"@hapi/hoek/lib/assert":115,dup:44}],103:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments)},{"../common":83,"../compile":84,"../errors":85,"../ref":91,"../template":94,"./any":97,"@hapi/hoek/lib/applyToDefaults":114,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/topo":278,dup:45}],104:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments)},{"../common":83,"../compile":84,"../errors":85,"./any":97,"@hapi/hoek/lib/assert":115,dup:46}],105:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments)},{"../common":83,"./any":97,"@hapi/hoek/lib/assert":115,dup:47}],106:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments)},{"./keys":103,dup:48}],107:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments)},{"../../common":83,"../any":97,"./ip":108,"./uri":109,"@hapi/address/lib/domain":4,"@hapi/address/lib/email":5,"@hapi/address/lib/tlds":7,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:49}],108:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{"./uri":109,dup:50}],109:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments)},{"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:51}],110:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments)},{"./any":97,"@hapi/hoek/lib/assert":115,dup:52}],111:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{"./common":83,"./errors":85,"./state":93,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/ignore":127,"@hapi/hoek/lib/reach":133,dup:53}],112:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{"./common":83,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,dup:54}],113:[function(require,module,exports){module.exports={_from:"@hapi/joi@16.x.x",_id:"@hapi/joi@16.1.8",_inBundle:false,_integrity:"sha512-wAsVvTPe+FwSrsAurNt5vkg3zo+TblvC5Bb1zMVK6SJzZqw9UrJnexxR+76cpePmtUZKHAPxcQ2Bf7oVHyahhg==",_location:"/@hapi/heavy/@hapi/joi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/joi@16.x.x",name:"@hapi/joi",escapedName:"@hapi%2fjoi",scope:"@hapi",rawSpec:"16.x.x",saveSpec:null,fetchSpec:"16.x.x"},_requiredBy:["/@hapi/heavy"],_resolved:"https://registry.npmjs.org/@hapi/joi/-/joi-16.1.8.tgz",_shasum:"84c1f126269489871ad4e2decc786e0adef06839",_spec:"@hapi/joi@16.x.x",_where:"/home/osama/Desktop/Dev/hapi-server/node_modules/@hapi/heavy",browser:"dist/joi-browser.min.js",bugs:{url:"https://github.com/hapijs/joi/issues"},bundleDependencies:false,dependencies:{"@hapi/address":"^2.1.2","@hapi/formula":"^1.2.0","@hapi/hoek":"^8.2.4","@hapi/pinpoint":"^1.0.2","@hapi/topo":"^3.1.3"},deprecated:"Switch to 'npm install joi'",description:"Object schema validation",devDependencies:{"@hapi/bourne":"1.x.x","@hapi/code":"6.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"20.x.x"},files:["lib/**/*","dist/*"],homepage:"https://github.com/hapijs/joi#readme",keywords:["schema","validation"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/joi",repository:{type:"git",url:"git://github.com/hapijs/joi.git"},scripts:{prepublishOnly:"cd browser && npm install && npm run build",test:"lab -t 100 -a @hapi/code -L","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},version:"16.1.8"}},{}],114:[function(require,module,exports){"use strict";const Assert=require("./assert");const Clone=require("./clone");const Merge=require("./merge");const Utils=require("./utils");const internals={};module.exports=function(defaults,source,options={}){Assert(defaults&&typeof defaults==="object","Invalid defaults value: must be an object");Assert(!source||source===true||typeof source==="object","Invalid source value: must be true, falsy or an object");Assert(typeof options==="object","Invalid options: must be an object");if(!source){return null}if(options.shallow){return internals.applyToDefaultsWithShallow(defaults,source,options)}const copy=Clone(defaults);if(source===true){return copy}const nullOverride=options.nullOverride!==undefined?options.nullOverride:false;return Merge(copy,source,{nullOverride:nullOverride,mergeArrays:false})};internals.applyToDefaultsWithShallow=function(defaults,source,options){const keys=options.shallow;Assert(Array.isArray(keys),"Invalid keys");options=Object.assign({},options);options.shallow=false;const copy=Clone(defaults,{shallow:keys});if(source===true){return copy}const storage=Utils.store(source,keys);Merge(copy,source,{mergeArrays:false,nullOverride:false});Utils.restore(copy,source,storage);return copy}},{"./assert":115,"./clone":118,"./merge":131,"./utils":137}],115:[function(require,module,exports){"use strict";const AssertError=require("./error");const internals={};module.exports=function(condition,...args){if(condition){return}if(args.length===1&&args[0]instanceof Error){throw args[0]}throw new AssertError(args)}},{"./error":121}],116:[function(require,module,exports){"use strict";const internals={};module.exports=internals.Bench=class{constructor(){this.ts=0;this.reset()}reset(){this.ts=internals.Bench.now()}elapsed(){return internals.Bench.now()-this.ts}static now(){const ts=process.hrtime();return ts[0]*1e3+ts[1]/1e6}}},{}],117:[function(require,module,exports){"use strict";const Ignore=require("./ignore");const internals={};module.exports=function(){return new Promise(Ignore)}},{"./ignore":127}],118:[function(require,module,exports){"use strict";const Types=require("./types");const Utils=require("./utils");const internals={needsProtoHack:new Set([Types.set,Types.map,Types.weakSet,Types.weakMap])};module.exports=internals.clone=function(obj,options={},_seen=null){if(typeof obj!=="object"||obj===null){return obj}let clone=internals.clone;let seen=_seen;if(options.shallow){if(options.shallow!==true){return internals.cloneWithShallow(obj,options)}clone=value=>value}else{seen=seen||new Map;const lookup=seen.get(obj);if(lookup){return lookup}}const baseProto=Types.getInternalProto(obj);if(baseProto===Types.buffer){return Buffer&&Buffer.from(obj)}if(baseProto===Types.date){return new Date(obj.getTime())}if(baseProto===Types.regex){return new RegExp(obj)}const newObj=internals.base(obj,baseProto,options);if(newObj===obj){return obj}if(seen){seen.set(obj,newObj)}if(baseProto===Types.set){for(const value of obj){newObj.add(clone(value,options,seen))}}else if(baseProto===Types.map){for(const[key,value]of obj){newObj.set(key,clone(value,options,seen))}}const keys=Utils.keys(obj,options);for(const key of keys){if(key==="__proto__"){continue}if(baseProto===Types.array&&key==="length"){newObj.length=obj.length;continue}const descriptor=Object.getOwnPropertyDescriptor(obj,key);if(descriptor){if(descriptor.get||descriptor.set){Object.defineProperty(newObj,key,descriptor)}else if(descriptor.enumerable){newObj[key]=clone(obj[key],options,seen)}else{Object.defineProperty(newObj,key,{enumerable:false,writable:true,configurable:true,value:clone(obj[key],options,seen)})}}else{Object.defineProperty(newObj,key,{enumerable:true,writable:true,configurable:true,value:clone(obj[key],options,seen)})}}return newObj};internals.cloneWithShallow=function(source,options){const keys=options.shallow;options=Object.assign({},options);options.shallow=false;const storage=Utils.store(source,keys);const copy=internals.clone(source,options);Utils.restore(copy,source,storage);return copy};internals.base=function(obj,baseProto,options){if(baseProto===Types.array){return[]}if(options.prototype===false){if(internals.needsProtoHack.has(baseProto)){return new baseProto.constructor}return{}}const proto=Object.getPrototypeOf(obj);if(proto&&proto.isImmutable){return obj}if(internals.needsProtoHack.has(baseProto)){const newObj=new proto.constructor;if(proto!==baseProto){Object.setPrototypeOf(newObj,proto)}return newObj}return Object.create(proto)}},{"./types":136,"./utils":137}],119:[function(require,module,exports){"use strict";const Assert=require("./assert");const DeepEqual=require("./deepEqual");const EscapeRegex=require("./escapeRegex");const Utils=require("./utils");const internals={};module.exports=function(ref,values,options={}){if(typeof values!=="object"){values=[values]}Assert(!Array.isArray(values)||values.length,"Values array cannot be empty");if(typeof ref==="string"){return internals.string(ref,values,options)}if(Array.isArray(ref)){return internals.array(ref,values,options)}Assert(typeof ref==="object","Reference must be string or an object");return internals.object(ref,values,options)};internals.array=function(ref,values,options){if(!Array.isArray(values)){values=[values]}if(!ref.length){return false}if(options.only&&options.once&&ref.length!==values.length){return false}let compare;const map=new Map;for(const value of values){if(!options.deep||!value||typeof value!=="object"){const existing=map.get(value);if(existing){++existing.allowed}else{map.set(value,{allowed:1,hits:0})}}else{compare=compare||internals.compare(options);let found=false;for(const[key,existing]of map.entries()){if(compare(key,value)){++existing.allowed;found=true;break}}if(!found){map.set(value,{allowed:1,hits:0})}}}let hits=0;for(const item of ref){let match;if(!options.deep||!item||typeof item!=="object"){match=map.get(item)}else{for(const[key,existing]of map.entries()){if(compare(key,item)){match=existing;break}}}if(match){++match.hits;++hits;if(options.once&&match.hits>match.allowed){return false}}}if(options.only&&hits!==ref.length){return false}for(const match of map.values()){if(match.hits===match.allowed){continue}if(match.hits<match.allowed&&!options.part){return false}}return!!hits};internals.object=function(ref,values,options){Assert(options.once===undefined,"Cannot use option once with object");const keys=Utils.keys(ref,options);if(!keys.length){return false}if(Array.isArray(values)){return internals.array(keys,values,options)}const symbols=Object.getOwnPropertySymbols(values).filter(sym=>values.propertyIsEnumerable(sym));const targets=[...Object.keys(values),...symbols];const compare=internals.compare(options);const set=new Set(targets);for(const key of keys){if(!set.has(key)){if(options.only){return false}continue}if(!compare(values[key],ref[key])){return false}set.delete(key)}if(set.size){return options.part?set.size<targets.length:false}return true};internals.string=function(ref,values,options){if(ref===""){return values.length===1&&values[0]===""||!options.once&&!values.some(v=>v!=="")}const map=new Map;const patterns=[];for(const value of values){Assert(typeof value==="string","Cannot compare string reference to non-string value");if(value){const existing=map.get(value);if(existing){++existing.allowed}else{map.set(value,{allowed:1,hits:0});patterns.push(EscapeRegex(value))}}else if(options.once||options.only){return false}}if(!patterns.length){return true}const regex=new RegExp(`(${patterns.join("|")})`,"g");const leftovers=ref.replace(regex,($0,$1)=>{++map.get($1).hits;return""});if(options.only&&leftovers){return false}let any=false;for(const match of map.values()){if(match.hits){any=true}if(match.hits===match.allowed){continue}if(match.hits<match.allowed&&!options.part){return false}if(options.once){return false}}return!!any};internals.compare=function(options){if(!options.deep){return internals.shallow}const hasOnly=options.only!==undefined;const hasPart=options.part!==undefined;const flags={prototype:hasOnly?options.only:hasPart?!options.part:false,part:hasOnly?!options.only:hasPart?options.part:false};return(a,b)=>DeepEqual(a,b,flags)};internals.shallow=function(a,b){return a===b}},{"./assert":115,"./deepEqual":120,"./escapeRegex":125,"./utils":137}],120:[function(require,module,exports){"use strict";const Types=require("./types");const internals={mismatched:null};module.exports=function(obj,ref,options){options=Object.assign({prototype:true},options);return!!internals.isDeepEqual(obj,ref,options,[])};internals.isDeepEqual=function(obj,ref,options,seen){if(obj===ref){return obj!==0||1/obj===1/ref}const type=typeof obj;if(type!==typeof ref){return false}if(obj===null||ref===null){return false}if(type==="function"){if(!options.deepFunction||obj.toString()!==ref.toString()){return false}}else if(type!=="object"){return obj!==obj&&ref!==ref}const instanceType=internals.getSharedType(obj,ref,!!options.prototype);switch(instanceType){case Types.buffer:return Buffer&&Buffer.prototype.equals.call(obj,ref);case Types.promise:return obj===ref;case Types.regex:return obj.toString()===ref.toString();case internals.mismatched:return false}for(let i=seen.length-1;i>=0;--i){if(seen[i].isSame(obj,ref)){return true}}seen.push(new internals.SeenEntry(obj,ref));try{return!!internals.isDeepEqualObj(instanceType,obj,ref,options,seen)}finally{seen.pop()}};internals.getSharedType=function(obj,ref,checkPrototype){if(checkPrototype){if(Object.getPrototypeOf(obj)!==Object.getPrototypeOf(ref)){return internals.mismatched}return Types.getInternalProto(obj)}const type=Types.getInternalProto(obj);if(type!==Types.getInternalProto(ref)){return internals.mismatched}return type};internals.valueOf=function(obj){const objValueOf=obj.valueOf;if(objValueOf===undefined){return obj}try{return objValueOf.call(obj)}catch(err){return err}};internals.hasOwnEnumerableProperty=function(obj,key){return Object.prototype.propertyIsEnumerable.call(obj,key)};internals.isSetSimpleEqual=function(obj,ref){for(const entry of obj){if(!ref.has(entry)){return false}}return true};internals.isDeepEqualObj=function(instanceType,obj,ref,options,seen){const{isDeepEqual,valueOf,hasOwnEnumerableProperty}=internals;const{keys,getOwnPropertySymbols}=Object;if(instanceType===Types.array){if(options.part){for(const objValue of obj){for(const refValue of ref){if(isDeepEqual(objValue,refValue,options,seen)){return true}}}}else{if(obj.length!==ref.length){return false}for(let i=0;i<obj.length;++i){if(!isDeepEqual(obj[i],ref[i],options,seen)){return false}}return true}}else if(instanceType===Types.set){if(obj.size!==ref.size){return false}if(!internals.isSetSimpleEqual(obj,ref)){const ref2=new Set(ref);for(const objEntry of obj){if(ref2.delete(objEntry)){continue}let found=false;for(const refEntry of ref2){if(isDeepEqual(objEntry,refEntry,options,seen)){ref2.delete(refEntry);found=true;break}}if(!found){return false}}}}else if(instanceType===Types.map){if(obj.size!==ref.size){return false}for(const[key,value]of obj){if(value===undefined&&!ref.has(key)){return false}if(!isDeepEqual(value,ref.get(key),options,seen)){return false}}}else if(instanceType===Types.error){if(obj.name!==ref.name||obj.message!==ref.message){return false}}const valueOfObj=valueOf(obj);const valueOfRef=valueOf(ref);if((obj!==valueOfObj||ref!==valueOfRef)&&!isDeepEqual(valueOfObj,valueOfRef,options,seen)){return false}const objKeys=keys(obj);if(!options.part&&objKeys.length!==keys(ref).length&&!options.skip){return false}let skipped=0;for(const key of objKeys){if(options.skip&&options.skip.includes(key)){if(ref[key]===undefined){++skipped}continue}if(!hasOwnEnumerableProperty(ref,key)){return false}if(!isDeepEqual(obj[key],ref[key],options,seen)){return false}}if(!options.part&&objKeys.length-skipped!==keys(ref).length){return false}if(options.symbols!==false){const objSymbols=getOwnPropertySymbols(obj);const refSymbols=new Set(getOwnPropertySymbols(ref));for(const key of objSymbols){if(!options.skip||!options.skip.includes(key)){if(hasOwnEnumerableProperty(obj,key)){if(!hasOwnEnumerableProperty(ref,key)){return false}if(!isDeepEqual(obj[key],ref[key],options,seen)){return false}}else if(hasOwnEnumerableProperty(ref,key)){return false}}refSymbols.delete(key)}for(const key of refSymbols){if(hasOwnEnumerableProperty(ref,key)){return false}}}return true};internals.SeenEntry=class{constructor(obj,ref){this.obj=obj;this.ref=ref}isSame(obj,ref){return this.obj===obj&&this.ref===ref}}},{"./types":136}],121:[function(require,module,exports){"use strict";const Stringify=require("./stringify");const internals={};module.exports=class extends Error{constructor(args){const msgs=args.filter(arg=>arg!=="").map(arg=>{return typeof arg==="string"?arg:arg instanceof Error?arg.message:Stringify(arg)});super(msgs.join(" ")||"Unknown error");if(typeof Error.captureStackTrace==="function"){Error.captureStackTrace(this,exports.assert)}}}},{"./stringify":135}],122:[function(require,module,exports){"use strict";const Assert=require("./assert");const internals={};module.exports=function(attribute){Assert(/^[ \w\!#\$%&'\(\)\*\+,\-\.\/\:;<\=>\?@\[\]\^`\{\|\}~\"\\]*$/.test(attribute),"Bad attribute value ("+attribute+")");return attribute.replace(/\\/g,"\\\\").replace(/\"/g,'\\"')}},{"./assert":115}],123:[function(require,module,exports){"use strict";const internals={};module.exports=function(input){if(!input){return""}let escaped="";for(let i=0;i<input.length;++i){const charCode=input.charCodeAt(i);if(internals.isSafe(charCode)){escaped+=input[i]}else{escaped+=internals.escapeHtmlChar(charCode)}}return escaped};internals.escapeHtmlChar=function(charCode){const namedEscape=internals.namedHtml[charCode];if(typeof namedEscape!=="undefined"){return namedEscape}if(charCode>=256){return"&#"+charCode+";"}const hexValue=charCode.toString(16).padStart(2,"0");return`&#x${hexValue};`};internals.isSafe=function(charCode){return typeof internals.safeCharCodes[charCode]!=="undefined"};internals.namedHtml={38:"&amp;",60:"&lt;",62:"&gt;",34:"&quot;",160:"&nbsp;",162:"&cent;",163:"&pound;",164:"&curren;",169:"&copy;",174:"&reg;"};internals.safeCharCodes=function(){const safe={};for(let i=32;i<123;++i){if(i>=97||i>=65&&i<=90||i>=48&&i<=57||i===32||i===46||i===44||i===45||i===58||i===95){safe[i]=null}}return safe}()},{}],124:[function(require,module,exports){"use strict";const internals={};module.exports=function(input){if(!input){return""}const lessThan=60;const greaterThan=62;const andSymbol=38;const lineSeperator=8232;let charCode;return input.replace(/[<>&\u2028\u2029]/g,match=>{charCode=match.charCodeAt(0);if(charCode===lessThan){return"\\u003c"}if(charCode===greaterThan){return"\\u003e"}if(charCode===andSymbol){return"\\u0026"}if(charCode===lineSeperator){return"\\u2028"}return"\\u2029"})}},{}],125:[function(require,module,exports){"use strict";const internals={};module.exports=function(string){return string.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g,"\\$&")}},{}],126:[function(require,module,exports){"use strict";const internals={};module.exports=internals.flatten=function(array,target){const result=target||[];for(let i=0;i<array.length;++i){if(Array.isArray(array[i])){internals.flatten(array[i],result)}else{result.push(array[i])}}return result}},{}],127:[function(require,module,exports){"use strict";const internals={};module.exports=function(){}},{}],128:[function(require,module,exports){"use strict";const internals={};module.exports={applyToDefaults:require("./applyToDefaults"),assert:require("./assert"),Bench:require("./bench"),block:require("./block"),clone:require("./clone"),contain:require("./contain"),deepEqual:require("./deepEqual"),Error:require("./error"),escapeHeaderAttribute:require("./escapeHeaderAttribute"),escapeHtml:require("./escapeHtml"),escapeJson:require("./escapeJson"),escapeRegex:require("./escapeRegex"),flatten:require("./flatten"),ignore:require("./ignore"),intersect:require("./intersect"),isPromise:require("./isPromise"),merge:require("./merge"),once:require("./once"),reach:require("./reach"),reachTemplate:require("./reachTemplate"),stringify:require("./stringify"),wait:require("./wait")}},{"./applyToDefaults":114,"./assert":115,"./bench":116,"./block":117,"./clone":118,"./contain":119,"./deepEqual":120,"./error":121,"./escapeHeaderAttribute":122,"./escapeHtml":123,"./escapeJson":124,"./escapeRegex":125,"./flatten":126,"./ignore":127,"./intersect":129,"./isPromise":130,"./merge":131,"./once":132,"./reach":133,"./reachTemplate":134,"./stringify":135,"./wait":138}],129:[function(require,module,exports){"use strict";const internals={};module.exports=function(array1,array2,options={}){if(!array1||!array2){return options.first?null:[]}const common=[];const hash=Array.isArray(array1)?new Set(array1):array1;const found=new Set;for(const value of array2){if(internals.has(hash,value)&&!found.has(value)){if(options.first){return value}common.push(value);found.add(value)}}return options.first?null:common};internals.has=function(ref,key){if(typeof ref.has==="function"){return ref.has(key)}return ref[key]!==undefined}},{}],130:[function(require,module,exports){"use strict";const internals={};module.exports=function(promise){return!!promise&&typeof promise.then==="function"}},{}],131:[function(require,module,exports){"use strict";const Assert=require("./assert");const Clone=require("./clone");const Utils=require("./utils");const internals={};module.exports=internals.merge=function(target,source,options){Assert(target&&typeof target==="object","Invalid target value: must be an object");Assert(source===null||source===undefined||typeof source==="object","Invalid source value: must be null, undefined, or an object");if(!source){return target}options=Object.assign({nullOverride:true,mergeArrays:true},options);if(Array.isArray(source)){Assert(Array.isArray(target),"Cannot merge array onto an object");if(!options.mergeArrays){target.length=0}for(let i=0;i<source.length;++i){target.push(Clone(source[i],{symbols:options.symbols}))}return target}const keys=Utils.keys(source,options);for(let i=0;i<keys.length;++i){const key=keys[i];if(key==="__proto__"||!Object.prototype.propertyIsEnumerable.call(source,key)){continue}const value=source[key];if(value&&typeof value==="object"){if(!target[key]||typeof target[key]!=="object"||Array.isArray(target[key])!==Array.isArray(value)||value instanceof Date||Buffer&&Buffer.isBuffer(value)||value instanceof RegExp){target[key]=Clone(value,{symbols:options.symbols})}else{internals.merge(target[key],value,options)}}else{if(value!==null&&value!==undefined){target[key]=value}else if(options.nullOverride){target[key]=value}}}return target}},{"./assert":115,"./clone":118,"./utils":137}],132:[function(require,module,exports){"use strict";const internals={};module.exports=function(method){if(method._hoekOnce){return method}let once=false;const wrapped=function(...args){if(!once){once=true;method(...args)}};wrapped._hoekOnce=true;return wrapped}},{}],133:[function(require,module,exports){"use strict";const Assert=require("./assert");const internals={};module.exports=function(obj,chain,options){if(chain===false||chain===null||chain===undefined){return obj}options=options||{};if(typeof options==="string"){options={separator:options}}const isChainArray=Array.isArray(chain);Assert(!isChainArray||!options.separator,"Separator option no valid for array-based chain");const path=isChainArray?chain:chain.split(options.separator||".");let ref=obj;for(let i=0;i<path.length;++i){let key=path[i];const type=options.iterables&&internals.iterables(ref);if(Array.isArray(ref)||type==="set"){const number=Number(key);if(Number.isInteger(number)){key=number<0?ref.length+number:number}}if(!ref||typeof ref==="function"&&options.functions===false||!type&&ref[key]===undefined){Assert(!options.strict||i+1===path.length,"Missing segment",key,"in reach path ",chain);Assert(typeof ref==="object"||options.functions===true||typeof ref!=="function","Invalid segment",key,"in reach path ",chain);ref=options.default;break}if(!type){ref=ref[key]}else if(type==="set"){ref=[...ref][key]}else{ref=ref.get(key)}}return ref};internals.iterables=function(ref){if(ref instanceof Set){return"set"}if(ref instanceof Map){return"map"}}},{"./assert":115}],134:[function(require,module,exports){"use strict";const Reach=require("./reach");const internals={};module.exports=function(obj,template,options){return template.replace(/{([^}]+)}/g,($0,chain)=>{const value=Reach(obj,chain,options);return value===undefined||value===null?"":value})}},{"./reach":133}],135:[function(require,module,exports){"use strict";const internals={};module.exports=function(...args){try{return JSON.stringify.apply(null,args)}catch(err){return"[Cannot display object: "+err.message+"]"}}},{}],136:[function(require,module,exports){"use strict";const internals={};exports=module.exports={array:Array.prototype,buffer:Buffer&&Buffer.prototype,date:Date.prototype,error:Error.prototype,generic:Object.prototype,map:Map.prototype,promise:Promise.prototype,regex:RegExp.prototype,set:Set.prototype,weakMap:WeakMap.prototype,weakSet:WeakSet.prototype};internals.typeMap=new Map([["[object Error]",exports.error],["[object Map]",exports.map],["[object Promise]",exports.promise],["[object Set]",exports.set],["[object WeakMap]",exports.weakMap],["[object WeakSet]",exports.weakSet]]);exports.getInternalProto=function(obj){if(Array.isArray(obj)){return exports.array}if(Buffer&&obj instanceof Buffer){return exports.buffer}if(obj instanceof Date){return exports.date}if(obj instanceof RegExp){return exports.regex}if(obj instanceof Error){return exports.error}const objName=Object.prototype.toString.call(obj);return internals.typeMap.get(objName)||exports.generic}},{}],137:[function(require,module,exports){"use strict";const Reach=require("./reach");const internals={};exports.keys=function(obj,options={}){return options.symbols!==false?Reflect.ownKeys(obj):Object.getOwnPropertyNames(obj)};exports.store=function(source,keys){const storage=new Map;for(let i=0;i<keys.length;++i){const key=keys[i];const value=Reach(source,key);if(typeof value==="object"||typeof value==="function"){storage.set(key,value);internals.reachSet(source,key,undefined)}}return storage};exports.restore=function(copy,source,storage){for(const[key,value]of storage){internals.reachSet(copy,key,value);internals.reachSet(source,key,value)}};internals.reachSet=function(obj,key,value){const path=Array.isArray(key)?key:key.split(".");let ref=obj;for(let i=0;i<path.length;++i){const segment=path[i];if(i+1===path.length){ref[segment]=value}ref=ref[segment]}}},{"./reach":133}],138:[function(require,module,exports){"use strict";const internals={};module.exports=function(timeout){return new Promise(resolve=>setTimeout(resolve,timeout))}},{}],139:[function(require,module,exports){"use strict";const Crypto=require("crypto");const B64=require("@hapi/b64");const Boom=require("@hapi/boom");const Bourne=require("@hapi/bourne");const Cryptiles=require("@hapi/cryptiles");const Hoek=require("@hapi/hoek");const internals={};exports.defaults={encryption:{saltBits:256,algorithm:"aes-256-cbc",iterations:1,minPasswordlength:32},integrity:{saltBits:256,algorithm:"sha256",iterations:1,minPasswordlength:32},ttl:0,timestampSkewSec:60,localtimeOffsetMsec:0};exports.algorithms={"aes-128-ctr":{keyBits:128,ivBits:128},"aes-256-cbc":{keyBits:256,ivBits:128},sha256:{keyBits:256}};exports.macFormatVersion="2";exports.macPrefix="Fe26."+exports.macFormatVersion;exports.generateKey=async function(password,options){if(!password){throw new Boom("Empty password")}if(!options||typeof options!=="object"){throw new Boom("Bad options")}const algorithm=exports.algorithms[options.algorithm];if(!algorithm){throw new Boom("Unknown algorithm: "+options.algorithm)}const result={};if(Buffer.isBuffer(password)){if(password.length<algorithm.keyBits/8){throw new Boom("Key buffer (password) too small")}result.key=password;result.salt=""}else{if(password.length<options.minPasswordlength){throw new Boom("Password string too short (min "+options.minPasswordlength+" characters required)")}let salt=options.salt;if(!salt){if(!options.saltBits){throw new Boom("Missing salt and saltBits options")}const randomSalt=Cryptiles.randomBits(options.saltBits);salt=randomSalt.toString("hex")}const derivedKey=await internals.pbkdf2(password,salt,options.iterations,algorithm.keyBits/8,"sha1");result.key=derivedKey;result.salt=salt}if(options.iv){result.iv=options.iv}else if(algorithm.ivBits){result.iv=Cryptiles.randomBits(algorithm.ivBits)}return result};exports.encrypt=async function(password,options,data){const key=await exports.generateKey(password,options);const cipher=Crypto.createCipheriv(options.algorithm,key.key,key.iv);const encrypted=Buffer.concat([cipher.update(data,"utf8"),cipher.final()]);return{encrypted:encrypted,key:key}};exports.decrypt=async function(password,options,data){const key=await exports.generateKey(password,options);const decipher=Crypto.createDecipheriv(options.algorithm,key.key,key.iv);let dec=decipher.update(data,null,"utf8");dec=dec+decipher.final("utf8");return dec};exports.hmacWithPassword=async function(password,options,data){const key=await exports.generateKey(password,options);const hmac=Crypto.createHmac(options.algorithm,key.key).update(data);const digest=hmac.digest("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"");return{digest:digest,salt:key.salt}};internals.normalizePassword=function(password){if(password&&typeof password==="object"&&!Buffer.isBuffer(password)){return{id:password.id,encryption:password.secret||password.encryption,integrity:password.secret||password.integrity}}return{encryption:password,integrity:password}};exports.seal=async function(object,password,options){options=Object.assign({},options);const now=Date.now()+(options.localtimeOffsetMsec||0);const objectString=internals.stringify(object);let passwordId="";password=internals.normalizePassword(password);if(password.id){if(!/^\w+$/.test(password.id)){throw new Boom("Invalid password id")}passwordId=password.id}const{encrypted,key}=await exports.encrypt(password.encryption,options.encryption,objectString);const encryptedB64=B64.base64urlEncode(encrypted);const iv=B64.base64urlEncode(key.iv);const expiration=options.ttl?now+options.ttl:"";const macBaseString=exports.macPrefix+"*"+passwordId+"*"+key.salt+"*"+iv+"*"+encryptedB64+"*"+expiration;const mac=await exports.hmacWithPassword(password.integrity,options.integrity,macBaseString);const sealed=macBaseString+"*"+mac.salt+"*"+mac.digest;return sealed};exports.unseal=async function(sealed,password,options){options=Object.assign({},options);const now=Date.now()+(options.localtimeOffsetMsec||0);const parts=sealed.split("*");if(parts.length!==8){throw new Boom("Incorrect number of sealed components")}const macPrefix=parts[0];const passwordId=parts[1];const encryptionSalt=parts[2];const encryptionIv=parts[3];const encryptedB64=parts[4];const expiration=parts[5];const hmacSalt=parts[6];const hmac=parts[7];const macBaseString=macPrefix+"*"+passwordId+"*"+encryptionSalt+"*"+encryptionIv+"*"+encryptedB64+"*"+expiration;if(macPrefix!==exports.macPrefix){throw new Boom("Wrong mac prefix")}if(expiration){if(!expiration.match(/^\d+$/)){throw new Boom("Invalid expiration")}const exp=parseInt(expiration,10);if(exp<=now-options.timestampSkewSec*1e3){throw new Boom("Expired seal")}}if(!password){throw new Boom("Empty password")}if(typeof password==="object"&&!Buffer.isBuffer(password)){password=password[passwordId||"default"];if(!password){throw new Boom("Cannot find password: "+passwordId)}}password=internals.normalizePassword(password);const macOptions=Hoek.clone(options.integrity);macOptions.salt=hmacSalt;const mac=await exports.hmacWithPassword(password.integrity,macOptions,macBaseString);if(!Cryptiles.fixedTimeComparison(mac.digest,hmac)){throw new Boom("Bad hmac value")}try{var encrypted=B64.base64urlDecode(encryptedB64,"buffer")}catch(err){throw Boom.boomify(err)}const decryptOptions=Hoek.clone(options.encryption);decryptOptions.salt=encryptionSalt;try{decryptOptions.iv=B64.base64urlDecode(encryptionIv,"buffer")}catch(err){throw Boom.boomify(err)}const decrypted=await exports.decrypt(password.encryption,decryptOptions,encrypted);try{return Bourne.parse(decrypted)}catch(err){throw new Boom("Failed parsing sealed object JSON: "+err.message)}};internals.stringify=function(object){try{return JSON.stringify(object)}catch(err){throw new Boom("Failed to stringify object: "+err.message)}};internals.pbkdf2=function(...args){return new Promise((resolve,reject)=>{const next=(err,result)=>{if(err){return reject(Boom.boomify(err))}resolve(result)};args.push(next);Crypto.pbkdf2(...args)})}},{"@hapi/b64":11,"@hapi/boom":12,"@hapi/bourne":14,"@hapi/cryptiles":57,"@hapi/hoek":128,crypto:undefined}],140:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Ref=require("./ref");const internals={};exports.schema=function(Joi,config){if(config!==undefined&&config!==null&&typeof config==="object"){if(config.isJoi){return config}if(Array.isArray(config)){return Joi.alternatives().try(config)}if(config instanceof RegExp){return Joi.string().regex(config)}if(config instanceof Date){return Joi.date().valid(config)}return Joi.object().keys(config)}if(typeof config==="string"){return Joi.string().valid(config)}if(typeof config==="number"){return Joi.number().valid(config)}if(typeof config==="boolean"){return Joi.boolean().valid(config)}if(Ref.isRef(config)){return Joi.valid(config)}Hoek.assert(config===null,"Invalid schema content:",config);return Joi.valid(null)};exports.ref=function(id){return Ref.isRef(id)?id:Ref.create(id)}},{"./ref":144,"@hapi/hoek":128}],141:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Language=require("./language");const internals={annotations:Symbol("joi-annotations")};internals.stringify=function(value,wrapArrays){const type=typeof value;if(value===null){return"null"}if(type==="string"){return value}if(value instanceof exports.Err||type==="function"||type==="symbol"){return value.toString()}if(type==="object"){if(Array.isArray(value)){let partial="";for(let i=0;i<value.length;++i){partial=partial+(partial.length?", ":"")+internals.stringify(value[i],wrapArrays)}return wrapArrays?"["+partial+"]":partial}return value.toString()}return JSON.stringify(value)};exports.Err=class{constructor(type,context,state,options,flags,message,template){this.isJoi=true;this.type=type;this.context=context||{};this.context.key=state.path[state.path.length-1];this.context.label=state.key;this.path=state.path;this.options=options;this.flags=flags;this.message=message;this.template=template;const localized=this.options.language;if(this.flags.label){this.context.label=this.flags.label}else if(localized&&(this.context.label===""||this.context.label===null)){this.context.label=localized.root||Language.errors.root}}toString(){if(this.message){return this.message}let format;if(this.template){format=this.template}const localized=this.options.language;format=format||Hoek.reach(localized,this.type)||Hoek.reach(Language.errors,this.type);if(format===undefined){return`Error code "${this.type}" is not defined, your custom type is missing the correct language definition`}let wrapArrays=Hoek.reach(localized,"messages.wrapArrays");if(typeof wrapArrays!=="boolean"){wrapArrays=Language.errors.messages.wrapArrays}if(format===null){const childrenString=internals.stringify(this.context.reason,wrapArrays);if(wrapArrays){return childrenString.slice(1,-1)}return childrenString}const hasKey=/{{!?label}}/.test(format);const skipKey=format.length>2&&format[0]==="!"&&format[1]==="!";if(skipKey){format=format.slice(2)}if(!hasKey&&!skipKey){const localizedKey=Hoek.reach(localized,"key");if(typeof localizedKey==="string"){format=localizedKey+format}else{format=Hoek.reach(Language.errors,"key")+format}}const message=format.replace(/{{(!?)([^}]+)}}/g,($0,isSecure,name)=>{const value=Hoek.reach(this.context,name);const normalized=internals.stringify(value,wrapArrays);return isSecure&&this.options.escapeHtml?Hoek.escapeHtml(normalized):normalized});this.toString=()=>message;return message}};exports.create=function(type,context,state,options,flags,message,template){return new exports.Err(type,context,state,options,flags,message,template)};exports.process=function(errors,object){if(!errors){return null}let message="";const details=[];const processErrors=function(localErrors,parent,overrideMessage){for(let i=0;i<localErrors.length;++i){const item=localErrors[i];if(item instanceof Error){return item}if(item.flags.error&&typeof item.flags.error!=="function"){if(!item.flags.selfError||!item.context.reason){return item.flags.error}}let itemMessage;if(parent===undefined){itemMessage=item.toString();message=message+(message?". ":"")+itemMessage}if(item.context.reason){const override=processErrors(item.context.reason,item.path,item.type==="override"?item.message:null);if(override){return override}}else{details.push({message:overrideMessage||itemMessage||item.toString(),path:item.path,type:item.type,context:item.context})}}};const override=processErrors(errors);if(override){return override}const error=new Error(message);error.isJoi=true;error.name="ValidationError";error.details=details;error._object=object;error.annotate=internals.annotate;return error};internals.safeStringify=function(obj,spaces){return JSON.stringify(obj,internals.serializer(),spaces)};internals.serializer=function(){const keys=[];const stack=[];const cycleReplacer=(key,value)=>{if(stack[0]===value){return"[Circular ~]"}return"[Circular ~."+keys.slice(0,stack.indexOf(value)).join(".")+"]"};return function(key,value){if(stack.length>0){const thisPos=stack.indexOf(this);if(~thisPos){stack.length=thisPos+1;keys.length=thisPos+1;keys[thisPos]=key}else{stack.push(this);keys.push(key)}if(~stack.indexOf(value)){value=cycleReplacer.call(this,key,value)}}else{stack.push(value)}if(value){const annotations=value[internals.annotations];if(annotations){if(Array.isArray(value)){const annotated=[];for(let i=0;i<value.length;++i){if(annotations.errors[i]){annotated.push(`_$idx$_${annotations.errors[i].sort().join(", ")}_$end$_`)}annotated.push(value[i])}value=annotated}else{const errorKeys=Object.keys(annotations.errors);for(let i=0;i<errorKeys.length;++i){const errorKey=errorKeys[i];value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(", ")}_$end$_`]=value[errorKey];value[errorKey]=undefined}const missingKeys=Object.keys(annotations.missing);for(let i=0;i<missingKeys.length;++i){const missingKey=missingKeys[i];value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`]="__missing__"}}return value}}if(value===Infinity||value===-Infinity||Number.isNaN(value)||typeof value==="function"||typeof value==="symbol"){return"["+value.toString()+"]"}return value}};internals.annotate=function(stripColorCodes){const redFgEscape=stripColorCodes?"":"[31m";const redBgEscape=stripColorCodes?"":"[41m";const endColor=stripColorCodes?"":"[0m";if(typeof this._object!=="object"){return this.details[0].message}const obj=Hoek.clone(this._object||{});for(let i=this.details.length-1;i>=0;--i){const pos=i+1;const error=this.details[i];const path=error.path;let ref=obj;for(let j=0;;++j){const seg=path[j];if(ref.isImmutable){ref=ref.clone()}if(j+1<path.length&&ref[seg]&&typeof ref[seg]!=="string"){ref=ref[seg]}else{const refAnnotations=ref[internals.annotations]=ref[internals.annotations]||{errors:{},missing:{}};const value=ref[seg];const cacheKey=seg||error.context.label;if(value!==undefined){refAnnotations.errors[cacheKey]=refAnnotations.errors[cacheKey]||[];refAnnotations.errors[cacheKey].push(pos)}else{refAnnotations.missing[cacheKey]=pos}break}}}const replacers={key:/_\$key\$_([, \d]+)_\$end\$_"/g,missing:/"_\$miss\$_([^|]+)\|(\d+)_\$end\$_": "__missing__"/g,arrayIndex:/\s*"_\$idx\$_([, \d]+)_\$end\$_",?\n(.*)/g,specials:/"\[(NaN|Symbol.*|-?Infinity|function.*|\(.*)]"/g};let message=internals.safeStringify(obj,2).replace(replacers.key,($0,$1)=>`" ${redFgEscape}[${$1}]${endColor}`).replace(replacers.missing,($0,$1,$2)=>`${redBgEscape}"${$1}"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`).replace(replacers.arrayIndex,($0,$1,$2)=>`\n${$2} ${redFgEscape}[${$1}]${endColor}`).replace(replacers.specials,($0,$1)=>$1);message=`${message}\n${redFgEscape}`;for(let i=0;i<this.details.length;++i){const pos=i+1;message=`${message}\n[${pos}] ${this.details[i].message}`}message=message+endColor;return message}},{"./language":143,"@hapi/hoek":128}],142:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("./types/any");const Cast=require("./cast");const Errors=require("./errors");const Lazy=require("./types/lazy");const Ref=require("./ref");const internals={alternatives:require("./types/alternatives"),array:require("./types/array"),boolean:require("./types/boolean"),binary:require("./types/binary"),date:require("./types/date"),func:require("./types/func"),number:require("./types/number"),object:require("./types/object"),string:require("./types/string"),symbol:require("./types/symbol")};internals.callWithDefaults=function(schema,args){Hoek.assert(this,"Must be invoked on a Joi instance.");if(this._defaults){schema=this._defaults(schema)}schema._currentJoi=this;return schema._init(...args)};internals.root=function(){const any=new Any;const root=any.clone();Any.prototype._currentJoi=root;root._currentJoi=root;root._binds=new Set(["any","alternatives","alt","array","bool","boolean","binary","date","func","number","object","string","symbol","validate","describe","compile","assert","attempt","lazy","defaults","extend","allow","valid","only","equal","invalid","disallow","not","required","exist","optional","forbidden","strip","when","empty","default"]);root.any=function(...args){Hoek.assert(args.length===0,"Joi.any() does not allow arguments.");return internals.callWithDefaults.call(this,any,args)};root.alternatives=root.alt=function(...args){return internals.callWithDefaults.call(this,internals.alternatives,args)};root.array=function(...args){Hoek.assert(args.length===0,"Joi.array() does not allow arguments.");return internals.callWithDefaults.call(this,internals.array,args)};root.boolean=root.bool=function(...args){Hoek.assert(args.length===0,"Joi.boolean() does not allow arguments.");return internals.callWithDefaults.call(this,internals.boolean,args)};root.binary=function(...args){Hoek.assert(args.length===0,"Joi.binary() does not allow arguments.");return internals.callWithDefaults.call(this,internals.binary,args)};root.date=function(...args){Hoek.assert(args.length===0,"Joi.date() does not allow arguments.");return internals.callWithDefaults.call(this,internals.date,args)};root.func=function(...args){Hoek.assert(args.length===0,"Joi.func() does not allow arguments.");return internals.callWithDefaults.call(this,internals.func,args)};root.number=function(...args){Hoek.assert(args.length===0,"Joi.number() does not allow arguments.");return internals.callWithDefaults.call(this,internals.number,args)};root.object=function(...args){return internals.callWithDefaults.call(this,internals.object,args)};root.string=function(...args){Hoek.assert(args.length===0,"Joi.string() does not allow arguments.");return internals.callWithDefaults.call(this,internals.string,args)};root.symbol=function(...args){Hoek.assert(args.length===0,"Joi.symbol() does not allow arguments.");return internals.callWithDefaults.call(this,internals.symbol,args)};root.ref=function(...args){return Ref.create(...args)};root.isRef=function(ref){return Ref.isRef(ref)};root.validate=function(value,...args){const last=args[args.length-1];const callback=typeof last==="function"?last:null;const count=args.length-(callback?1:0);if(count===0){return any.validate(value,callback)}const options=count===2?args[1]:undefined;const schema=this.compile(args[0]);return schema._validateWithOptions(value,options,callback)};root.describe=function(...args){const schema=args.length?this.compile(args[0]):any;return schema.describe()};root.compile=function(schema){try{return Cast.schema(this,schema)}catch(err){if(err.hasOwnProperty("path")){err.message=err.message+"("+err.path+")"}throw err}};root.assert=function(value,schema,message){this.attempt(value,schema,message)};root.attempt=function(value,schema,message){const result=this.validate(value,schema);const error=result.error;if(error){if(!message){if(typeof error.annotate==="function"){error.message=error.annotate()}throw error}if(!(message instanceof Error)){if(typeof error.annotate==="function"){error.message=`${message} ${error.annotate()}`}throw error}throw message}return result.value};root.reach=function(schema,path){Hoek.assert(schema&&schema instanceof Any,"you must provide a joi schema");Hoek.assert(Array.isArray(path)||typeof path==="string","path must be a string or an array of strings");const reach=(sourceSchema,schemaPath)=>{if(!schemaPath.length){return sourceSchema}const children=sourceSchema._inner.children;if(!children){return}const key=schemaPath.shift();for(let i=0;i<children.length;++i){const child=children[i];if(child.key===key){return reach(child.schema,schemaPath)}}};const schemaPath=typeof path==="string"?path?path.split("."):[]:path.slice();return reach(schema,schemaPath)};root.lazy=function(...args){return internals.callWithDefaults.call(this,Lazy,args)};root.defaults=function(fn){Hoek.assert(typeof fn==="function","Defaults must be a function");let joi=Object.create(this.any());joi=fn(joi);Hoek.assert(joi&&joi instanceof this.constructor,"defaults() must return a schema");Object.assign(joi,this,joi.clone());joi._defaults=schema=>{if(this._defaults){schema=this._defaults(schema);Hoek.assert(schema instanceof this.constructor,"defaults() must return a schema")}schema=fn(schema);Hoek.assert(schema instanceof this.constructor,"defaults() must return a schema");return schema};return joi};root.bind=function(){const joi=Object.create(this);joi._binds.forEach(bind=>{joi[bind]=joi[bind].bind(joi)});return joi};root.extend=function(...args){const extensions=Hoek.flatten(args);Hoek.assert(extensions.length>0,"You need to provide at least one extension");this.assert(extensions,root.extensionsSchema);const joi=Object.create(this.any());Object.assign(joi,this);joi._currentJoi=joi;joi._binds=new Set(joi._binds);for(let i=0;i<extensions.length;++i){let extension=extensions[i];if(typeof extension==="function"){extension=extension(joi)}this.assert(extension,root.extensionSchema);const base=(extension.base||this.any()).clone();const ctor=base.constructor;const type=class extends ctor{constructor(){super();if(extension.base){Object.assign(this,base)}this._type=extension.name}};if(extension.language){const lang={[extension.name]:extension.language};type.prototype._language=Hoek.applyToDefaults(type.prototype._language||base._settings&&base._settings.language||{},lang)}if(extension.coerce){type.prototype._coerce=function(value,state,options){if(ctor.prototype._coerce){const baseRet=ctor.prototype._coerce.call(this,value,state,options);if(baseRet.errors){return baseRet}value=baseRet.value}const ret=extension.coerce.call(this,value,state,options);if(ret instanceof Errors.Err){return{value:value,errors:ret}}return{value:ret}}}if(extension.pre){type.prototype._base=function(value,state,options){if(ctor.prototype._base){const baseRet=ctor.prototype._base.call(this,value,state,options);if(baseRet.errors){return baseRet}value=baseRet.value}const ret=extension.pre.call(this,value,state,options);if(ret instanceof Errors.Err){return{value:value,errors:ret}}return{value:ret}}}if(extension.rules){for(let j=0;j<extension.rules.length;++j){const rule=extension.rules[j];const ruleArgs=rule.params?rule.params instanceof Any?rule.params._inner.children.map(k=>k.key):Object.keys(rule.params):[];const validateArgs=rule.params?Cast.schema(this,rule.params):null;type.prototype[rule.name]=function(...rArgs){if(rArgs.length>ruleArgs.length){throw new Error("Unexpected number of arguments")}let hasRef=false;let arg={};for(let k=0;k<ruleArgs.length;++k){arg[ruleArgs[k]]=rArgs[k];if(!hasRef&&Ref.isRef(rArgs[k])){hasRef=true}}if(validateArgs){arg=joi.attempt(arg,validateArgs)}let schema;if(rule.validate&&!rule.setup){const validate=function(value,state,options){return rule.validate.call(this,arg,value,state,options)};schema=this._test(rule.name,arg,validate,{description:rule.description,hasRef:hasRef})}else{schema=this.clone()}if(rule.setup){const newSchema=rule.setup.call(schema,arg);if(newSchema!==undefined){Hoek.assert(newSchema instanceof Any,`Setup of extension Joi.${this._type}().${rule.name}() must return undefined or a Joi object`);schema=newSchema}if(rule.validate){const validate=function(value,state,options){return rule.validate.call(this,arg,value,state,options)};schema=schema._test(rule.name,arg,validate,{description:rule.description,hasRef:hasRef})}}return schema}}}if(extension.describe){type.prototype.describe=function(){const description=ctor.prototype.describe.call(this);return extension.describe.call(this,description)}}const instance=new type;joi[extension.name]=function(...extArgs){return internals.callWithDefaults.call(this,instance,extArgs)};joi._binds.add(extension.name)}return joi};root.extensionSchema=internals.object.keys({base:internals.object.type(Any,"Joi object"),name:internals.string.required(),coerce:internals.func.arity(3),pre:internals.func.arity(3),language:internals.object,describe:internals.func.arity(1),rules:internals.array.items(internals.object.keys({name:internals.string.required(),setup:internals.func.arity(1),validate:internals.func.arity(4),params:[internals.object.pattern(/.*/,internals.object.type(Any,"Joi object")),internals.object.type(internals.object.constructor,"Joi object")],description:[internals.string,internals.func.arity(1)]}).or("setup","validate"))}).strict();root.extensionsSchema=internals.array.items([internals.object,internals.func.arity(1)]).strict();root.version=require("../package.json").version;return root};module.exports=internals.root()},{"../package.json":165,"./cast":140,"./errors":141,"./ref":144,"./types/alternatives":147,"./types/any":148,"./types/array":150,"./types/binary":151,"./types/boolean":152,"./types/date":153,"./types/func":154,"./types/lazy":155,"./types/number":156,"./types/object":157,"./types/string":159,"./types/symbol":163,"@hapi/hoek":128}],143:[function(require,module,exports){"use strict";const internals={};exports.errors={root:"value",key:'"{{!label}}" ',messages:{wrapArrays:true},any:{unknown:"is not allowed",invalid:"contains an invalid value",empty:"is not allowed to be empty",required:"is required",allowOnly:"must be one of {{valids}}",default:"threw an error when running default method"},alternatives:{base:"not matching any of the allowed alternatives",child:null},array:{base:"must be an array",includes:"at position {{pos}} does not match any of the allowed types",includesSingle:'single value of "{{!label}}" does not match any of the allowed types',includesOne:"at position {{pos}} fails because {{reason}}",includesOneSingle:'single value of "{{!label}}" fails because {{reason}}',includesRequiredUnknowns:"does not contain {{unknownMisses}} required value(s)",includesRequiredKnowns:"does not contain {{knownMisses}}",includesRequiredBoth:"does not contain {{knownMisses}} and {{unknownMisses}} other required value(s)",excludes:"at position {{pos}} contains an excluded value",excludesSingle:'single value of "{{!label}}" contains an excluded value',hasKnown:'does not contain at least one required match for type "{{!patternLabel}}"',hasUnknown:"does not contain at least one required match",min:"must contain at least {{limit}} items",max:"must contain less than or equal to {{limit}} items",length:"must contain {{limit}} items",ordered:"at position {{pos}} fails because {{reason}}",orderedLength:"at position {{pos}} fails because array must contain at most {{limit}} items",ref:'references "{{ref}}" which is not a positive integer',sparse:"must not be a sparse array",unique:"position {{pos}} contains a duplicate value"},boolean:{base:"must be a boolean"},binary:{base:"must be a buffer or a string",min:"must be at least {{limit}} bytes",max:"must be less than or equal to {{limit}} bytes",length:"must be {{limit}} bytes"},date:{base:"must be a number of milliseconds or valid date string",strict:"must be a valid date",min:'must be larger than or equal to "{{limit}}"',max:'must be less than or equal to "{{limit}}"',less:'must be less than "{{limit}}"',greater:'must be greater than "{{limit}}"',isoDate:"must be a valid ISO 8601 date",timestamp:{javascript:"must be a valid timestamp or number of milliseconds",unix:"must be a valid timestamp or number of seconds"},ref:'references "{{ref}}" which is not a date'},function:{base:"must be a Function",arity:"must have an arity of {{n}}",minArity:"must have an arity greater or equal to {{n}}",maxArity:"must have an arity lesser or equal to {{n}}",ref:"must be a Joi reference",class:"must be a class"},lazy:{base:"!!schema error: lazy schema must be set",schema:"!!schema error: lazy schema function must return a schema"},object:{base:"must be an object",child:'!!child "{{!child}}" fails because {{reason}}',min:"must have at least {{limit}} children",max:"must have less than or equal to {{limit}} children",length:"must have {{limit}} children",allowUnknown:'!!"{{!child}}" is not allowed',with:'!!"{{mainWithLabel}}" missing required peer "{{peerWithLabel}}"',without:'!!"{{mainWithLabel}}" conflict with forbidden peer "{{peerWithLabel}}"',missing:"must contain at least one of {{peersWithLabels}}",xor:"contains a conflict between exclusive peers {{peersWithLabels}}",oxor:"contains a conflict between optional exclusive peers {{peersWithLabels}}",and:"contains {{presentWithLabels}} without its required peers {{missingWithLabels}}",nand:'!!"{{mainWithLabel}}" must not exist simultaneously with {{peersWithLabels}}',assert:'!!"{{ref}}" validation failed because "{{ref}}" failed to {{message}}',rename:{multiple:'cannot rename child "{{from}}" because multiple renames are disabled and another key was already renamed to "{{to}}"',override:'cannot rename child "{{from}}" because override is disabled and target "{{to}}" exists',regex:{multiple:'cannot rename children {{from}} because multiple renames are disabled and another key was already renamed to "{{to}}"',override:'cannot rename children {{from}} because override is disabled and target "{{to}}" exists'}},type:'must be an instance of "{{type}}"',schema:"must be a Joi instance"},number:{base:"must be a number",unsafe:"must be a safe number",min:"must be larger than or equal to {{limit}}",max:"must be less than or equal to {{limit}}",less:"must be less than {{limit}}",greater:"must be greater than {{limit}}",integer:"must be an integer",negative:"must be a negative number",positive:"must be a positive number",precision:"must have no more than {{limit}} decimal places",ref:'references "{{ref}}" which is not a number',multiple:"must be a multiple of {{multiple}}",port:"must be a valid port"},string:{base:"must be a string",min:"length must be at least {{limit}} characters long",max:"length must be less than or equal to {{limit}} characters long",length:"length must be {{limit}} characters long",alphanum:"must only contain alpha-numeric characters",token:"must only contain alpha-numeric and underscore characters",regex:{base:'with value "{{!value}}" fails to match the required pattern: {{pattern}}',name:'with value "{{!value}}" fails to match the {{name}} pattern',invert:{base:'with value "{{!value}}" matches the inverted pattern: {{pattern}}',name:'with value "{{!value}}" matches the inverted {{name}} pattern'}},email:"must be a valid email",uri:"must be a valid uri",uriRelativeOnly:"must be a valid relative uri",uriCustomScheme:"must be a valid uri with a scheme matching the {{scheme}} pattern",isoDate:"must be a valid ISO 8601 date",guid:"must be a valid GUID",hex:"must only contain hexadecimal characters",hexAlign:"hex decoded representation must be byte aligned",base64:"must be a valid base64 string",dataUri:"must be a valid dataUri string",hostname:"must be a valid hostname",normalize:"must be unicode normalized in the {{form}} form",lowercase:"must only contain lowercase characters",uppercase:"must only contain uppercase characters",trim:"must not have leading or trailing whitespace",creditCard:"must be a credit card",ref:'references "{{ref}}" which is not a number',ip:"must be a valid ip address with a {{cidr}} CIDR",ipVersion:"must be a valid ip address of one of the following versions {{version}} with a {{cidr}} CIDR"},symbol:{base:"must be a symbol",map:"must be one of {{map}}"}}},{}],144:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const internals={};exports.create=function(key,options){Hoek.assert(typeof key==="string","Invalid reference key:",key);const settings=Hoek.clone(options);const ref=function(value,validationOptions){return Hoek.reach(ref.isContext?validationOptions.context:value,ref.key,settings)};ref.isContext=key[0]===(settings&&settings.contextPrefix||"$");ref.key=ref.isContext?key.slice(1):key;ref.path=ref.key.split(settings&&settings.separator||".");ref.depth=ref.path.length;ref.root=ref.path[0];ref.isJoi=true;ref.toString=function(){return(ref.isContext?"context:":"ref:")+ref.key};return ref};exports.isRef=function(ref){return typeof ref==="function"&&ref.isJoi};exports.push=function(array,ref){if(exports.isRef(ref)&&!ref.isContext){array.push(ref.root)}}},{"@hapi/hoek":128}],145:[function(require,module,exports){"use strict";const Joi=require("./index");const internals={};exports.options=Joi.object({abortEarly:Joi.boolean(),convert:Joi.boolean(),allowUnknown:Joi.boolean(),skipFunctions:Joi.boolean(),stripUnknown:[Joi.boolean(),Joi.object({arrays:Joi.boolean(),objects:Joi.boolean()}).or("arrays","objects")],language:Joi.object(),presence:Joi.string().only("required","optional","forbidden","ignore"),context:Joi.object(),noDefaults:Joi.boolean(),escapeHtml:Joi.boolean()}).strict()},{"./index":142}],146:[function(require,module,exports){"use strict";const Ref=require("./ref");const internals={};internals.extendedCheckForValue=function(value,insensitive){const valueType=typeof value;if(valueType==="object"){if(value instanceof Date){return item=>{return item instanceof Date&&value.getTime()===item.getTime()}}if(Buffer.isBuffer(value)){return item=>{return Buffer.isBuffer(item)&&value.length===item.length&&value.toString("binary")===item.toString("binary")}}}else if(insensitive&&valueType==="string"){const lowercaseValue=value.toLowerCase();return item=>{return typeof item==="string"&&lowercaseValue===item.toLowerCase()}}return null};module.exports=class InternalSet{constructor(from){this._set=new Set(from);this._hasRef=false}add(value,refs){const isRef=Ref.isRef(value);if(!isRef&&this.has(value,null,null,false)){return this}if(refs!==undefined){Ref.push(refs,value)}this._set.add(value);this._hasRef|=isRef;return this}merge(add,remove){for(const item of add._set){this.add(item)}for(const item of remove._set){this.remove(item)}return this}remove(value){this._set.delete(value);return this}has(value,state,options,insensitive){return!!this.get(value,state,options,insensitive)}get(value,state,options,insensitive){if(!this._set.size){return false}const hasValue=this._set.has(value);if(hasValue){return{value:value}}const extendedCheck=internals.extendedCheckForValue(value,insensitive);if(!extendedCheck){if(state&&this._hasRef){for(let item of this._set){if(Ref.isRef(item)){item=[].concat(item(state.reference||state.parent,options));const found=item.indexOf(value);if(found>=0){return{value:item[found]}}}}}return false}return this._has(value,state,options,extendedCheck)}_has(value,state,options,check){const checkRef=!!(state&&this._hasRef);const isReallyEqual=function(item){if(value===item){return true}return check(item)};for(let item of this._set){if(checkRef&&Ref.isRef(item)){item=item(state.reference||state.parent,options);if(Array.isArray(item)){const found=item.findIndex(isReallyEqual);if(found>=0){return{value:item[found]}}continue}}if(isReallyEqual(item)){return{value:item}}}return false}values(options){if(options&&options.stripUndefined){const values=[];for(const item of this._set){if(item!==undefined){values.push(item)}}return values}return Array.from(this._set)}slice(){const set=new InternalSet(this._set);set._hasRef=this._hasRef;return set}concat(source){const set=new InternalSet([...this._set,...source._set]);set._hasRef=!!(this._hasRef|source._hasRef);return set}}},{"./ref":144}],147:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("../any");const Cast=require("../../cast");const Ref=require("../../ref");const internals={};internals.Alternatives=class extends Any{constructor(){super();this._type="alternatives";this._invalids.remove(null);this._inner.matches=[]}_init(...args){return args.length?this.try(...args):this}_base(value,state,options){const errors=[];const il=this._inner.matches.length;const baseType=this._baseType;for(let i=0;i<il;++i){const item=this._inner.matches[i];if(!item.schema){const schema=item.peek||item.is;const input=item.is?item.ref(state.reference||state.parent,options):value;const failed=schema._validate(input,null,options,state.parent).errors;if(failed){if(item.otherwise){return item.otherwise._validate(value,state,options)}}else if(item.then){return item.then._validate(value,state,options)}if(i===il-1&&baseType){return baseType._validate(value,state,options)}continue}const result=item.schema._validate(value,state,options);if(!result.errors){return result}errors.push(...result.errors)}if(errors.length){return{errors:this.createError("alternatives.child",{reason:errors},state,options)}}return{errors:this.createError("alternatives.base",null,state,options)}}try(...schemas){schemas=Hoek.flatten(schemas);Hoek.assert(schemas.length,"Cannot add other alternatives without at least one schema");const obj=this.clone();for(let i=0;i<schemas.length;++i){const cast=Cast.schema(this._currentJoi,schemas[i]);if(cast._refs.length){obj._refs.push(...cast._refs)}obj._inner.matches.push({schema:cast})}return obj}when(condition,options){let schemaCondition=false;Hoek.assert(Ref.isRef(condition)||typeof condition==="string"||(schemaCondition=condition instanceof Any),"Invalid condition:",condition);Hoek.assert(options,"Missing options");Hoek.assert(typeof options==="object","Invalid options");if(schemaCondition){Hoek.assert(!options.hasOwnProperty("is"),'"is" can not be used with a schema condition')}else{Hoek.assert(options.hasOwnProperty("is"),'Missing "is" directive')}Hoek.assert(options.then!==undefined||options.otherwise!==undefined,'options must have at least one of "then" or "otherwise"');const obj=this.clone();let is;if(!schemaCondition){is=Cast.schema(this._currentJoi,options.is);if(options.is===null||!(Ref.isRef(options.is)||options.is instanceof Any)){is=is.required()}}const item={ref:schemaCondition?null:Cast.ref(condition),peek:schemaCondition?condition:null,is:is,then:options.then!==undefined?Cast.schema(this._currentJoi,options.then):undefined,otherwise:options.otherwise!==undefined?Cast.schema(this._currentJoi,options.otherwise):undefined};if(obj._baseType){item.then=item.then&&obj._baseType.concat(item.then);item.otherwise=item.otherwise&&obj._baseType.concat(item.otherwise)}if(!schemaCondition){Ref.push(obj._refs,item.ref);obj._refs.push(...item.is._refs)}if(item.then&&item.then._refs.length){obj._refs.push(...item.then._refs)}if(item.otherwise&&item.otherwise._refs.length){obj._refs.push(...item.otherwise._refs)}obj._inner.matches.push(item);return obj}label(name){const obj=super.label(name);obj._inner.matches=obj._inner.matches.map(match=>{if(match.schema){return{schema:match.schema.label(name)}}match=Object.assign({},match);if(match.then){match.then=match.then.label(name)}if(match.otherwise){match.otherwise=match.otherwise.label(name)}return match});return obj}describe(){const description=super.describe();const alternatives=[];for(let i=0;i<this._inner.matches.length;++i){const item=this._inner.matches[i];if(item.schema){alternatives.push(item.schema.describe())}else{const when=item.is?{ref:item.ref.toString(),is:item.is.describe()}:{peek:item.peek.describe()};if(item.then){when.then=item.then.describe()}if(item.otherwise){when.otherwise=item.otherwise.describe()}alternatives.push(when)}}description.alternatives=alternatives;return description}};module.exports=new internals.Alternatives},{"../../cast":140,"../../ref":144,"../any":148,"@hapi/hoek":128}],148:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Cast=require("../../cast");const Settings=require("./settings");const Ref=require("../../ref");const Errors=require("../../errors");const State=require("../state");const Symbols=require("../symbols");const Pkg=require("../../../package.json");let Alternatives=null;let Schemas=null;const internals={Set:require("../../set"),symbol:Symbol.for("@hapi/joi/schema")};internals.defaults={abortEarly:true,convert:true,allowUnknown:false,skipFunctions:false,stripUnknown:false,language:{},presence:"optional",noDefaults:false,escapeHtml:false};module.exports=internals.Any=class{constructor(){this.isJoi=true;this._type="any";this._settings=null;this._valids=new internals.Set;this._invalids=new internals.Set;this._tests=[];this._refs=[];this._flags={};this._description=null;this._unit=null;this._notes=[];this._tags=[];this._examples=[];this._meta=[];this._inner={}}_init(){return this}get schemaType(){return this._type}createError(type,context,state,options,flags=this._flags){return Errors.create(type,context,state,options,flags)}createOverrideError(type,context,state,options,message,template){return Errors.create(type,context,state,options,this._flags,message,template)}checkOptions(options){Schemas=Schemas||require("../../schemas");const result=Schemas.options.validate(options);if(result.error){throw new Error(result.error.details[0].message)}}clone(){const obj=Object.create(Object.getPrototypeOf(this));obj.isJoi=true;obj._currentJoi=this._currentJoi;obj._type=this._type;obj._settings=this._settings;obj._baseType=this._baseType;obj._valids=this._valids.slice();obj._invalids=this._invalids.slice();obj._tests=this._tests.slice();obj._refs=this._refs.slice();obj._flags=Hoek.clone(this._flags);obj._description=this._description;obj._unit=this._unit;obj._notes=this._notes.slice();obj._tags=this._tags.slice();obj._examples=this._examples.slice();obj._meta=this._meta.slice();obj._inner={};const inners=Object.keys(this._inner);for(let i=0;i<inners.length;++i){const key=inners[i];obj._inner[key]=this._inner[key]?this._inner[key].slice():null}return obj}concat(schema){Hoek.assert(schema instanceof internals.Any,"Invalid schema object");Hoek.assert(this._type==="any"||schema._type==="any"||schema._type===this._type,"Cannot merge type",this._type,"with another type:",schema._type);let obj=this.clone();if(this._type==="any"&&schema._type!=="any"){const tmpObj=schema.clone();const keysToRestore=["_settings","_valids","_invalids","_tests","_refs","_flags","_description","_unit","_notes","_tags","_examples","_meta","_inner"];for(let i=0;i<keysToRestore.length;++i){tmpObj[keysToRestore[i]]=obj[keysToRestore[i]]}obj=tmpObj}obj._settings=obj._settings?Settings.concat(obj._settings,schema._settings):schema._settings;obj._valids.merge(schema._valids,schema._invalids);obj._invalids.merge(schema._invalids,schema._valids);obj._tests.push(...schema._tests);obj._refs.push(...schema._refs);if(obj._flags.empty&&schema._flags.empty){obj._flags.empty=obj._flags.empty.concat(schema._flags.empty);const flags=Object.assign({},schema._flags);delete flags.empty;Hoek.merge(obj._flags,flags)}else if(schema._flags.empty){obj._flags.empty=schema._flags.empty;const flags=Object.assign({},schema._flags);delete flags.empty;Hoek.merge(obj._flags,flags)}else{Hoek.merge(obj._flags,schema._flags)}obj._description=schema._description||obj._description;obj._unit=schema._unit||obj._unit;obj._notes.push(...schema._notes);obj._tags.push(...schema._tags);obj._examples.push(...schema._examples);obj._meta.push(...schema._meta);const inners=Object.keys(schema._inner);const isObject=obj._type==="object";for(let i=0;i<inners.length;++i){const key=inners[i];const source=schema._inner[key];if(source){const target=obj._inner[key];if(target){if(isObject&&key==="children"){const keys={};for(let j=0;j<target.length;++j){keys[target[j].key]=j}for(let j=0;j<source.length;++j){const sourceKey=source[j].key;if(keys[sourceKey]>=0){target[keys[sourceKey]]={key:sourceKey,schema:target[keys[sourceKey]].schema.concat(source[j].schema)}}else{target.push(source[j])}}}else{obj._inner[key]=obj._inner[key].concat(source)}}else{obj._inner[key]=source.slice()}}}return obj}_test(name,arg,func,options){const obj=this.clone();obj._tests.push({func:func,name:name,arg:arg,options:options});return obj}_testUnique(name,arg,func,options){const obj=this.clone();obj._tests=obj._tests.filter(test=>test.name!==name);obj._tests.push({func:func,name:name,arg:arg,options:options});return obj}options(options){Hoek.assert(!options.context,"Cannot override context");this.checkOptions(options);const obj=this.clone();obj._settings=Settings.concat(obj._settings,options);return obj}strict(isStrict){const obj=this.clone();const convert=isStrict===undefined?false:!isStrict;obj._settings=Settings.concat(obj._settings,{convert:convert});return obj}raw(isRaw){const value=isRaw===undefined?true:isRaw;if(this._flags.raw===value){return this}const obj=this.clone();obj._flags.raw=value;return obj}error(err,options={self:false}){Hoek.assert(err&&(err instanceof Error||typeof err==="function"),"Must provide a valid Error object or a function");const unknownKeys=Object.keys(options).filter(k=>!["self"].includes(k));Hoek.assert(unknownKeys.length===0,`Options ${unknownKeys} are unknown`);const obj=this.clone();obj._flags.error=err;if(options.self){obj._flags.selfError=true}return obj}allow(...values){const obj=this.clone();values=Hoek.flatten(values);for(let i=0;i<values.length;++i){const value=values[i];Hoek.assert(value!==undefined,"Cannot call allow/valid/invalid with undefined");obj._invalids.remove(value);obj._valids.add(value,obj._refs)}return obj}valid(...values){const obj=this.allow(...values);obj._flags.allowOnly=true;return obj}invalid(...values){const obj=this.clone();values=Hoek.flatten(values);for(let i=0;i<values.length;++i){const value=values[i];Hoek.assert(value!==undefined,"Cannot call allow/valid/invalid with undefined");obj._valids.remove(value);obj._invalids.add(value,obj._refs)}return obj}required(){if(this._flags.presence==="required"){return this}const obj=this.clone();obj._flags.presence="required";return obj}optional(){if(this._flags.presence==="optional"){return this}const obj=this.clone();obj._flags.presence="optional";return obj}forbidden(){if(this._flags.presence==="forbidden"){return this}const obj=this.clone();obj._flags.presence="forbidden";return obj}strip(){if(this._flags.strip){return this}const obj=this.clone();obj._flags.strip=true;return obj}applyFunctionToChildren(children,fn,args=[],root){children=[].concat(children);if(children.length!==1||children[0]!==""){root=root?root+".":"";const extraChildren=(children[0]===""?children.slice(1):children).map(child=>{return root+child});throw new Error("unknown key(s) "+extraChildren.join(", "))}return this[fn](...args)}default(value,description){if(typeof value==="function"&&!Ref.isRef(value)){if(!value.description&&description){value.description=description}if(!this._flags.func){Hoek.assert(typeof value.description==="string"&&value.description.length>0,"description must be provided when default value is a function")}}const obj=this.clone();obj._flags.default=value;Ref.push(obj._refs,value);return obj}empty(schema){const obj=this.clone();if(schema===undefined){delete obj._flags.empty}else{obj._flags.empty=Cast.schema(this._currentJoi,schema)}return obj}when(condition,options){Hoek.assert(options&&typeof options==="object","Invalid options");Hoek.assert(options.then!==undefined||options.otherwise!==undefined,'options must have at least one of "then" or "otherwise"');const then=options.hasOwnProperty("then")?this.concat(Cast.schema(this._currentJoi,options.then)):undefined;const otherwise=options.hasOwnProperty("otherwise")?this.concat(Cast.schema(this._currentJoi,options.otherwise)):undefined;Alternatives=Alternatives||require("../alternatives");const alternativeOptions={then:then,otherwise:otherwise};if(Object.prototype.hasOwnProperty.call(options,"is")){alternativeOptions.is=options.is}const obj=Alternatives.when(condition,alternativeOptions);obj._flags.presence="ignore";obj._baseType=this;return obj}description(desc){Hoek.assert(desc&&typeof desc==="string","Description must be a non-empty string");const obj=this.clone();obj._description=desc;return obj}notes(notes){Hoek.assert(notes&&(typeof notes==="string"||Array.isArray(notes)),"Notes must be a non-empty string or array");const obj=this.clone();obj._notes=obj._notes.concat(notes);return obj}tags(tags){Hoek.assert(tags&&(typeof tags==="string"||Array.isArray(tags)),"Tags must be a non-empty string or array");const obj=this.clone();obj._tags=obj._tags.concat(tags);return obj}meta(meta){Hoek.assert(meta!==undefined,"Meta cannot be undefined");const obj=this.clone();obj._meta=obj._meta.concat(meta);return obj}example(...examples){Hoek.assert(examples.length>0,"Missing examples");const processed=[];for(let i=0;i<examples.length;++i){const example=[].concat(examples[i]);Hoek.assert(example.length<=2,`Bad example format at index ${i}`);const value=example[0];let options=example[1];if(options!==undefined){Hoek.assert(options&&typeof options==="object",`Options for example at index ${i} must be an object`);const unknownOptions=Object.keys(options).filter(option=>!["parent","context"].includes(option));Hoek.assert(unknownOptions.length===0,`Unknown example options ${unknownOptions} at index ${i}`)}else{options={}}const localState=new State("",[],options.parent||null);const result=this._validate(value,localState,Settings.concat(internals.defaults,options.context?{context:options.context}:null));Hoek.assert(!result.errors,`Bad example at index ${i}:`,result.errors&&Errors.process(result.errors,value));const ex={value:value};if(Object.keys(options).length){ex.options=options}processed.push(ex)}const obj=this.clone();obj._examples=processed;return obj}unit(name){Hoek.assert(name&&typeof name==="string","Unit name must be a non-empty string");const obj=this.clone();obj._unit=name;return obj}_prepareEmptyValue(value){if(typeof value==="string"&&this._flags.trim){return value.trim()}return value}_validate(value,state,options,reference){const originalValue=value;state=state||new State("",[],null,reference);if(this._settings){const isDefaultOptions=options===internals.defaults;if(isDefaultOptions&&this._settings[Symbols.settingsCache]){options=this._settings[Symbols.settingsCache]}else{options=Settings.concat(this._language?Settings.concat({language:this._language},options):options,this._settings);if(isDefaultOptions){this._settings[Symbols.settingsCache]=options}}}else if(this._language){options=Settings.concat({language:this._language},options)}let errors=[];if(this._coerce){const coerced=this._coerce(value,state,options);if(coerced.errors){value=coerced.value;errors=errors.concat(coerced.errors);return this._finalizeValue(value,originalValue,errors,state,options)}value=coerced.value}if(this._flags.empty&&!this._flags.empty._validate(this._prepareEmptyValue(value),null,internals.defaults).errors){value=undefined}const presence=this._flags.presence||options.presence;if(presence==="optional"){if(value===undefined){const isDeepDefault=this._flags.hasOwnProperty("default")&&this._flags.default===undefined;if(isDeepDefault&&this._type==="object"){value={}}else{return this._finalizeValue(value,originalValue,errors,state,options)}}}else if(presence==="required"&&value===undefined){errors.push(this.createError("any.required",null,state,options));return this._finalizeValue(value,originalValue,errors,state,options)}else if(presence==="forbidden"){if(value===undefined){return this._finalizeValue(value,originalValue,errors,state,options)}errors.push(this.createError("any.unknown",null,state,options));return this._finalizeValue(value,originalValue,errors,state,options)}let match=this._valids.get(value,state,options,this._flags.insensitive);if(match){if(options.convert){value=match.value}return this._finalizeValue(value,originalValue,errors,state,options)}if(this._invalids.has(value,state,options,this._flags.insensitive)){errors.push(this.createError(value===""?"any.empty":"any.invalid",{value:value,invalids:this._invalids.values({stripUndefined:true})},state,options));if(options.abortEarly){return this._finalizeValue(value,originalValue,errors,state,options)}}if(this._base){const base=this._base(value,state,options);if(base.errors){value=base.value;errors=errors.concat(base.errors);return this._finalizeValue(value,originalValue,errors,state,options)}if(base.value!==value){value=base.value;match=this._valids.get(value,state,options,this._flags.insensitive);if(match){value=match.value;return this._finalizeValue(value,originalValue,errors,state,options)}if(this._invalids.has(value,state,options,this._flags.insensitive)){errors.push(this.createError(value===""?"any.empty":"any.invalid",{value:value,invalids:this._invalids.values({stripUndefined:true})},state,options));if(options.abortEarly){return this._finalizeValue(value,originalValue,errors,state,options)}}}}if(this._flags.allowOnly){errors.push(this.createError("any.allowOnly",{value:value,valids:this._valids.values({stripUndefined:true})},state,options));if(options.abortEarly){return this._finalizeValue(value,originalValue,errors,state,options)}}for(let i=0;i<this._tests.length;++i){const test=this._tests[i];const ret=test.func.call(this,value,state,options);if(ret instanceof Errors.Err){errors.push(ret);if(options.abortEarly){return this._finalizeValue(value,originalValue,errors,state,options)}}else{value=ret}}return this._finalizeValue(value,originalValue,errors,state,options)}_finalizeValue(value,originalValue,errors,state,options){let finalValue;if(value!==undefined){finalValue=this._flags.raw?originalValue:value}else if(options.noDefaults){finalValue=value}else if(Ref.isRef(this._flags.default)){finalValue=this._flags.default(state.parent,options)}else if(typeof this._flags.default==="function"&&!(this._flags.func&&!this._flags.default.description)){let args;if(state.parent!==null&&this._flags.default.length>0){args=[Hoek.clone(state.parent),options]}const defaultValue=internals._try(this._flags.default,args);finalValue=defaultValue.value;if(defaultValue.error){errors.push(this.createError("any.default",{error:defaultValue.error},state,options))}}else{finalValue=Hoek.clone(this._flags.default)}if(errors.length&&typeof this._flags.error==="function"&&(!this._flags.selfError||errors.some(e=>state.path.length===e.path.length))){const change=this._flags.error.call(this,errors);if(typeof change==="string"){errors=[this.createOverrideError("override",{reason:errors},state,options,change)]}else{errors=[].concat(change).map(err=>{return err instanceof Error?err:this.createOverrideError(err.type||"override",err.context,state,options,err.message,err.template)})}}return{value:this._flags.strip?undefined:finalValue,finalValue:finalValue,errors:errors.length?errors:null}}_validateWithOptions(value,options,callback){if(options){this.checkOptions(options)}const settings=Settings.concat(internals.defaults,options);const result=this._validate(value,null,settings);const errors=Errors.process(result.errors,value);if(callback){return callback(errors,result.value)}return{error:errors,value:result.value,then(resolve,reject){if(errors){return Promise.reject(errors).catch(reject)}return Promise.resolve(result.value).then(resolve)},catch(reject){if(errors){return Promise.reject(errors).catch(reject)}return Promise.resolve(result.value)}}}validate(value,options,callback){if(typeof options==="function"){return this._validateWithOptions(value,null,options)}return this._validateWithOptions(value,options,callback)}describe(){const description={type:this._type};const flags=Object.keys(this._flags);if(flags.length){if(["empty","default","lazy","label"].some(flag=>this._flags.hasOwnProperty(flag))){description.flags={};for(let i=0;i<flags.length;++i){const flag=flags[i];if(flag==="empty"){description.flags[flag]=this._flags[flag].describe()}else if(flag==="default"){if(Ref.isRef(this._flags[flag])){description.flags[flag]=this._flags[flag].toString()}else if(typeof this._flags[flag]==="function"){description.flags[flag]={description:this._flags[flag].description,function:this._flags[flag]}}else{description.flags[flag]=this._flags[flag]}}else if(flag==="lazy"||flag==="label"){}else{description.flags[flag]=this._flags[flag]}}}else{description.flags=this._flags}}if(this._settings){description.options=Hoek.clone(this._settings)}if(this._baseType){description.base=this._baseType.describe()}if(this._description){description.description=this._description}if(this._notes.length){description.notes=this._notes}if(this._tags.length){description.tags=this._tags}if(this._meta.length){description.meta=this._meta}if(this._examples.length){description.examples=this._examples}if(this._unit){description.unit=this._unit}const valids=this._valids.values();if(valids.length){description.valids=valids.map(v=>{return Ref.isRef(v)?v.toString():v})}const invalids=this._invalids.values();if(invalids.length){description.invalids=invalids.map(v=>{return Ref.isRef(v)?v.toString():v})}description.rules=[];for(let i=0;i<this._tests.length;++i){const validator=this._tests[i];const item={name:validator.name};if(validator.arg!==void 0){item.arg=Ref.isRef(validator.arg)?validator.arg.toString():validator.arg}const options=validator.options;if(options){if(options.hasRef){item.arg={};const keys=Object.keys(validator.arg);for(let j=0;j<keys.length;++j){const key=keys[j];const value=validator.arg[key];item.arg[key]=Ref.isRef(value)?value.toString():value}}if(typeof options.description==="string"){item.description=options.description}else if(typeof options.description==="function"){item.description=options.description(item.arg)}}description.rules.push(item)}if(!description.rules.length){delete description.rules}const label=this._getLabel();if(label){description.label=label}return description}label(name){Hoek.assert(name&&typeof name==="string","Label name must be a non-empty string");const obj=this.clone();obj._flags.label=name;return obj}_getLabel(def){return this._flags.label||def}};internals.Any.prototype.isImmutable=true;internals.Any.prototype.only=internals.Any.prototype.equal=internals.Any.prototype.valid;internals.Any.prototype.disallow=internals.Any.prototype.not=internals.Any.prototype.invalid;internals.Any.prototype.exist=internals.Any.prototype.required;internals.Any.prototype[internals.symbol]={version:Pkg.version,compile:Cast.schema,root:"_currentJoi"};internals._try=function(fn,args=[]){let err;let result;try{result=fn(...args)}catch(e){err=e}return{value:result,error:err}}},{"../../../package.json":165,"../../cast":140,"../../errors":141,"../../ref":144,"../../schemas":145,"../../set":146,"../alternatives":147,"../state":158,"../symbols":164,"./settings":149,"@hapi/hoek":128}],149:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Symbols=require("../symbols");const internals={};exports.concat=function(target,source){if(!source){return target}const obj=Object.assign({},target);const language=source.language;Object.assign(obj,source);if(language&&target&&target.language){obj.language=Hoek.applyToDefaults(target.language,language)}if(obj[Symbols.settingsCache]){delete obj[Symbols.settingsCache]}return obj}},{"../symbols":164,"@hapi/hoek":128}],150:[function(require,module,exports){"use strict";const Bourne=require("@hapi/bourne");const Hoek=require("@hapi/hoek");const Any=require("../any");const Cast=require("../../cast");const Ref=require("../../ref");const State=require("../state");const internals={};internals.fastSplice=function(arr,i){let pos=i;while(pos<arr.length){arr[pos++]=arr[pos]}--arr.length};internals.Array=class extends Any{constructor(){super();this._type="array";this._inner.items=[];this._inner.ordereds=[];this._inner.inclusions=[];this._inner.exclusions=[];this._inner.requireds=[];this._flags.sparse=false}_base(value,state,options){const result={value:value};if(typeof value==="string"&&options.convert){if(value.length>1&&(value[0]==="["||/^\s*\[/.test(value))){try{result.value=Bourne.parse(value)}catch(e){}}}let isArray=Array.isArray(result.value);const wasArray=isArray;if(options.convert&&this._flags.single&&!isArray){result.value=[result.value];isArray=true}if(!isArray){result.errors=this.createError("array.base",null,state,options);return result}if(this._inner.inclusions.length||this._inner.exclusions.length||this._inner.requireds.length||this._inner.ordereds.length||!this._flags.sparse){if(wasArray){result.value=result.value.slice(0)}result.errors=this._checkItems(result.value,wasArray,state,options);if(result.errors&&wasArray&&options.convert&&this._flags.single){const previousErrors=result.errors;result.value=[result.value];result.errors=this._checkItems(result.value,wasArray,state,options);if(result.errors){result.errors=previousErrors;result.value=result.value[0]}}}return result}_checkItems(items,wasArray,state,options){const errors=[];let errored;const requireds=this._inner.requireds.slice();const ordereds=this._inner.ordereds.slice();const inclusions=[...this._inner.inclusions,...requireds];let il=items.length;for(let i=0;i<il;++i){errored=false;const item=items[i];let isValid=false;const key=wasArray?i:state.key;const path=wasArray?[...state.path,i]:state.path;const localState=new State(key,path,state.parent,state.reference);let res;if(!this._flags.sparse&&item===undefined){errors.push(this.createError("array.sparse",null,{key:state.key,path:localState.path,pos:i},options));if(options.abortEarly){return errors}ordereds.shift();continue}for(let j=0;j<this._inner.exclusions.length;++j){res=this._inner.exclusions[j]._validate(item,localState,{});if(!res.errors){errors.push(this.createError(wasArray?"array.excludes":"array.excludesSingle",{pos:i,value:item},{key:state.key,path:localState.path},options));errored=true;if(options.abortEarly){return errors}ordereds.shift();break}}if(errored){continue}if(this._inner.ordereds.length){if(ordereds.length>0){const ordered=ordereds.shift();res=ordered._validate(item,localState,options);if(!res.errors){if(ordered._flags.strip){internals.fastSplice(items,i);--i;--il}else if(!this._flags.sparse&&res.value===undefined){errors.push(this.createError("array.sparse",null,{key:state.key,path:localState.path,pos:i},options));if(options.abortEarly){return errors}continue}else{items[i]=res.value}}else{errors.push(this.createError("array.ordered",{pos:i,reason:res.errors,value:item},{key:state.key,path:localState.path},options));if(options.abortEarly){return errors}}continue}else if(!this._inner.items.length){errors.push(this.createError("array.orderedLength",{pos:i,limit:this._inner.ordereds.length},{key:state.key,path:localState.path},options));if(options.abortEarly){return errors}continue}}const requiredChecks=[];let jl=requireds.length;for(let j=0;j<jl;++j){res=requiredChecks[j]=requireds[j]._validate(item,localState,options);if(!res.errors){items[i]=res.value;isValid=true;internals.fastSplice(requireds,j);--j;--jl;if(!this._flags.sparse&&res.value===undefined){errors.push(this.createError("array.sparse",null,{key:state.key,path:localState.path,pos:i},options));if(options.abortEarly){return errors}}break}}if(isValid){continue}const stripUnknown=options.stripUnknown&&!!options.stripUnknown.arrays||false;jl=inclusions.length;for(let j=0;j<jl;++j){const inclusion=inclusions[j];const previousCheck=requireds.indexOf(inclusion);if(previousCheck!==-1){res=requiredChecks[previousCheck]}else{res=inclusion._validate(item,localState,options);if(!res.errors){if(inclusion._flags.strip){internals.fastSplice(items,i);--i;--il}else if(!this._flags.sparse&&res.value===undefined){errors.push(this.createError("array.sparse",null,{key:state.key,path:localState.path,pos:i},options));errored=true}else{items[i]=res.value}isValid=true;break}}if(jl===1){if(stripUnknown){internals.fastSplice(items,i);--i;--il;isValid=true;break}errors.push(this.createError(wasArray?"array.includesOne":"array.includesOneSingle",{pos:i,reason:res.errors,value:item},{key:state.key,path:localState.path},options));errored=true;if(options.abortEarly){return errors}break}}if(errored){continue}if(this._inner.inclusions.length&&!isValid){if(stripUnknown){internals.fastSplice(items,i);--i;--il;continue}errors.push(this.createError(wasArray?"array.includes":"array.includesSingle",{pos:i,value:item},{key:state.key,path:localState.path},options));if(options.abortEarly){return errors}}}if(requireds.length){this._fillMissedErrors(errors,requireds,state,options)}if(ordereds.length){this._fillOrderedErrors(errors,ordereds,state,options)}return errors.length?errors:null}describe(){const description=super.describe();if(this._inner.ordereds.length){description.orderedItems=[];for(let i=0;i<this._inner.ordereds.length;++i){description.orderedItems.push(this._inner.ordereds[i].describe())}}if(this._inner.items.length){description.items=[];for(let i=0;i<this._inner.items.length;++i){description.items.push(this._inner.items[i].describe())}}if(description.rules){for(let i=0;i<description.rules.length;++i){const rule=description.rules[i];if(rule.name==="has"){rule.arg=rule.arg.describe()}}}return description}items(...schemas){const obj=this.clone();Hoek.flatten(schemas).forEach((type,index)=>{try{type=Cast.schema(this._currentJoi,type)}catch(castErr){if(castErr.hasOwnProperty("path")){castErr.path=index+"."+castErr.path}else{castErr.path=index}castErr.message=`${castErr.message}(${castErr.path})`;throw castErr}obj._inner.items.push(type);if(type._flags.presence==="required"){obj._inner.requireds.push(type)}else if(type._flags.presence==="forbidden"){obj._inner.exclusions.push(type.optional())}else{obj._inner.inclusions.push(type)}});return obj}ordered(...schemas){const obj=this.clone();Hoek.flatten(schemas).forEach((type,index)=>{try{type=Cast.schema(this._currentJoi,type)}catch(castErr){if(castErr.hasOwnProperty("path")){castErr.path=index+"."+castErr.path}else{castErr.path=index}castErr.message=`${castErr.message}(${castErr.path})`;throw castErr}obj._inner.ordereds.push(type)});return obj}min(limit){const isRef=Ref.isRef(limit);Hoek.assert(Number.isSafeInteger(limit)&&limit>=0||isRef,"limit must be a positive integer or reference");return this._testUnique("min",limit,function(value,state,options){let compareTo;if(isRef){compareTo=limit(state.reference||state.parent,options);if(!(Number.isSafeInteger(compareTo)&&compareTo>=0)){return this.createError("array.ref",{ref:limit,value:compareTo},state,options)}}else{compareTo=limit}if(value.length>=compareTo){return value}return this.createError("array.min",{limit:limit,value:value},state,options)})}max(limit){const isRef=Ref.isRef(limit);Hoek.assert(Number.isSafeInteger(limit)&&limit>=0||isRef,"limit must be a positive integer or reference");return this._testUnique("max",limit,function(value,state,options){let compareTo;if(isRef){compareTo=limit(state.reference||state.parent,options);if(!(Number.isSafeInteger(compareTo)&&compareTo>=0)){return this.createError("array.ref",{ref:limit.key},state,options)}}else{compareTo=limit}if(value.length<=compareTo){return value}return this.createError("array.max",{limit:limit,value:value},state,options)})}length(limit){const isRef=Ref.isRef(limit);Hoek.assert(Number.isSafeInteger(limit)&&limit>=0||isRef,"limit must be a positive integer or reference");return this._testUnique("length",limit,function(value,state,options){let compareTo;if(isRef){compareTo=limit(state.reference||state.parent,options);if(!(Number.isSafeInteger(compareTo)&&compareTo>=0)){return this.createError("array.ref",{ref:limit.key},state,options)}}else{compareTo=limit}if(value.length===compareTo){return value}return this.createError("array.length",{limit:limit,value:value},state,options)})}has(schema){try{schema=Cast.schema(this._currentJoi,schema)}catch(castErr){if(castErr.hasOwnProperty("path")){castErr.message=`${castErr.message}(${castErr.path})`}throw castErr}return this._test("has",schema,function(value,state,options){const isValid=value.some((item,idx)=>{const localState=new State(idx,[...state.path,idx],state.key,state.reference);return!schema._validate(item,localState,options).errors});if(isValid){return value}const patternLabel=schema._getLabel();if(patternLabel){return this.createError("array.hasKnown",{patternLabel:patternLabel},state,options)}return this.createError("array.hasUnknown",null,state,options)})}unique(comparator,configs){Hoek.assert(comparator===undefined||typeof comparator==="function"||typeof comparator==="string","comparator must be a function or a string");Hoek.assert(configs===undefined||typeof configs==="object","configs must be an object");const settings={ignoreUndefined:configs&&configs.ignoreUndefined||false};if(typeof comparator==="string"){settings.path=comparator}else if(typeof comparator==="function"){settings.comparator=comparator}return this._test("unique",settings,function(value,state,options){const found={string:Object.create(null),number:Object.create(null),undefined:Object.create(null),boolean:Object.create(null),object:new Map,function:new Map,custom:new Map};const compare=settings.comparator||Hoek.deepEqual;const ignoreUndefined=settings.ignoreUndefined;for(let i=0;i<value.length;++i){const item=settings.path?Hoek.reach(value[i],settings.path):value[i];const records=settings.comparator?found.custom:found[typeof item];if(records){if(records instanceof Map){const entries=records.entries();let current;while(!(current=entries.next()).done){if(compare(current.value[0],item)){const localState=new State(state.key,[...state.path,i],state.parent,state.reference);const context={pos:i,value:value[i],dupePos:current.value[1],dupeValue:value[current.value[1]]};if(settings.path){context.path=settings.path}return this.createError("array.unique",context,localState,options)}}records.set(item,i)}else{if((!ignoreUndefined||item!==undefined)&&records[item]!==undefined){const localState=new State(state.key,[...state.path,i],state.parent,state.reference);const context={pos:i,value:value[i],dupePos:records[item],dupeValue:value[records[item]]};if(settings.path){context.path=settings.path}return this.createError("array.unique",context,localState,options)}records[item]=i}}}return value})}sparse(enabled){const value=enabled===undefined?true:!!enabled;if(this._flags.sparse===value){return this}const obj=this.clone();obj._flags.sparse=value;return obj}single(enabled){const value=enabled===undefined?true:!!enabled;if(this._flags.single===value){return this}const obj=this.clone();obj._flags.single=value;return obj}_fillMissedErrors(errors,requireds,state,options){const knownMisses=[];let unknownMisses=0;for(let i=0;i<requireds.length;++i){const label=requireds[i]._getLabel();if(label){knownMisses.push(label)}else{++unknownMisses}}if(knownMisses.length){if(unknownMisses){errors.push(this.createError("array.includesRequiredBoth",{knownMisses:knownMisses,unknownMisses:unknownMisses},{key:state.key,path:state.path},options))}else{errors.push(this.createError("array.includesRequiredKnowns",{knownMisses:knownMisses},{key:state.key,path:state.path},options))}}else{errors.push(this.createError("array.includesRequiredUnknowns",{unknownMisses:unknownMisses},{key:state.key,path:state.path},options))}}_fillOrderedErrors(errors,ordereds,state,options){const requiredOrdereds=[];for(let i=0;i<ordereds.length;++i){const presence=Hoek.reach(ordereds[i],"_flags.presence");if(presence==="required"){requiredOrdereds.push(ordereds[i])}}if(requiredOrdereds.length){this._fillMissedErrors(errors,requiredOrdereds,state,options)}}};module.exports=new internals.Array},{"../../cast":140,"../../ref":144,"../any":148,"../state":158,"@hapi/bourne":14,"@hapi/hoek":128}],151:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("../any");const internals={};internals.Binary=class extends Any{constructor(){super();this._type="binary"}_base(value,state,options){const result={value:value};if(typeof value==="string"&&options.convert){try{result.value=Buffer.from(value,this._flags.encoding)}catch(e){}}result.errors=Buffer.isBuffer(result.value)?null:this.createError("binary.base",null,state,options);return result}encoding(encoding){Hoek.assert(Buffer.isEncoding(encoding),"Invalid encoding:",encoding);if(this._flags.encoding===encoding){return this}const obj=this.clone();obj._flags.encoding=encoding;return obj}min(limit){Hoek.assert(Number.isSafeInteger(limit)&&limit>=0,"limit must be a positive integer");return this._test("min",limit,function(value,state,options){if(value.length>=limit){return value}return this.createError("binary.min",{limit:limit,value:value},state,options)})}max(limit){Hoek.assert(Number.isSafeInteger(limit)&&limit>=0,"limit must be a positive integer");return this._test("max",limit,function(value,state,options){if(value.length<=limit){return value}return this.createError("binary.max",{limit:limit,value:value},state,options)})}length(limit){Hoek.assert(Number.isSafeInteger(limit)&&limit>=0,"limit must be a positive integer");return this._test("length",limit,function(value,state,options){if(value.length===limit){return value}return this.createError("binary.length",{limit:limit,value:value},state,options)})}};module.exports=new internals.Binary},{"../any":148,"@hapi/hoek":128}],152:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("../any");const internals={Set:require("../../set")};internals.Boolean=class extends Any{constructor(){super();this._type="boolean";this._flags.insensitive=true;this._inner.truthySet=new internals.Set;this._inner.falsySet=new internals.Set}_base(value,state,options){const result={value:value};if(typeof value==="string"&&options.convert){const normalized=this._flags.insensitive?value.toLowerCase():value;result.value=normalized==="true"?true:normalized==="false"?false:value}if(typeof result.value!=="boolean"){result.value=this._inner.truthySet.has(value,null,null,this._flags.insensitive)?true:this._inner.falsySet.has(value,null,null,this._flags.insensitive)?false:value}result.errors=typeof result.value==="boolean"?null:this.createError("boolean.base",{value:value},state,options);return result}truthy(...values){const obj=this.clone();values=Hoek.flatten(values);for(let i=0;i<values.length;++i){const value=values[i];Hoek.assert(value!==undefined,"Cannot call truthy with undefined");obj._inner.truthySet.add(value)}return obj}falsy(...values){const obj=this.clone();values=Hoek.flatten(values);for(let i=0;i<values.length;++i){const value=values[i];Hoek.assert(value!==undefined,"Cannot call falsy with undefined");obj._inner.falsySet.add(value)}return obj}insensitive(enabled){const insensitive=enabled===undefined?true:!!enabled;if(this._flags.insensitive===insensitive){return this}const obj=this.clone();obj._flags.insensitive=insensitive;return obj}describe(){const description=super.describe();description.truthy=[true,...this._inner.truthySet.values()];description.falsy=[false,...this._inner.falsySet.values()];return description}};module.exports=new internals.Boolean},{"../../set":146,"../any":148,"@hapi/hoek":128}],153:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("../any");const Ref=require("../../ref");const internals={};internals.isoDate=/^(?:[-+]\d{2})?(?:\d{4}(?!\d{2}\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\1(?:[12]\d|0[1-9]|3[01]))?|W(?:[0-4]\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\d|[12]\d{2}|3(?:[0-5]\d|6[1-6])))(?![T]$|[T][\d]+Z$)(?:[T\s](?:(?:(?:[01]\d|2[0-3])(?:(:?)[0-5]\d)?|24\:?00)(?:[.,]\d+(?!:))?)(?:\2[0-5]\d(?:[.,]\d+)?)?(?:[Z]|(?:[+-])(?:[01]\d|2[0-3])(?::?[0-5]\d)?)?)?)?$/;internals.invalidDate=new Date("");internals.isIsoDate=(()=>{const isoString=internals.isoDate.toString();return date=>{return date&&date.toString()===isoString}})();internals.Date=class extends Any{constructor(){super();this._type="date"}_base(value,state,options){const result={value:options.convert&&internals.Date.toDate(value,this._flags.format,this._flags.timestamp,this._flags.multiplier)||value};if(result.value instanceof Date&&!isNaN(result.value.getTime())){result.errors=null}else if(!options.convert){result.errors=this.createError("date.strict",{value:value},state,options)}else{let type;if(internals.isIsoDate(this._flags.format)){type="isoDate"}else if(this._flags.timestamp){type=`timestamp.${this._flags.timestamp}`}else{type="base"}result.errors=this.createError(`date.${type}`,{value:value},state,options)}return result}static toDate(value,format,timestamp,multiplier){if(value instanceof Date){return value}if(typeof value==="string"||typeof value==="number"&&!isNaN(value)&&isFinite(value)){const isIsoDate=format&&internals.isIsoDate(format);if(!isIsoDate&&typeof value==="string"&&/^[+-]?\d+(\.\d+)?$/.test(value)){value=parseFloat(value)}let date;if(isIsoDate){date=format.test(value)?new Date(value.toString()):internals.invalidDate}else if(timestamp){date=/^\s*$/.test(value)?internals.invalidDate:new Date(value*multiplier)}else{date=new Date(value)}if(!isNaN(date.getTime())){return date}}return null}iso(){if(this._flags.format===internals.isoDate){return this}const obj=this.clone();obj._flags.format=internals.isoDate;return obj}timestamp(type="javascript"){const allowed=["javascript","unix"];Hoek.assert(allowed.includes(type),'"type" must be one of "'+allowed.join('", "')+'"');if(this._flags.timestamp===type){return this}const obj=this.clone();obj._flags.timestamp=type;obj._flags.multiplier=type==="unix"?1e3:1;return obj}_isIsoDate(value){return internals.isoDate.test(value)}};internals.compare=function(type,compare){return function(date){const isNow=date==="now";const isRef=Ref.isRef(date);if(!isNow&&!isRef){date=internals.Date.toDate(date)}Hoek.assert(date,"Invalid date format");return this._test(type,date,function(value,state,options){let compareTo;if(isNow){compareTo=Date.now()}else if(isRef){const refValue=date(state.reference||state.parent,options);compareTo=internals.Date.toDate(refValue);if(!compareTo){return this.createError("date.ref",{ref:date,value:refValue},state,options)}compareTo=compareTo.getTime()}else{compareTo=date.getTime()}if(compare(value.getTime(),compareTo)){return value}return this.createError("date."+type,{limit:new Date(compareTo),value:value},state,options)})}};internals.Date.prototype.min=internals.compare("min",(value,date)=>value>=date);internals.Date.prototype.max=internals.compare("max",(value,date)=>value<=date);internals.Date.prototype.greater=internals.compare("greater",(value,date)=>value>date);internals.Date.prototype.less=internals.compare("less",(value,date)=>value<date);module.exports=new internals.Date},{"../../ref":144,"../any":148,"@hapi/hoek":128}],154:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const ObjectType=require("../object");const Ref=require("../../ref");const internals={};internals.Func=class extends ObjectType.constructor{constructor(){super();this._flags.func=true}arity(n){Hoek.assert(Number.isSafeInteger(n)&&n>=0,"n must be a positive integer");return this._test("arity",n,function(value,state,options){if(value.length===n){return value}return this.createError("function.arity",{n:n},state,options)})}minArity(n){Hoek.assert(Number.isSafeInteger(n)&&n>0,"n must be a strict positive integer");return this._test("minArity",n,function(value,state,options){if(value.length>=n){return value}return this.createError("function.minArity",{n:n},state,options)})}maxArity(n){Hoek.assert(Number.isSafeInteger(n)&&n>=0,"n must be a positive integer");return this._test("maxArity",n,function(value,state,options){if(value.length<=n){return value}return this.createError("function.maxArity",{n:n},state,options)})}ref(){return this._test("ref",null,function(value,state,options){if(Ref.isRef(value)){return value}return this.createError("function.ref",{value:value},state,options)})}class(){return this._test("class",null,function(value,state,options){if(/^\s*class\s/.test(value.toString())){return value}return this.createError("function.class",{value:value},state,options)})}};module.exports=new internals.Func},{"../../ref":144,"../object":157,"@hapi/hoek":128}],155:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("../any");const internals={};internals.Lazy=class extends Any{constructor(){super();this._type="lazy";this._flags.once=true;this._cache=null}_init(fn,options){return this.set(fn,options)}_base(value,state,options){let schema;if(this._cache){schema=this._cache}else{const result={value:value};const lazy=this._flags.lazy;if(!lazy){result.errors=this.createError("lazy.base",null,state,options);return result}schema=lazy();if(!(schema instanceof Any)){result.errors=this.createError("lazy.schema",{schema:schema},state,options);return result}if(this._flags.once){this._cache=schema}}return schema._validate(value,state,options)}set(fn,options){Hoek.assert(typeof fn==="function","You must provide a function as first argument");Hoek.assert(options===undefined||options&&typeof options==="object"&&!Array.isArray(options),`Options must be an object`);if(options){const unknownOptions=Object.keys(options).filter(key=>!["once"].includes(key));Hoek.assert(unknownOptions.length===0,`Options contain unknown keys: ${unknownOptions}`);Hoek.assert(options.once===undefined||typeof options.once==="boolean",'Option "once" must be a boolean')}const obj=this.clone();obj._flags.lazy=fn;if(options&&options.once!==obj._flags.once){obj._flags.once=options.once}return obj}};module.exports=new internals.Lazy},{"../any":148,"@hapi/hoek":128}],156:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Any=require("../any");const Ref=require("../../ref");const internals={precisionRx:/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/,normalizeExponent(str){return str.replace(/\.?0+e/,"e").replace(/e\+/,"e").replace(/^\+/,"").replace(/^(-?)0+([1-9])/,"$1$2")},normalizeDecimal(str){str=str.replace(/^\+/,"").replace(/\.0+$/,"").replace(/^(-?)0+([1-9])/,"$1$2");if(str.includes(".")&&str.endsWith("0")){str=str.replace(/0+$/,"")}return str}};internals.Number=class extends Any{constructor(){super();this._type="number";this._flags.unsafe=false;this._invalids.add(Infinity);this._invalids.add(-Infinity)}_base(value,state,options){const result={errors:null,value:value};if(typeof value==="string"&&options.convert){const matches=value.match(/^\s*[+-]?\d+(?:\.\d+)?(?:e([+-]?\d+))?\s*$/i);if(matches){value=value.trim();result.value=parseFloat(value);if(!this._flags.unsafe){if(value.includes("e")){if(internals.normalizeExponent(`${result.value/Math.pow(10,matches[1])}e${matches[1]}`)!==internals.normalizeExponent(value)){result.errors=this.createError("number.unsafe",{value:value},state,options);return result}}else{if(result.value.toString()!==internals.normalizeDecimal(value)){result.errors=this.createError("number.unsafe",{value:value},state,options);return result}}}}}const isNumber=typeof result.value==="number"&&!isNaN(result.value);if(options.convert&&"precision"in this._flags&&isNumber){const precision=Math.pow(10,this._flags.precision);result.value=Math.round(result.value*precision)/precision}if(isNumber){if(!this._flags.unsafe&&(value>Number.MAX_SAFE_INTEGER||value<Number.MIN_SAFE_INTEGER)){result.errors=this.createError("number.unsafe",{value:value},state,options)}}else{result.errors=this.createError("number.base",{value:value},state,options)}return result}multiple(base){const isRef=Ref.isRef(base);if(!isRef){Hoek.assert(typeof base==="number"&&isFinite(base),"multiple must be a number");Hoek.assert(base>0,"multiple must be greater than 0")}return this._test("multiple",base,function(value,state,options){const divisor=isRef?base(state.reference||state.parent,options):base;if(isRef&&(typeof divisor!=="number"||!isFinite(divisor))){return this.createError("number.ref",{ref:base.key},state,options)}if(value%divisor===0){return value}return this.createError("number.multiple",{multiple:base,value:value},state,options)})}integer(){return this._test("integer",undefined,function(value,state,options){return Math.trunc(value)-value===0?value:this.createError("number.integer",{value:value},state,options)})}unsafe(enabled=true){Hoek.assert(typeof enabled==="boolean","enabled must be a boolean");if(this._flags.unsafe===enabled){return this}const obj=this.clone();obj._flags.unsafe=enabled;return obj}negative(){return this._test("negative",undefined,function(value,state,options){if(value<0){return value}return this.createError("number.negative",{value:value},state,options)})}positive(){return this._test("positive",undefined,function(value,state,options){if(value>0){return value}return this.createError("number.positive",{value:value},state,options)})}precision(limit){Hoek.assert(Number.isSafeInteger(limit),"limit must be an integer");Hoek.assert(!("precision"in this._flags),"precision already set");const obj=this._test("precision",limit,function(value,state,options){const places=value.toString().match(internals.precisionRx);const decimals=Math.max((places[1]?places[1].length:0)-(places[2]?parseInt(places[2],10):0),0);if(decimals<=limit){return value}return this.createError("number.precision",{limit:limit,value:value},state,options)});obj._flags.precision=limit;return obj}port(){return this._test("port",undefined,function(value,state,options){if(!Number.isSafeInteger(value)||value<0||value>65535){return this.createError("number.port",{value:value},state,options)}return value})}};internals.compare=function(type,compare){return function(limit){const isRef=Ref.isRef(limit);const isNumber=typeof limit==="number"&&!isNaN(limit);Hoek.assert(isNumber||isRef,"limit must be a number or reference");return this._test(type,limit,function(value,state,options){let compareTo;if(isRef){compareTo=limit(state.reference||state.parent,options);if(!(typeof compareTo==="number"&&!isNaN(compareTo))){return this.createError("number.ref",{ref:limit.key},state,options)}}else{compareTo=limit}if(compare(value,compareTo)){return value}return this.createError("number."+type,{limit:compareTo,value:value},state,options)})}};internals.Number.prototype.min=internals.compare("min",(value,limit)=>value>=limit);internals.Number.prototype.max=internals.compare("max",(value,limit)=>value<=limit);internals.Number.prototype.greater=internals.compare("greater",(value,limit)=>value>limit);internals.Number.prototype.less=internals.compare("less",(value,limit)=>value<limit);module.exports=new internals.Number},{"../../ref":144,"../any":148,"@hapi/hoek":128}],157:[function(require,module,exports){"use strict";const Bourne=require("@hapi/bourne");const Hoek=require("@hapi/hoek");const Topo=require("@hapi/topo");const Any=require("../any");const Errors=require("../../errors");const Cast=require("../../cast");const State=require("../state");const internals={};internals.Object=class extends Any{constructor(){super();this._type="object";this._inner.children=null;this._inner.renames=[];this._inner.dependencies=[];this._inner.patterns=[]}_init(...args){return args.length?this.keys(...args):this}_base(value,state,options){let target=value;const errors=[];const finish=()=>{return{value:target,errors:errors.length?errors:null}};if(typeof value==="string"&&options.convert){if(value.length>1&&(value[0]==="{"||/^\s*\{/.test(value))){try{value=Bourne.parse(value)}catch(e){}}}const type=this._flags.func?"function":"object";if(!value||typeof value!==type||Array.isArray(value)){errors.push(this.createError(type+".base",{value:value},state,options));return finish()}if(!this._inner.renames.length&&!this._inner.dependencies.length&&!this._inner.children&&!this._inner.patterns.length){target=value;return finish()}if(target===value){if(type==="object"){target=Object.create(Object.getPrototypeOf(value))}else{target=function(...args){return value.apply(this,args)};target.prototype=Hoek.clone(value.prototype)}const valueKeys=Object.keys(value);for(let i=0;i<valueKeys.length;++i){target[valueKeys[i]]=value[valueKeys[i]]}}else{target=value}const renamed={};for(let i=0;i<this._inner.renames.length;++i){const rename=this._inner.renames[i];if(rename.isRegExp){const targetKeys=Object.keys(target);const matchedTargetKeys=[];for(let j=0;j<targetKeys.length;++j){if(rename.from.test(targetKeys[j])){matchedTargetKeys.push(targetKeys[j])}}const allUndefined=matchedTargetKeys.every(key=>target[key]===undefined);if(rename.options.ignoreUndefined&&allUndefined){continue}if(!rename.options.multiple&&renamed[rename.to]){errors.push(this.createError("object.rename.regex.multiple",{from:matchedTargetKeys,to:rename.to},state,options));if(options.abortEarly){return finish()}}if(Object.prototype.hasOwnProperty.call(target,rename.to)&&!rename.options.override&&!renamed[rename.to]){errors.push(this.createError("object.rename.regex.override",{from:matchedTargetKeys,to:rename.to},state,options));if(options.abortEarly){return finish()}}if(allUndefined){delete target[rename.to]}else{target[rename.to]=target[matchedTargetKeys[matchedTargetKeys.length-1]]}renamed[rename.to]=true;if(!rename.options.alias){for(let j=0;j<matchedTargetKeys.length;++j){delete target[matchedTargetKeys[j]]}}}else{if(rename.options.ignoreUndefined&&target[rename.from]===undefined){continue}if(!rename.options.multiple&&renamed[rename.to]){errors.push(this.createError("object.rename.multiple",{from:rename.from,to:rename.to},state,options));if(options.abortEarly){return finish()}}if(Object.prototype.hasOwnProperty.call(target,rename.to)&&!rename.options.override&&!renamed[rename.to]){errors.push(this.createError("object.rename.override",{from:rename.from,to:rename.to},state,options));if(options.abortEarly){return finish()}}if(target[rename.from]===undefined){delete target[rename.to]}else{target[rename.to]=target[rename.from]}renamed[rename.to]=true;if(!rename.options.alias){delete target[rename.from]}}}if(!this._inner.children&&!this._inner.patterns.length&&!this._inner.dependencies.length){return finish()}const unprocessed=new Set(Object.keys(target));if(this._inner.children){const stripProps=[];for(let i=0;i<this._inner.children.length;++i){const child=this._inner.children[i];const key=child.key;const item=target[key];unprocessed.delete(key);const localState=new State(key,[...state.path,key],target,state.reference);const result=child.schema._validate(item,localState,options);if(result.errors){errors.push(this.createError("object.child",{key:key,child:child.schema._getLabel(key),reason:result.errors},localState,options));if(options.abortEarly){return finish()}}else{if(child.schema._flags.strip||result.value===undefined&&result.value!==item){stripProps.push(key);target[key]=result.finalValue}else if(result.value!==undefined){target[key]=result.value}}}for(let i=0;i<stripProps.length;++i){delete target[stripProps[i]]}}if(unprocessed.size&&this._inner.patterns.length){for(const key of unprocessed){const localState=new State(key,[...state.path,key],target,state.reference);const item=target[key];for(let i=0;i<this._inner.patterns.length;++i){const pattern=this._inner.patterns[i];if(pattern.regex?pattern.regex.test(key):!pattern.schema._validate(key,state,{...options,abortEarly:true}).errors){unprocessed.delete(key);const result=pattern.rule._validate(item,localState,options);if(result.errors){errors.push(this.createError("object.child",{key:key,child:pattern.rule._getLabel(key),reason:result.errors},localState,options));if(options.abortEarly){return finish()}}target[key]=result.value}}}}if(unprocessed.size&&(this._inner.children||this._inner.patterns.length)){if(options.stripUnknown&&this._flags.allowUnknown!==true||options.skipFunctions){const stripUnknown=options.stripUnknown?options.stripUnknown===true?true:!!options.stripUnknown.objects:false;for(const key of unprocessed){if(stripUnknown){delete target[key];unprocessed.delete(key)}else if(typeof target[key]==="function"){unprocessed.delete(key)}}}if(this._flags.allowUnknown!==undefined?!this._flags.allowUnknown:!options.allowUnknown){for(const unprocessedKey of unprocessed){errors.push(this.createError("object.allowUnknown",{child:unprocessedKey,value:target[unprocessedKey]},{key:unprocessedKey,path:[...state.path,unprocessedKey]},options,{}))}}}for(let i=0;i<this._inner.dependencies.length;++i){const dep=this._inner.dependencies[i];const hasKey=dep.key!==null;const splitKey=hasKey&&dep.key.split(".");const localState=hasKey?new State(splitKey[splitKey.length-1],[...state.path,...splitKey]):new State(null,state.path);const err=internals[dep.type].call(this,dep.key,hasKey&&Hoek.reach(target,dep.key,{functions:true}),dep.peers,target,localState,options);if(err instanceof Errors.Err){errors.push(err);if(options.abortEarly){return finish()}}}return finish()}keys(schema){Hoek.assert(schema===null||schema===undefined||typeof schema==="object","Object schema must be a valid object");Hoek.assert(!schema||!(schema instanceof Any),"Object schema cannot be a joi schema");const obj=this.clone();if(!schema){obj._inner.children=null;return obj}const children=Object.keys(schema);if(!children.length){obj._inner.children=[];return obj}const topo=new Topo;if(obj._inner.children){for(let i=0;i<obj._inner.children.length;++i){const child=obj._inner.children[i];if(!children.includes(child.key)){topo.add(child,{after:child._refs,group:child.key})}}}for(let i=0;i<children.length;++i){const key=children[i];const child=schema[key];try{const cast=Cast.schema(this._currentJoi,child);topo.add({key:key,schema:cast},{after:cast._refs,group:key})}catch(castErr){if(castErr.hasOwnProperty("path")){castErr.path=key+"."+castErr.path}else{castErr.path=key}throw castErr}}obj._inner.children=topo.nodes;return obj}append(schema){if(schema===null||schema===undefined||Object.keys(schema).length===0){return this}return this.keys(schema)}unknown(allow){const value=allow!==false;if(this._flags.allowUnknown===value){return this}const obj=this.clone();obj._flags.allowUnknown=value;return obj}length(limit){Hoek.assert(Number.isSafeInteger(limit)&&limit>=0,"limit must be a positive integer");return this._test("length",limit,function(value,state,options){if(Object.keys(value).length===limit){return value}return this.createError("object.length",{limit:limit,value:value},state,options)})}min(limit){Hoek.assert(Number.isSafeInteger(limit)&&limit>=0,"limit must be a positive integer");return this._test("min",limit,function(value,state,options){if(Object.keys(value).length>=limit){return value}return this.createError("object.min",{limit:limit,value:value},state,options)})}max(limit){Hoek.assert(Number.isSafeInteger(limit)&&limit>=0,"limit must be a positive integer");return this._test("max",limit,function(value,state,options){if(Object.keys(value).length<=limit){return value}return this.createError("object.max",{limit:limit,value:value},state,options)})}pattern(pattern,schema){const isRegExp=pattern instanceof RegExp;Hoek.assert(isRegExp||pattern instanceof Any,"pattern must be a regex or schema");Hoek.assert(schema!==undefined,"Invalid rule");if(isRegExp){Hoek.assert(!pattern.flags.includes("g")&&!pattern.flags.includes("y"),"pattern should not use global or sticky mode")}try{schema=Cast.schema(this._currentJoi,schema)}catch(castErr){if(castErr.hasOwnProperty("path")){castErr.message=`${castErr.message}(${castErr.path})`}throw castErr}const obj=this.clone();if(isRegExp){obj._inner.patterns.push({regex:pattern,rule:schema})}else{obj._inner.patterns.push({schema:pattern,rule:schema})}return obj}schema(){return this._test("schema",null,function(value,state,options){if(value instanceof Any){return value}return this.createError("object.schema",null,state,options)})}with(key,peers){Hoek.assert(arguments.length===2,"Invalid number of arguments, expected 2.");return this._dependency("with",key,peers)}without(key,peers){Hoek.assert(arguments.length===2,"Invalid number of arguments, expected 2.");return this._dependency("without",key,peers)}xor(...peers){peers=Hoek.flatten(peers);return this._dependency("xor",null,peers)}oxor(...peers){return this._dependency("oxor",null,peers)}or(...peers){peers=Hoek.flatten(peers);return this._dependency("or",null,peers)}and(...peers){peers=Hoek.flatten(peers);return this._dependency("and",null,peers)}nand(...peers){peers=Hoek.flatten(peers);return this._dependency("nand",null,peers)}requiredKeys(...children){children=Hoek.flatten(children);return this.applyFunctionToChildren(children,"required")}optionalKeys(...children){children=Hoek.flatten(children);return this.applyFunctionToChildren(children,"optional")}forbiddenKeys(...children){children=Hoek.flatten(children);return this.applyFunctionToChildren(children,"forbidden")}rename(from,to,options){Hoek.assert(typeof from==="string"||from instanceof RegExp,"Rename missing the from argument");Hoek.assert(typeof to==="string","Rename missing the to argument");Hoek.assert(to!==from,"Cannot rename key to same name:",from);for(let i=0;i<this._inner.renames.length;++i){Hoek.assert(this._inner.renames[i].from!==from,"Cannot rename the same key multiple times")}const obj=this.clone();obj._inner.renames.push({from:from,to:to,options:Hoek.applyToDefaults(internals.renameDefaults,options||{}),isRegExp:from instanceof RegExp});return obj}applyFunctionToChildren(children,fn,args=[],root){children=[].concat(children);Hoek.assert(children.length>0,"expected at least one children");const groupedChildren=internals.groupChildren(children);let obj;if(""in groupedChildren){obj=this[fn](...args);delete groupedChildren[""]}else{obj=this.clone()}if(obj._inner.children){root=root?root+".":"";for(let i=0;i<obj._inner.children.length;++i){const child=obj._inner.children[i];const group=groupedChildren[child.key];if(group){obj._inner.children[i]={key:child.key,_refs:child._refs,schema:child.schema.applyFunctionToChildren(group,fn,args,root+child.key)};delete groupedChildren[child.key]}}}const remaining=Object.keys(groupedChildren);Hoek.assert(remaining.length===0,"unknown key(s)",remaining.join(", "));return obj}_dependency(type,key,peers){peers=[].concat(peers);for(let i=0;i<peers.length;++i){Hoek.assert(typeof peers[i]==="string",type,"peers must be a string or array of strings")}const obj=this.clone();obj._inner.dependencies.push({type:type,key:key,peers:peers});return obj}describe(shallow){const description=super.describe();if(description.rules){for(let i=0;i<description.rules.length;++i){const rule=description.rules[i];if(rule.arg&&typeof rule.arg==="object"&&rule.arg.schema&&rule.arg.ref){rule.arg={schema:rule.arg.schema.describe(),ref:rule.arg.ref.toString()}}}}if(this._inner.children&&!shallow){description.children={};for(let i=0;i<this._inner.children.length;++i){const child=this._inner.children[i];description.children[child.key]=child.schema.describe()}}if(this._inner.dependencies.length){description.dependencies=Hoek.clone(this._inner.dependencies)}if(this._inner.patterns.length){description.patterns=[];for(let i=0;i<this._inner.patterns.length;++i){const pattern=this._inner.patterns[i];if(pattern.regex){description.patterns.push({regex:pattern.regex.toString(),rule:pattern.rule.describe()})}else{description.patterns.push({schema:pattern.schema.describe(),rule:pattern.rule.describe()})}}}if(this._inner.renames.length>0){description.renames=Hoek.clone(this._inner.renames)}return description}assert(ref,schema,message){ref=Cast.ref(ref);Hoek.assert(ref.isContext||ref.depth>1,"Cannot use assertions for root level references - use direct key rules instead");message=message||"pass the assertion test";Hoek.assert(typeof message==="string","Message must be a string");try{schema=Cast.schema(this._currentJoi,schema)}catch(castErr){if(castErr.hasOwnProperty("path")){castErr.message=`${castErr.message}(${castErr.path})`}throw castErr}const key=ref.path[ref.path.length-1];const path=ref.path.join(".");return this._test("assert",{schema:schema,ref:ref},function(value,state,options){const result=schema._validate(ref(value),null,options,value);if(!result.errors){return value}const localState=new State(key,ref.path,state.parent,state.reference);return this.createError("object.assert",{ref:path,message:message},localState,options)})}type(constructor,name=constructor.name){Hoek.assert(typeof constructor==="function","type must be a constructor function");const typeData={name:name,ctor:constructor};return this._test("type",typeData,function(value,state,options){if(value instanceof constructor){return value}return this.createError("object.type",{type:typeData.name,value:value},state,options)})}};internals.renameDefaults={alias:false,multiple:false,override:false};internals.groupChildren=function(children){children.sort();const grouped={};for(let i=0;i<children.length;++i){const child=children[i];Hoek.assert(typeof child==="string","children must be strings");const group=child.split(".")[0];const childGroup=grouped[group]=grouped[group]||[];childGroup.push(child.substring(group.length+1))}return grouped};internals.keysToLabels=function(schema,keys){const children=schema._inner.children;if(!children){return keys}const findLabel=function(key){const matchingChild=schema._currentJoi.reach(schema,key);return matchingChild?matchingChild._getLabel(key):key};if(Array.isArray(keys)){return keys.map(findLabel)}return findLabel(keys)};internals.with=function(key,value,peers,parent,state,options){if(value===undefined){return}for(let i=0;i<peers.length;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist===undefined){return this.createError("object.with",{main:key,mainWithLabel:internals.keysToLabels(this,key),peer:peer,peerWithLabel:internals.keysToLabels(this,peer)},state,options)}}};internals.without=function(key,value,peers,parent,state,options){if(value===undefined){return}for(let i=0;i<peers.length;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist!==undefined){return this.createError("object.without",{main:key,mainWithLabel:internals.keysToLabels(this,key),peer:peer,peerWithLabel:internals.keysToLabels(this,peer)},state,options)}}};internals.xor=function(key,value,peers,parent,state,options){const present=[];for(let i=0;i<peers.length;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist!==undefined){present.push(peer)}}if(present.length===1){return}const context={peers:peers,peersWithLabels:internals.keysToLabels(this,peers)};if(present.length===0){return this.createError("object.missing",context,state,options)}context.present=present;context.presentWithLabels=internals.keysToLabels(this,present);return this.createError("object.xor",context,state,options)};internals.oxor=function(key,value,peers,parent,state,options){const present=[];for(let i=0;i<peers.length;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist!==undefined){present.push(peer)}}if(!present.length||present.length===1){return}const context={peers:peers,peersWithLabels:internals.keysToLabels(this,peers)};context.present=present;context.presentWithLabels=internals.keysToLabels(this,present);return this.createError("object.oxor",context,state,options)};internals.or=function(key,value,peers,parent,state,options){for(let i=0;i<peers.length;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist!==undefined){return}}return this.createError("object.missing",{peers:peers,peersWithLabels:internals.keysToLabels(this,peers)},state,options)};internals.and=function(key,value,peers,parent,state,options){const missing=[];const present=[];const count=peers.length;for(let i=0;i<count;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist===undefined){missing.push(peer)}else{present.push(peer)}}const aon=missing.length===count||present.length===count;if(!aon){return this.createError("object.and",{present:present,presentWithLabels:internals.keysToLabels(this,present),missing:missing,missingWithLabels:internals.keysToLabels(this,missing)},state,options)}};internals.nand=function(key,value,peers,parent,state,options){const present=[];for(let i=0;i<peers.length;++i){const peer=peers[i];const keysExist=Hoek.reach(parent,peer,{functions:true});if(keysExist!==undefined){present.push(peer)}}const main=peers[0];const values=peers.slice(1);const allPresent=present.length===peers.length;return allPresent?this.createError("object.nand",{main:main,mainWithLabel:internals.keysToLabels(this,main),peers:values,peersWithLabels:internals.keysToLabels(this,values)},state,options):null};module.exports=new internals.Object},{"../../cast":140,"../../errors":141,"../any":148,"../state":158,"@hapi/bourne":14,"@hapi/hoek":128,"@hapi/topo":278}],158:[function(require,module,exports){"use strict";const internals={};module.exports=class{constructor(key,path,parent,reference){this.key=key;this.path=path;this.parent=parent;this.reference=reference}}},{}],159:[function(require,module,exports){"use strict";const Net=require("net");const Address=require("@hapi/address");const Hoek=require("@hapi/hoek");const Any=require("../any");const Ref=require("../../ref");const JoiDate=require("../date");const Uri=require("./uri");const Ip=require("./ip");const internals={uriRegex:Uri.createUriRegex(),ipRegex:Ip.createIpRegex(["ipv4","ipv6","ipvfuture"],"optional"),guidBrackets:{"{":"}","[":"]","(":")","":""},guidVersions:{uuidv1:"1",uuidv2:"2",uuidv3:"3",uuidv4:"4",uuidv5:"5"},cidrPresences:["required","optional","forbidden"],normalizationForms:["NFC","NFD","NFKC","NFKD"]};internals.String=class extends Any{constructor(){super();this._type="string";this._invalids.add("")}_base(value,state,options){if(typeof value==="string"&&options.convert){if(this._flags.normalize){value=value.normalize(this._flags.normalize)}if(this._flags.case){value=this._flags.case==="upper"?value.toLocaleUpperCase():value.toLocaleLowerCase()}if(this._flags.trim){value=value.trim()}if(this._inner.replacements){for(let i=0;i<this._inner.replacements.length;++i){const replacement=this._inner.replacements[i];value=value.replace(replacement.pattern,replacement.replacement)}}if(this._flags.truncate){for(let i=0;i<this._tests.length;++i){const test=this._tests[i];if(test.name==="max"){value=value.slice(0,test.arg);break}}}if(this._flags.byteAligned&&value.length%2!==0){value=`0${value}`}}return{value:value,errors:typeof value==="string"?null:this.createError("string.base",{value:value},state,options)}}insensitive(){if(this._flags.insensitive){return this}const obj=this.clone();obj._flags.insensitive=true;return obj}creditCard(){return this._test("creditCard",undefined,function(value,state,options){let i=value.length;let sum=0;let mul=1;while(i--){const char=value.charAt(i)*mul;sum=sum+(char-(char>9)*9);mul=mul^3}const check=sum%10===0&&sum>0;return check?value:this.createError("string.creditCard",{value:value},state,options)})}regex(pattern,patternOptions){Hoek.assert(pattern instanceof RegExp,"pattern must be a RegExp");Hoek.assert(!pattern.flags.includes("g")&&!pattern.flags.includes("y"),"pattern should not use global or sticky mode");const patternObject={pattern:pattern};if(typeof patternOptions==="string"){patternObject.name=patternOptions}else if(typeof patternOptions==="object"){patternObject.invert=!!patternOptions.invert;if(patternOptions.name){patternObject.name=patternOptions.name}}const errorCode=["string.regex",patternObject.invert?".invert":"",patternObject.name?".name":".base"].join("");return this._test("regex",patternObject,function(value,state,options){const patternMatch=patternObject.pattern.test(value);if(patternMatch^patternObject.invert){return value}return this.createError(errorCode,{name:patternObject.name,pattern:patternObject.pattern,value:value},state,options)})}alphanum(){return this._test("alphanum",undefined,function(value,state,options){if(/^[a-zA-Z0-9]+$/.test(value)){return value}return this.createError("string.alphanum",{value:value},state,options)})}token(){return this._test("token",undefined,function(value,state,options){if(/^\w+$/.test(value)){return value}return this.createError("string.token",{value:value},state,options)})}email(validationOptions){if(validationOptions){Hoek.assert(typeof validationOptions==="object","email options must be an object");Hoek.assert(validationOptions.checkDNS===undefined,"checkDNS option is not supported");Hoek.assert(validationOptions.errorLevel===undefined,"errorLevel option is not supported");Hoek.assert(validationOptions.minDomainAtoms===undefined,"minDomainAtoms option is not supported, use minDomainSegments instead");Hoek.assert(validationOptions.tldBlacklist===undefined,"tldBlacklist option is not supported, use tlds.deny instead");Hoek.assert(validationOptions.tldWhitelist===undefined,"tldWhitelist option is not supported, use tlds.allow instead");if(validationOptions.tlds&&typeof validationOptions.tlds==="object"){Hoek.assert(validationOptions.tlds.allow===undefined||validationOptions.tlds.allow===false||validationOptions.tlds.allow===true||Array.isArray(validationOptions.tlds.allow)||validationOptions.tlds.allow instanceof Set,"tlds.allow must be an array, Set, or boolean");Hoek.assert(validationOptions.tlds.deny===undefined||Array.isArray(validationOptions.tlds.deny)||validationOptions.tlds.deny instanceof Set,"tlds.deny must be an array or Set");const normalizeTable=table=>{if(table===undefined||typeof table==="boolean"||table instanceof Set){return table}return new Set(table)};validationOptions=Object.assign({},validationOptions);validationOptions.tlds={allow:normalizeTable(validationOptions.tlds.allow),deny:normalizeTable(validationOptions.tlds.deny)}}Hoek.assert(validationOptions.minDomainSegments===undefined||Number.isSafeInteger(validationOptions.minDomainSegments)&&validationOptions.minDomainSegments>0,"minDomainSegments must be a positive integer")}return this._test("email",validationOptions,function(value,state,options){if(Address.email.isValid(value,validationOptions)){return value}return this.createError("string.email",{value:value},state,options)})}ip(ipOptions={}){let regex=internals.ipRegex;Hoek.assert(typeof ipOptions==="object","options must be an object");if(ipOptions.cidr){Hoek.assert(typeof ipOptions.cidr==="string","cidr must be a string");ipOptions.cidr=ipOptions.cidr.toLowerCase();Hoek.assert(Hoek.contain(internals.cidrPresences,ipOptions.cidr),"cidr must be one of "+internals.cidrPresences.join(", "));if(!ipOptions.version&&ipOptions.cidr!=="optional"){regex=Ip.createIpRegex(["ipv4","ipv6","ipvfuture"],ipOptions.cidr)}}else{ipOptions.cidr="optional"}let versions;if(ipOptions.version){if(!Array.isArray(ipOptions.version)){ipOptions.version=[ipOptions.version]}Hoek.assert(ipOptions.version.length>=1,"version must have at least 1 version specified");versions=[];for(let i=0;i<ipOptions.version.length;++i){let version=ipOptions.version[i];Hoek.assert(typeof version==="string","version at position "+i+" must be a string");version=version.toLowerCase();Hoek.assert(Ip.versions[version],"version at position "+i+" must be one of "+Object.keys(Ip.versions).join(", "));versions.push(version)}versions=Array.from(new Set(versions));regex=Ip.createIpRegex(versions,ipOptions.cidr)}return this._test("ip",ipOptions,function(value,state,options){if(regex.test(value)){return value}if(versions){return this.createError("string.ipVersion",{value:value,cidr:ipOptions.cidr,version:versions},state,options)}return this.createError("string.ip",{value:value,cidr:ipOptions.cidr},state,options)})}uri(uriOptions){let customScheme="";let allowRelative=false;let relativeOnly=false;let allowQuerySquareBrackets=false;let regex=internals.uriRegex;if(uriOptions){Hoek.assert(typeof uriOptions==="object","options must be an object");const unknownOptions=Object.keys(uriOptions).filter(key=>!["scheme","allowRelative","relativeOnly","allowQuerySquareBrackets"].includes(key));Hoek.assert(unknownOptions.length===0,`options contain unknown keys: ${unknownOptions}`);if(uriOptions.scheme){Hoek.assert(uriOptions.scheme instanceof RegExp||typeof uriOptions.scheme==="string"||Array.isArray(uriOptions.scheme),"scheme must be a RegExp, String, or Array");if(!Array.isArray(uriOptions.scheme)){uriOptions.scheme=[uriOptions.scheme]}Hoek.assert(uriOptions.scheme.length>=1,"scheme must have at least 1 scheme specified");for(let i=0;i<uriOptions.scheme.length;++i){const scheme=uriOptions.scheme[i];Hoek.assert(scheme instanceof RegExp||typeof scheme==="string","scheme at position "+i+" must be a RegExp or String");customScheme=customScheme+(customScheme?"|":"");if(scheme instanceof RegExp){customScheme=customScheme+scheme.source}else{Hoek.assert(/[a-zA-Z][a-zA-Z0-9+-\.]*/.test(scheme),"scheme at position "+i+" must be a valid scheme");customScheme=customScheme+Hoek.escapeRegex(scheme)}}}if(uriOptions.allowRelative){allowRelative=true}if(uriOptions.relativeOnly){relativeOnly=true}if(uriOptions.allowQuerySquareBrackets){allowQuerySquareBrackets=true}}if(customScheme||allowRelative||relativeOnly||allowQuerySquareBrackets){regex=Uri.createUriRegex(customScheme,allowRelative,relativeOnly,allowQuerySquareBrackets)}return this._test("uri",uriOptions,function(value,state,options){if(regex.test(value)){return value}if(relativeOnly){return this.createError("string.uriRelativeOnly",{value:value},state,options)}if(customScheme){return this.createError("string.uriCustomScheme",{scheme:customScheme,value:value},state,options)}return this.createError("string.uri",{value:value},state,options)})}isoDate(){return this._test("isoDate",undefined,function(value,state,options){if(JoiDate._isIsoDate(value)){if(!options.convert){return value}const d=new Date(value);if(!isNaN(d.getTime())){return d.toISOString()}}return this.createError("string.isoDate",{value:value},state,options)})}guid(guidOptions){let versionNumbers="";if(guidOptions&&guidOptions.version){if(!Array.isArray(guidOptions.version)){guidOptions.version=[guidOptions.version]}Hoek.assert(guidOptions.version.length>=1,"version must have at least 1 valid version specified");const versions=new Set;for(let i=0;i<guidOptions.version.length;++i){let version=guidOptions.version[i];Hoek.assert(typeof version==="string","version at position "+i+" must be a string");version=version.toLowerCase();const versionNumber=internals.guidVersions[version];Hoek.assert(versionNumber,"version at position "+i+" must be one of "+Object.keys(internals.guidVersions).join(", "));Hoek.assert(!versions.has(versionNumber),"version at position "+i+" must not be a duplicate.");versionNumbers+=versionNumber;versions.add(versionNumber)}}const guidRegex=new RegExp(`^([\\[{\\(]?)[0-9A-F]{8}([:-]?)[0-9A-F]{4}\\2?[${versionNumbers||"0-9A-F"}][0-9A-F]{3}\\2?[${versionNumbers?"89AB":"0-9A-F"}][0-9A-F]{3}\\2?[0-9A-F]{12}([\\]}\\)]?)$`,"i");return this._test("guid",guidOptions,function(value,state,options){const results=guidRegex.exec(value);if(!results){return this.createError("string.guid",{value:value},state,options)}if(internals.guidBrackets[results[1]]!==results[results.length-1]){return this.createError("string.guid",{value:value},state,options)}return value})}hex(hexOptions={}){Hoek.assert(typeof hexOptions==="object","hex options must be an object");Hoek.assert(typeof hexOptions.byteAligned==="undefined"||typeof hexOptions.byteAligned==="boolean","byteAligned must be boolean");const byteAligned=hexOptions.byteAligned===true;const regex=/^[a-f0-9]+$/i;const obj=this._test("hex",regex,function(value,state,options){if(regex.test(value)){if(byteAligned&&value.length%2!==0){return this.createError("string.hexAlign",{value:value},state,options)}return value}return this.createError("string.hex",{value:value},state,options)});if(byteAligned){obj._flags.byteAligned=true}return obj}base64(base64Options={}){Hoek.assert(typeof base64Options==="object","base64 options must be an object");Hoek.assert(typeof base64Options.paddingRequired==="undefined"||typeof base64Options.paddingRequired==="boolean","paddingRequired must be boolean");const paddingRequired=base64Options.paddingRequired===false?base64Options.paddingRequired:base64Options.paddingRequired||true;const regex=paddingRequired?/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/;return this._test("base64",regex,function(value,state,options){if(regex.test(value)){return value}return this.createError("string.base64",{value:value},state,options)})}dataUri(dataUriOptions={}){const regex=/^data:[\w+.-]+\/[\w+.-]+;((charset=[\w-]+|base64),)?(.*)$/;const paddingRequired=dataUriOptions.paddingRequired===false?dataUriOptions.paddingRequired:dataUriOptions.paddingRequired||true;const base64regex=paddingRequired?/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/:/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/;return this._test("dataUri",regex,function(value,state,options){const matches=value.match(regex);if(matches){if(!matches[2]){return value}if(matches[2]!=="base64"){return value}if(base64regex.test(matches[3])){return value}}return this.createError("string.dataUri",{value:value},state,options)})}hostname(){const regex=/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$/;return this._test("hostname",undefined,function(value,state,options){if(value.length<=255&&regex.test(value)||Net.isIPv6(value)){return value}return this.createError("string.hostname",{value:value},state,options)})}normalize(form="NFC"){Hoek.assert(Hoek.contain(internals.normalizationForms,form),"normalization form must be one of "+internals.normalizationForms.join(", "));const obj=this._test("normalize",form,function(value,state,options){if(options.convert||value===value.normalize(form)){return value}return this.createError("string.normalize",{value:value,form:form},state,options)});obj._flags.normalize=form;return obj}lowercase(){const obj=this._test("lowercase",undefined,function(value,state,options){if(options.convert||value===value.toLocaleLowerCase()){return value}return this.createError("string.lowercase",{value:value},state,options)});obj._flags.case="lower";return obj}uppercase(){const obj=this._test("uppercase",undefined,function(value,state,options){if(options.convert||value===value.toLocaleUpperCase()){return value}return this.createError("string.uppercase",{value:value},state,options)});obj._flags.case="upper";return obj}trim(enabled=true){Hoek.assert(typeof enabled==="boolean","option must be a boolean");if(this._flags.trim&&enabled||!this._flags.trim&&!enabled){return this}let obj;if(enabled){obj=this._test("trim",undefined,function(value,state,options){if(options.convert||value===value.trim()){return value}return this.createError("string.trim",{value:value},state,options)})}else{obj=this.clone();obj._tests=obj._tests.filter(test=>test.name!=="trim")}obj._flags.trim=enabled;return obj}replace(pattern,replacement){if(typeof pattern==="string"){pattern=new RegExp(Hoek.escapeRegex(pattern),"g")}Hoek.assert(pattern instanceof RegExp,"pattern must be a RegExp");Hoek.assert(typeof replacement==="string","replacement must be a String");const obj=this.clone();if(!obj._inner.replacements){obj._inner.replacements=[]}obj._inner.replacements.push({pattern:pattern,replacement:replacement});return obj}truncate(enabled){const value=enabled===undefined?true:!!enabled;if(this._flags.truncate===value){return this}const obj=this.clone();obj._flags.truncate=value;return obj}};internals.compare=function(type,compare){return function(limit,encoding){const isRef=Ref.isRef(limit);Hoek.assert(Number.isSafeInteger(limit)&&limit>=0||isRef,"limit must be a positive integer or reference");Hoek.assert(!encoding||Buffer.isEncoding(encoding),"Invalid encoding:",encoding);return this._test(type,limit,function(value,state,options){let compareTo;if(isRef){compareTo=limit(state.reference||state.parent,options);if(!Number.isSafeInteger(compareTo)){return this.createError("string.ref",{ref:limit,value:compareTo},state,options)}}else{compareTo=limit}if(compare(value,compareTo,encoding)){return value}return this.createError("string."+type,{limit:compareTo,value:value,encoding:encoding},state,options)})}};internals.String.prototype.min=internals.compare("min",(value,limit,encoding)=>{const length=encoding?Buffer.byteLength(value,encoding):value.length;return length>=limit});internals.String.prototype.max=internals.compare("max",(value,limit,encoding)=>{const length=encoding?Buffer.byteLength(value,encoding):value.length;return length<=limit});internals.String.prototype.length=internals.compare("length",(value,limit,encoding)=>{const length=encoding?Buffer.byteLength(value,encoding):value.length;return length===limit});internals.String.prototype.uuid=internals.String.prototype.guid;module.exports=new internals.String},{"../../ref":144,"../any":148,"../date":153,"./ip":160,"./uri":162,"@hapi/address":6,"@hapi/hoek":128,net:undefined}],160:[function(require,module,exports){"use strict";const RFC3986=require("./rfc3986");const internals={Ip:{cidrs:{ipv4:{required:"\\/(?:"+RFC3986.ipv4Cidr+")",optional:"(?:\\/(?:"+RFC3986.ipv4Cidr+"))?",forbidden:""},ipv6:{required:"\\/"+RFC3986.ipv6Cidr,optional:"(?:\\/"+RFC3986.ipv6Cidr+")?",forbidden:""},ipvfuture:{required:"\\/"+RFC3986.ipv6Cidr,optional:"(?:\\/"+RFC3986.ipv6Cidr+")?",forbidden:""}},versions:{ipv4:RFC3986.IPv4address,ipv6:RFC3986.IPv6address,ipvfuture:RFC3986.IPvFuture}}};internals.Ip.createIpRegex=function(versions,cidr){let regex;for(let i=0;i<versions.length;++i){const version=versions[i];if(!regex){regex="^(?:"+internals.Ip.versions[version]+internals.Ip.cidrs[version][cidr]}else{regex+="|"+internals.Ip.versions[version]+internals.Ip.cidrs[version][cidr]}}return new RegExp(regex+")$")};module.exports=internals.Ip},{"./rfc3986":161}],161:[function(require,module,exports){"use strict";const internals={rfc3986:{}};internals.generate=function(){const or="|";const zeroPad="0?";const digit="0-9";const digitOnly="["+digit+"]";const alpha="a-zA-Z";const alphaOnly="["+alpha+"]";internals.rfc3986.ipv4Cidr=digitOnly+or+"[1-2]"+digitOnly+or+"3"+"[0-2]";internals.rfc3986.ipv6Cidr="(?:"+zeroPad+zeroPad+digitOnly+or+zeroPad+"[1-9]"+digitOnly+or+"1"+"[01]"+digitOnly+or+"12[0-8])";const hexDigit=digit+"A-Fa-f";const hexDigitOnly="["+hexDigit+"]";const unreserved=alpha+digit+"-\\._~";const subDelims="!\\$&'\\(\\)\\*\\+,;=";const pctEncoded="%"+hexDigit;const pchar=unreserved+pctEncoded+subDelims+":@";const pcharOnly="["+pchar+"]";const squareBrackets="\\[\\]";const decOctect="(?:"+zeroPad+zeroPad+digitOnly+or+zeroPad+"[1-9]"+digitOnly+or+"1"+digitOnly+digitOnly+or+"2"+"[0-4]"+digitOnly+or+"25"+"[0-5])";internals.rfc3986.IPv4address="(?:"+decOctect+"\\.){3}"+decOctect;const h16=hexDigitOnly+"{1,4}";const ls32="(?:"+h16+":"+h16+"|"+internals.rfc3986.IPv4address+")";const IPv6SixHex="(?:"+h16+":){6}"+ls32;const IPv6FiveHex="::(?:"+h16+":){5}"+ls32;const IPv6FourHex="(?:"+h16+")?::(?:"+h16+":){4}"+ls32;const IPv6ThreeHex="(?:(?:"+h16+":){0,1}"+h16+")?::(?:"+h16+":){3}"+ls32;const IPv6TwoHex="(?:(?:"+h16+":){0,2}"+h16+")?::(?:"+h16+":){2}"+ls32;const IPv6OneHex="(?:(?:"+h16+":){0,3}"+h16+")?::"+h16+":"+ls32;const IPv6NoneHex="(?:(?:"+h16+":){0,4}"+h16+")?::"+ls32;const IPv6NoneHex2="(?:(?:"+h16+":){0,5}"+h16+")?::"+h16;const IPv6NoneHex3="(?:(?:"+h16+":){0,6}"+h16+")?::";internals.rfc3986.IPv6address="(?:"+IPv6SixHex+or+IPv6FiveHex+or+IPv6FourHex+or+IPv6ThreeHex+or+IPv6TwoHex+or+IPv6OneHex+or+IPv6NoneHex+or+IPv6NoneHex2+or+IPv6NoneHex3+")";internals.rfc3986.IPvFuture="v"+hexDigitOnly+"+\\.["+unreserved+subDelims+":]+";internals.rfc3986.scheme=alphaOnly+"["+alpha+digit+"+-\\.]*";const userinfo="["+unreserved+pctEncoded+subDelims+":]*";const IPLiteral="\\[(?:"+internals.rfc3986.IPv6address+or+internals.rfc3986.IPvFuture+")\\]";const regName="["+unreserved+pctEncoded+subDelims+"]{0,255}";const host="(?:"+IPLiteral+or+internals.rfc3986.IPv4address+or+regName+")";const port=digitOnly+"*";const authority="(?:"+userinfo+"@)?"+host+"(?::"+port+")?";const segment=pcharOnly+"*";const segmentNz=pcharOnly+"+";const segmentNzNc="["+unreserved+pctEncoded+subDelims+"@"+"]+";const pathEmpty="";const pathAbEmpty="(?:\\/"+segment+")*";const pathAbsolute="\\/(?:"+segmentNz+pathAbEmpty+")?";const pathRootless=segmentNz+pathAbEmpty;const pathNoScheme=segmentNzNc+pathAbEmpty;internals.rfc3986.hierPart="(?:"+"(?:\\/\\/"+authority+pathAbEmpty+")"+or+pathAbsolute+or+pathRootless+")";internals.rfc3986.relativeRef="(?:"+"(?:\\/\\/"+authority+pathAbEmpty+")"+or+pathAbsolute+or+pathNoScheme+or+pathEmpty+")";internals.rfc3986.query="["+pchar+"\\/\\?]*(?=#|$)";internals.rfc3986.queryWithSquareBrackets="["+pchar+squareBrackets+"\\/\\?]*(?=#|$)";internals.rfc3986.fragment="["+pchar+"\\/\\?]*"};internals.generate();module.exports=internals.rfc3986},{}],162:[function(require,module,exports){"use strict";const RFC3986=require("./rfc3986");const internals={Uri:{createUriRegex:function(optionalScheme,allowRelative,relativeOnly,allowQuerySquareBrackets){let scheme=RFC3986.scheme;let prefix;if(relativeOnly){prefix="(?:"+RFC3986.relativeRef+")"}else{if(optionalScheme){scheme="(?:"+optionalScheme+")"}const withScheme="(?:"+scheme+":"+RFC3986.hierPart+")";prefix=allowRelative?"(?:"+withScheme+"|"+RFC3986.relativeRef+")":withScheme}return new RegExp("^"+prefix+"(?:\\?"+(allowQuerySquareBrackets?RFC3986.queryWithSquareBrackets:RFC3986.query)+")?"+"(?:#"+RFC3986.fragment+")?$")}}};module.exports=internals.Uri},{"./rfc3986":161}],163:[function(require,module,exports){"use strict";const Util=require("util");const Hoek=require("@hapi/hoek");const Any=require("../any");const internals={};internals.Map=class extends Map{slice(){return new internals.Map(this)}toString(){return Util.inspect(this)}};internals.Symbol=class extends Any{constructor(){super();this._type="symbol";this._inner.map=new internals.Map}_base(value,state,options){if(options.convert){const lookup=this._inner.map.get(value);if(lookup){value=lookup}if(this._flags.allowOnly){return{value:value,errors:typeof value==="symbol"?null:this.createError("symbol.map",{value:value,map:this._inner.map},state,options)}}}return{value:value,errors:typeof value==="symbol"?null:this.createError("symbol.base",{value:value},state,options)}}map(iterable){if(iterable&&!iterable[Symbol.iterator]&&typeof iterable==="object"){iterable=Object.entries(iterable)}Hoek.assert(iterable&&iterable[Symbol.iterator],"Iterable must be an iterable or object");const obj=this.clone();const symbols=[];for(const entry of iterable){Hoek.assert(entry&&entry[Symbol.iterator],"Entry must be an iterable");const[key,value]=entry;Hoek.assert(typeof key!=="object"&&typeof key!=="function"&&typeof key!=="symbol","Key must not be an object, function, or Symbol");Hoek.assert(typeof value==="symbol","Value must be a Symbol");obj._inner.map.set(key,value);symbols.push(value)}return obj.valid(...symbols)}describe(){const description=super.describe();description.map=new Map(this._inner.map);return description}};module.exports=new internals.Symbol},{"../any":148,"@hapi/hoek":128,util:undefined}],164:[function(require,module,exports){"use strict";const internals={};module.exports={settingsCache:Symbol("settingsCache")}},{}],165:[function(require,module,exports){module.exports={_from:"@hapi/joi@15.x.x",_id:"@hapi/joi@15.1.1",_inBundle:false,_integrity:"sha512-entf8ZMOK8sc+8YfeOlM8pCfg3b5+WZIKBfUaaJT8UsjAAPjartzxIYm3TIbjvA4u+u++KbcXD38k682nVHDAQ==",_location:"/@hapi/joi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/joi@15.x.x",name:"@hapi/joi",escapedName:"@hapi%2fjoi",scope:"@hapi",rawSpec:"15.x.x",saveSpec:null,fetchSpec:"15.x.x"},_requiredBy:["/@hapi/hapi"],_resolved:"https://registry.npmjs.org/@hapi/joi/-/joi-15.1.1.tgz",_shasum:"c675b8a71296f02833f8d6d243b34c57b8ce19d7",_spec:"@hapi/joi@15.x.x",_where:"/home/osama/Desktop/Dev/hapi-server/node_modules/@hapi/hapi",bugs:{url:"https://github.com/hapijs/joi/issues"},bundleDependencies:false,dependencies:{"@hapi/address":"2.x.x","@hapi/bourne":"1.x.x","@hapi/hoek":"8.x.x","@hapi/topo":"3.x.x"},deprecated:"Switch to 'npm install joi'",description:"Object schema validation",devDependencies:{"@hapi/code":"6.x.x","@hapi/lab":"20.x.x"},homepage:"https://github.com/hapijs/joi",keywords:["schema","validation"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/joi",repository:{type:"git",url:"git://github.com/hapijs/joi.git"},scripts:{test:"lab -t 100 -a @hapi/code -L","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},version:"15.1.1"}},{}],166:[function(require,module,exports){"use strict";const Path=require("path");const Hoek=require("@hapi/hoek");const MimeDb=require("mime-db/db.json");const internals={};internals.compressibleRx=/^text\/|\+json$|\+text$|\+xml$/;internals.compile=function(override){const db=Hoek.clone(MimeDb);Hoek.merge(db,override,{nullOverride:true,mergeArrays:false});const result={byType:db,byExtension:{}};const keys=Object.keys(result.byType);for(let i=0;i<keys.length;++i){const type=keys[i];const mime=result.byType[type];mime.type=mime.type||type;mime.source=mime.source||"mime-db";mime.extensions=mime.extensions||[];mime.compressible=mime.compressible!==undefined?mime.compressible:internals.compressibleRx.test(type);Hoek.assert(!mime.predicate||typeof mime.predicate==="function","predicate option must be a function");for(let j=0;j<mime.extensions.length;++j){const ext=mime.extensions[j];result.byExtension[ext]=mime}}return result};module.exports=class Mimos{constructor(options){options=options||{};const result=options.override?internals.compile(options.override):internals.base;this._byType=result.byType;this._byExtension=result.byExtension}path(path){const extension=Path.extname(path).slice(1).toLowerCase();const mime=this._byExtension[extension]||{};if(mime.predicate){return mime.predicate(Hoek.clone(mime))}return mime}type(type){type=type.split(";",1)[0].trim().toLowerCase();let mime=this._byType[type];if(!mime){mime={type:type,source:"mimos",extensions:[],compressible:internals.compressibleRx.test(type)};this._byType[type]=mime;return mime}if(mime.predicate){return mime.predicate(Hoek.clone(mime))}return mime}};internals.base=internals.compile()},{"@hapi/hoek":128,"mime-db/db.json":284,path:undefined}],167:[function(require,module,exports){"use strict";const Stream=require("stream");const Hoek=require("@hapi/hoek");const Vise=require("@hapi/vise");const internals={};exports.compile=function(needle){Hoek.assert(needle&&needle.length,"Missing needle");Hoek.assert(Buffer.isBuffer(needle),"Needle must be a buffer");const profile={value:needle,lastPos:needle.length-1,last:needle[needle.length-1],length:needle.length,badCharShift:Buffer.alloc(256)};for(let i=0;i<256;++i){profile.badCharShift[i]=profile.length}const last=profile.length-1;for(let i=0;i<last;++i){profile.badCharShift[profile.value[i]]=last-i}return profile};exports.horspool=function(haystack,needle,start){Hoek.assert(haystack,"Missing haystack");needle=needle.badCharShift?needle:exports.compile(needle);start=start||0;for(let i=start;i<=haystack.length-needle.length;){const lastChar=haystack.readUInt8(i+needle.lastPos);if(lastChar===needle.last&&internals.startsWith(haystack,needle,i)){return i}i+=needle.badCharShift[lastChar]}return-1};internals.startsWith=function(haystack,needle,pos){if(haystack.startsWith){return haystack.startsWith(needle.value,pos,needle.lastPos)}for(let i=0;i<needle.lastPos;++i){if(needle.value[i]!==haystack.readUInt8(pos+i)){return false}}return true};exports.all=function(haystack,needle,start){needle=exports.compile(needle);start=start||0;const matches=[];for(let i=start;i!==-1&&i<haystack.length;){i=exports.horspool(haystack,needle,i);if(i!==-1){matches.push(i);i+=needle.length}}return matches};internals._indexOf=function(haystack,needle){Hoek.assert(haystack,"Missing haystack");for(let i=0;i<=haystack.length-needle.length;++i){if(haystack.startsWith(needle.value,i)){return i}}return-1};exports.Stream=internals.Stream=class extends Stream.Writable{constructor(needle){super();this.needle(needle);this._haystack=new Vise;this._indexOf=this._needle.length>2?exports.horspool:internals._indexOf;this.on("finish",()=>{const chunks=this._haystack.chunks();for(let i=0;i<chunks.length;++i){this.emit("haystack",chunks[i])}setImmediate(()=>this.emit("close"))})}needle(needle){this._needle=exports.compile(needle)}_write(chunk,encoding,next){this._haystack.push(chunk);let match=this._indexOf(this._haystack,this._needle);if(match===-1&&chunk.length>=this._needle.length){this._flush(this._haystack.length-chunk.length)}while(match!==-1){this._flush(match);this._haystack.shift(this._needle.length);this.emit("needle");match=this._indexOf(this._haystack,this._needle)}if(this._haystack.length){const notChecked=this._haystack.length-this._needle.length+1;let i=notChecked;for(;i<this._haystack.length;++i){if(this._haystack.startsWith(this._needle.value,i,this._haystack.length-i)){break}}this._flush(i)}return next()}_flush(pos){const chunks=this._haystack.shift(pos);for(let i=0;i<chunks.length;++i){this.emit("haystack",chunks[i])}}flush(){const chunks=this._haystack.shift(this._haystack.length);for(let i=0;i<chunks.length;++i){this.emit("haystack",chunks[i])}}}},{"@hapi/hoek":128,"@hapi/vise":279,stream:undefined}],168:[function(require,module,exports){"use strict";const Stream=require("stream");const B64=require("@hapi/b64");const Boom=require("@hapi/boom");const Content=require("@hapi/content");const Hoek=require("@hapi/hoek");const Nigel=require("@hapi/nigel");const internals={};internals.state={preamble:0,boundary:1,header:2,payload:3,epilogue:4};internals.defaults={maxBytes:Infinity};exports.Dispenser=internals.Dispenser=class extends Stream.Writable{constructor(options){super();Hoek.assert(options!==null&&typeof options==="object","options must be an object");const settings=Hoek.applyToDefaults(internals.defaults,options);this._boundary=settings.boundary;this._state=internals.state.preamble;this._held="";this._stream=null;this._headers={};this._name="";this._pendingHeader="";this._error=null;this._bytes=0;this._maxBytes=settings.maxBytes;this._parts=new Nigel.Stream(Buffer.from("--"+settings.boundary));this._lines=new Nigel.Stream(Buffer.from("\r\n"));this._parts.on("needle",()=>this._onPartEnd());this._parts.on("haystack",chunk=>this._onPart(chunk));this._lines.on("needle",()=>this._onLineEnd());this._lines.on("haystack",chunk=>this._onLine(chunk));this.once("finish",()=>this._parts.end());this._parts.once("close",()=>this._lines.end());let piper=null;let finish=err=>{if(piper){piper.removeListener("data",onReqData);piper.removeListener("error",finish);piper.removeListener("aborted",onReqAborted)}if(err){return this._abort(err)}this._emit("close")};finish=Hoek.once(finish);this._lines.once("close",()=>{if(this._state===internals.state.epilogue){if(this._held){this._emit("epilogue",this._held);this._held=""}}else if(this._state===internals.state.boundary){if(!this._held){this._abort(Boom.badRequest("Missing end boundary"))}else if(this._held!=="--"){this._abort(Boom.badRequest("Only white space allowed after boundary at end"))}}else{this._abort(Boom.badRequest("Incomplete multipart payload"))}setImmediate(finish)});const onReqAborted=()=>{finish(Boom.badRequest("Client request aborted"))};const onReqData=data=>{this._bytes+=Buffer.byteLength(data);if(this._bytes>this._maxBytes){finish(Boom.entityTooLarge("Maximum size exceeded"))}};this.once("pipe",req=>{piper=req;req.on("data",onReqData);req.once("error",finish);req.once("aborted",onReqAborted)})}};internals.Dispenser.prototype._write=function(buffer,encoding,next){if(this._error){return next()}this._parts.write(buffer);return next()};internals.Dispenser.prototype._emit=function(...args){if(this._error){return}this.emit(...args)};internals.Dispenser.prototype._abort=function(err){this._emit("error",err);this._error=err};internals.Dispenser.prototype._onPartEnd=function(){this._lines.flush();if(this._state===internals.state.preamble){if(this._held){const last=this._held.length-1;if(this._held[last]!=="\n"||this._held[last-1]!=="\r"){return this._abort(Boom.badRequest("Preamble missing CRLF terminator"))}this._emit("preamble",this._held.slice(0,-2));this._held=""}this._parts.needle(Buffer.from("\r\n--"+this._boundary))}this._state=internals.state.boundary;if(this._stream){this._stream.end();this._stream=null}else if(this._name){this._emit("field",this._name,this._held);this._name="";this._held=""}};internals.Dispenser.prototype._onPart=function(chunk){if(this._state===internals.state.preamble){this._held=this._held+chunk.toString()}else if(this._state===internals.state.payload){if(this._stream){this._stream.write(chunk)}else{this._held=this._held+chunk.toString()}}else{this._lines.write(chunk)}};internals.Dispenser.prototype._onLineEnd=function(){if(this._state===internals.state.boundary){if(this._held){this._held=this._held.replace(/[\t ]/g,"");if(this._held){if(this._held==="--"){this._state=internals.state.epilogue;this._held="";return}return this._abort(Boom.badRequest("Only white space allowed after boundary"))}}this._state=internals.state.header;return}if(this._state===internals.state.header){if(this._held){if(this._held[0]===" "||this._held[0]==="\t"){if(!this._pendingHeader){return this._abort(Boom.badRequest("Invalid header continuation without valid declaration on previous line"))}this._pendingHeader=this._pendingHeader+" "+this._held.slice(1);this._held="";return}this._flushHeader();this._pendingHeader=this._held;this._held="";return}this._flushHeader();this._state=internals.state.payload;let disposition;try{disposition=Content.disposition(this._headers["content-disposition"])}catch(err){return this._abort(err)}if(disposition.filename!==undefined){const stream=new Stream.PassThrough;const transferEncoding=this._headers["content-transfer-encoding"];if(transferEncoding&&transferEncoding.toLowerCase()==="base64"){this._stream=new B64.Decoder;this._stream.pipe(stream)}else{this._stream=stream}stream.name=disposition.name;stream.filename=disposition.filename;stream.headers=this._headers;this._headers={};this._emit("part",stream)}else{this._name=disposition.name}this._lines.flush();return}this._held=this._held+"\r\n"};internals.Dispenser.prototype._onLine=function(chunk){if(this._stream){this._stream.write(chunk)}else{this._held=this._held+chunk.toString()}};internals.Dispenser.prototype._flushHeader=function(){if(!this._pendingHeader){return}const sep=this._pendingHeader.indexOf(":");if(sep===-1){return this._abort(Boom.badRequest("Invalid header missing colon separator"))}if(!sep){return this._abort(Boom.badRequest("Invalid header missing field name"))}const name=this._pendingHeader.slice(0,sep).toLowerCase();if(name==="__proto__"){return this._abort(Boom.badRequest("Invalid header"))}this._headers[name]=this._pendingHeader.slice(sep+1).trim();this._pendingHeader=""}},{"@hapi/b64":11,"@hapi/boom":12,"@hapi/content":56,"@hapi/hoek":128,"@hapi/nigel":167,stream:undefined}],169:[function(require,module,exports){"use strict";const internals={};exports.location=function(depth=0){const orig=Error.prepareStackTrace;Error.prepareStackTrace=(ignore,stack)=>stack;const capture={};Error.captureStackTrace(capture,this);const line=capture.stack[depth+1];Error.prepareStackTrace=orig;return{filename:line.getFileName(),line:line.getLineNumber()}}},{}],170:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const internals={schema:{base:Joi.object({name:Joi.string().required(),clone:Joi.boolean(),tags:Joi.boolean(),spread:Joi.boolean(),channels:Joi.array().items(Joi.string()).single().unique().min(1)})}};internals.schema.event=internals.schema.base.keys({shared:Joi.boolean()});internals.schema.listener=internals.schema.event.keys({listener:Joi.func().required(),context:Joi.object(),count:Joi.number().integer().min(1),filter:{tags:Joi.array().items(Joi.string()).single().unique().min(1).required(),all:Joi.boolean()}});exports=module.exports=internals.Podium=function(events,options){this._eventListeners=Object.create(null);this._notificationsQueue=[];this._eventsProcessing=false;this._sourcePodiums=[];if(events){this.registerEvent(events,options)}};internals.Podium.decorate=function(target,source){internals.Podium.call(target,null);Object.keys(source._eventListeners).forEach(name=>{target._eventListeners[name]={handlers:null,flags:source._eventListeners[name].flags}})};internals.Podium.validate=function(events){const normalized=[];[].concat(events).forEach(event=>{if(typeof event==="string"){event={name:event}}normalized.push(Joi.attempt(event,internals.schema.event,"Invalid event options"))});return normalized};internals.Podium.prototype.registerEvent=function(events,options={}){events=Hoek.flatten([].concat(events));events.forEach(event=>{if(!event){return}if(event instanceof internals.Podium){return this.registerPodium(event)}if(typeof event==="string"){event={name:event}}if(options.validate!==false){event=Joi.attempt(event,internals.schema.event,"Invalid event options")}const name=event.name;if(this._eventListeners[name]){Hoek.assert(event.shared,`Event ${name} exists`);return}this._eventListeners[name]={handlers:null,flags:event};this._sourcePodiums.forEach(podium=>{if(!podium._eventListeners[name]){podium._eventListeners[name]={handlers:null,flags:event}}})})};internals.Podium.prototype.registerPodium=function(podiums){[].concat(podiums).forEach(podium=>{if(podium._sourcePodiums.indexOf(this)!==-1){return}podium._sourcePodiums.push(this);Object.keys(podium._eventListeners).forEach(name=>{if(!this._eventListeners[name]){this._eventListeners[name]={handlers:null,flags:podium._eventListeners[name].flags}}})})};internals.Podium.prototype.emit=async function(criteria,data,_generated){criteria=internals.criteria(criteria);const name=criteria.name;Hoek.assert(name,"Criteria missing event name");const event=this._eventListeners[name];Hoek.assert(event,`Unknown event ${name}`);if(!event.handlers&&!this._sourcePodiums.length){return}Hoek.assert(!criteria.channel||typeof criteria.channel==="string","Invalid channel name");Hoek.assert(!criteria.channel||!event.flags.channels||event.flags.channels.indexOf(criteria.channel)!==-1,`Unknown ${criteria.channel} channel`);Hoek.assert(!event.flags.spread||Array.isArray(data)||typeof data==="function","Data must be an array for spread event");if(typeof criteria.tags==="string"){Object.assign({},criteria);criteria.tags={[criteria.tags]:true}}if(criteria.tags&&Array.isArray(criteria.tags)){const tags={};for(const tag of criteria.tags){tags[tag]=true}Object.assign({},criteria);criteria.tags=tags}if(event.handlers){const processing=[];const handlers=event.handlers.slice();for(let i=0;i<handlers.length;++i){const handler=handlers[i];if(handler.channels&&(!criteria.channel||handler.channels.indexOf(criteria.channel)===-1)){continue}if(handler.filter){if(!criteria.tags){continue}const match=Hoek.intersect(criteria.tags,handler.filter.tags,{first:!handler.filter.all});if(!match||handler.filter.all&&match.length!==handler.filter.tags.length){continue}}if(handler.count){--handler.count;if(handler.count<1){internals.removeHandler(this,criteria.name,handler)}}if(!_generated&&typeof data==="function"){data=data();_generated=true}const update=internals.flag("clone",handler,event)?Hoek.clone(data):data;const args=internals.flag("spread",handler,event)&&Array.isArray(update)?update:[update];if(internals.flag("tags",handler,event)&&criteria.tags){args.push(criteria.tags)}try{const result=handler.context?handler.listener.apply(handler.context,args):handler.listener(...args);if(result&&typeof result.then==="function"){processing.push(result)}}catch(err){processing.push(Promise.reject(err))}}if(processing.length){await Promise.all(processing)}}if(this._sourcePodiums.length){const podiums=this._sourcePodiums.slice();await Promise.all(podiums.map(podium=>podium.emit(criteria,data,_generated)))}};internals.Podium.prototype.on=internals.Podium.prototype.addListener=function(criteria,listener,context){criteria=Object.assign({},internals.criteria(criteria));criteria.listener=listener;criteria.context=context;if(criteria.filter&&(typeof criteria.filter==="string"||Array.isArray(criteria.filter))){criteria.filter={tags:criteria.filter}}criteria=Joi.attempt(criteria,internals.schema.listener,"Invalid event listener options");const name=criteria.name;const event=this._eventListeners[name];Hoek.assert(event,`Unknown event ${name}`);Hoek.assert(!criteria.channels||!event.flags.channels||Hoek.intersect(event.flags.channels,criteria.channels).length===criteria.channels.length,`Unknown event channels ${criteria.channels&&criteria.channels.join(", ")}`);this._eventListeners[name].handlers=this._eventListeners[name].handlers||[];this._eventListeners[name].handlers.push(criteria);return this};internals.Podium.prototype.once=function(criteria,listener,context){criteria=Object.assign({},internals.criteria(criteria),{count:1});if(listener){return this.on(criteria,listener,context)}return new Promise(resolve=>this.on(criteria,(...args)=>resolve(args),context))};internals.Podium.prototype.removeListener=function(name,listener){Hoek.assert(this._eventListeners[name],`Unknown event ${name}`);Hoek.assert(typeof listener==="function","Listener must be a function");const handlers=this._eventListeners[name].handlers;if(!handlers){return this}const filtered=handlers.filter(handler=>handler.listener!==listener);this._eventListeners[name].handlers=filtered.length?filtered:null;return this};internals.Podium.prototype.removeAllListeners=function(name){Hoek.assert(this._eventListeners[name],`Unknown event ${name}`);this._eventListeners[name].handlers=null;return this};internals.Podium.prototype.hasListeners=function(name){Hoek.assert(this._eventListeners[name],`Unknown event ${name}`);return!!this._eventListeners[name].handlers};internals.removeHandler=function(emitter,name,handler){const handlers=emitter._eventListeners[name].handlers;const filtered=handlers.filter(item=>item!==handler);emitter._eventListeners[name].handlers=filtered.length?filtered:null};internals.criteria=function(criteria){if(typeof criteria==="string"){return{name:criteria}}return criteria};internals.flag=function(name,handler,event){return(handler[name]!==undefined?handler[name]:event.flags[name])||false}},{"@hapi/hoek":128,"@hapi/joi":177}],171:[function(require,module,exports){arguments[4][23][0].apply(exports,arguments)},{"./cache":172,"./common":173,"./compile":174,"./errors":175,"./extend":176,"./manifest":178,"./messages":179,"./modify":180,"./ref":181,"./trace":185,"./validator":201,"./values":202,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/merge":131,dup:23}],172:[function(require,module,exports){arguments[4][24][0].apply(exports,arguments)},{"./common":173,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:24}],173:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{"../package.json":203,"./messages":179,"./schemas":182,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/error":121,dup:25}],174:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{"./common":173,"./ref":181,"@hapi/hoek/lib/assert":115,dup:26}],175:[function(require,module,exports){arguments[4][27][0].apply(exports,arguments)},{"./common":173,"./template":184,"@hapi/hoek/lib/clone":118,dup:27}],176:[function(require,module,exports){arguments[4][28][0].apply(exports,arguments)},{"./common":173,"./messages":179,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:28}],177:[function(require,module,exports){arguments[4][29][0].apply(exports,arguments)},{"./cache":172,"./common":173,"./compile":174,"./errors":175,"./extend":176,"./manifest":178,"./ref":181,"./schemas":182,"./template":184,"./trace":185,"./types/alternatives":186,"./types/any":187,"./types/array":188,"./types/binary":189,"./types/boolean":190,"./types/date":191,"./types/function":192,"./types/link":194,"./types/number":195,"./types/object":196,"./types/string":197,"./types/symbol":200,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:29}],178:[function(require,module,exports){arguments[4][30][0].apply(exports,arguments)},{"./common":173,"./messages":179,"./ref":181,"./schemas":182,"./template":184,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:30}],179:[function(require,module,exports){arguments[4][31][0].apply(exports,arguments)},{"./template":184,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:31}],180:[function(require,module,exports){arguments[4][32][0].apply(exports,arguments)},{"./common":173,"./ref":181,"@hapi/hoek/lib/assert":115,dup:32}],181:[function(require,module,exports){arguments[4][33][0].apply(exports,arguments)},{"./common":173,"./template":184,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:33}],182:[function(require,module,exports){arguments[4][34][0].apply(exports,arguments)},{"./index":177,dup:34}],183:[function(require,module,exports){arguments[4][35][0].apply(exports,arguments)},{"./common":173,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:35}],184:[function(require,module,exports){arguments[4][36][0].apply(exports,arguments)},{"./common":173,"./errors":175,"./ref":181,"@hapi/formula":59,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/escapeHtml":123,dup:36}],185:[function(require,module,exports){arguments[4][37][0].apply(exports,arguments)},{"./errors":175,"@hapi/hoek/lib/deepEqual":120,"@hapi/pinpoint":169,dup:37}],186:[function(require,module,exports){arguments[4][38][0].apply(exports,arguments)},{"../common":173,"../compile":174,"../errors":175,"../ref":181,"./any":187,"@hapi/hoek/lib/assert":115,dup:38}],187:[function(require,module,exports){arguments[4][39][0].apply(exports,arguments)},{"../base":171,"../common":173,"../messages":179,"@hapi/hoek/lib/assert":115,dup:39}],188:[function(require,module,exports){arguments[4][40][0].apply(exports,arguments)},{"../common":173,"../compile":174,"./any":187,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/reach":133,dup:40}],189:[function(require,module,exports){arguments[4][41][0].apply(exports,arguments)},{"../common":173,"./any":187,"@hapi/hoek/lib/assert":115,dup:41}],190:[function(require,module,exports){arguments[4][42][0].apply(exports,arguments)},{"../common":173,"../values":202,"./any":187,"@hapi/hoek/lib/assert":115,dup:42}],191:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments)},{"../common":173,"../template":184,"./any":187,"@hapi/hoek/lib/assert":115,dup:43}],192:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments)},{"./keys":193,"@hapi/hoek/lib/assert":115,dup:44}],193:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments)},{"../common":173,"../compile":174,"../errors":175,"../ref":181,"../template":184,"./any":187,"@hapi/hoek/lib/applyToDefaults":114,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/topo":278,dup:45}],194:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments)},{"../common":173,"../compile":174,"../errors":175,"./any":187,"@hapi/hoek/lib/assert":115,dup:46}],195:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments)},{"../common":173,"./any":187,"@hapi/hoek/lib/assert":115,dup:47}],196:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments)},{"./keys":193,dup:48}],197:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments)},{"../../common":173,"../any":187,"./ip":198,"./uri":199,"@hapi/address/lib/domain":4,"@hapi/address/lib/email":5,"@hapi/address/lib/tlds":7,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:49}],198:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{"./uri":199,dup:50}],199:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments)},{"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:51}],200:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments)},{"./any":187,"@hapi/hoek/lib/assert":115,dup:52}],201:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{"./common":173,"./errors":175,"./state":183,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/ignore":127,"@hapi/hoek/lib/reach":133,dup:53}],202:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{"./common":173,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,dup:54}],203:[function(require,module,exports){module.exports={_from:"@hapi/joi@16.x.x",_id:"@hapi/joi@16.1.8",_inBundle:false,_integrity:"sha512-wAsVvTPe+FwSrsAurNt5vkg3zo+TblvC5Bb1zMVK6SJzZqw9UrJnexxR+76cpePmtUZKHAPxcQ2Bf7oVHyahhg==",_location:"/@hapi/podium/@hapi/joi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/joi@16.x.x",name:"@hapi/joi",escapedName:"@hapi%2fjoi",scope:"@hapi",rawSpec:"16.x.x",saveSpec:null,fetchSpec:"16.x.x"},_requiredBy:["/@hapi/podium"],_resolved:"https://registry.npmjs.org/@hapi/joi/-/joi-16.1.8.tgz",_shasum:"84c1f126269489871ad4e2decc786e0adef06839",_spec:"@hapi/joi@16.x.x",_where:"/home/osama/Desktop/Dev/hapi-server/node_modules/@hapi/podium",browser:"dist/joi-browser.min.js",bugs:{url:"https://github.com/hapijs/joi/issues"},bundleDependencies:false,dependencies:{"@hapi/address":"^2.1.2","@hapi/formula":"^1.2.0","@hapi/hoek":"^8.2.4","@hapi/pinpoint":"^1.0.2","@hapi/topo":"^3.1.3"},deprecated:"Switch to 'npm install joi'",description:"Object schema validation",devDependencies:{"@hapi/bourne":"1.x.x","@hapi/code":"6.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"20.x.x"},files:["lib/**/*","dist/*"],homepage:"https://github.com/hapijs/joi#readme",keywords:["schema","validation"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/joi",repository:{type:"git",url:"git://github.com/hapijs/joi.git"},scripts:{prepublishOnly:"cd browser && npm install && npm run build",test:"lab -t 100 -a @hapi/code -L","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},version:"16.1.8"}},{}],204:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const Joi=require("@hapi/joi");const Request=require("./request");const Response=require("./response");const Symbols=require("./symbols");const internals={};internals.options=Joi.object().keys({url:Joi.alternatives([Joi.string(),Joi.object().keys({protocol:Joi.string(),hostname:Joi.string(),port:Joi.any(),pathname:Joi.string().required(),query:Joi.any()})]).required(),headers:Joi.object(),payload:Joi.any(),simulate:{end:Joi.boolean(),split:Joi.boolean(),error:Joi.boolean(),close:Joi.boolean()},authority:Joi.string(),remoteAddress:Joi.string(),method:Joi.string(),validate:Joi.boolean()});exports.inject=function(dispatchFunc,options){options=typeof options==="string"?{url:options}:options;if(options.validate!==false){try{Hoek.assert(typeof dispatchFunc==="function","Invalid dispatch function");Joi.assert(options,internals.options)}catch(err){return Promise.reject(err)}}return new Promise(resolve=>{const req=new Request(options);const res=new Response(req,resolve);req.prepare(()=>dispatchFunc(req,res))})};exports.isInjection=function(obj){return!!obj[Symbols.injection]}},{"./request":205,"./response":206,"./symbols":207,"@hapi/hoek":128,"@hapi/joi":214}],205:[function(require,module,exports){"use strict";const Stream=require("stream");const Url=require("url");const Symbols=require("./symbols");const internals={};exports=module.exports=internals.Request=class extends Stream.Readable{constructor(options){super();let url=options.url;if(typeof url==="object"){url=Url.format(url)}const uri=Url.parse(url);this.url=uri.path;this.httpVersion="1.1";this.method=options.method?options.method.toUpperCase():"GET";this.headers={};const headers=options.headers||{};const fields=Object.keys(headers);fields.forEach(field=>{this.headers[field.toLowerCase()]=headers[field]});this.headers["user-agent"]=this.headers["user-agent"]||"shot";const hostHeaderFromUri=function(){if(uri.port){return uri.host}if(uri.protocol){return uri.hostname+(uri.protocol==="https:"?":443":":80")}return null};this.headers.host=this.headers.host||hostHeaderFromUri()||options.authority||"localhost:80";this.connection={remoteAddress:options.remoteAddress||"127.0.0.1"};let payload=options.payload||null;if(payload&&typeof payload!=="string"&&!(payload instanceof Stream)&&!Buffer.isBuffer(payload)){payload=JSON.stringify(payload);this.headers["content-type"]=this.headers["content-type"]||"application/json"}if(payload&&!(payload instanceof Stream)&&!this.headers.hasOwnProperty("content-length")){this.headers["content-length"]=(Buffer.isBuffer(payload)?payload.length:Buffer.byteLength(payload)).toString()}this._shot={payload:payload,isDone:false,simulate:options.simulate||{}};return this}prepare(next){if(this._shot.payload instanceof Stream===false){return next()}const chunks=[];this._shot.payload.on("data",chunk=>chunks.push(Buffer.from(chunk)));this._shot.payload.on("end",()=>{const payload=Buffer.concat(chunks);this.headers["content-length"]=this.headers["content-length"]||payload.length;this._shot.payload=payload;return next()})}_read(size){setImmediate(()=>{if(this._shot.isDone){if(this._shot.simulate.end!==false){this.push(null)}return}this._shot.isDone=true;if(this._shot.payload){if(this._shot.simulate.split){this.push(this._shot.payload.slice(0,1));this.push(this._shot.payload.slice(1))}else{this.push(this._shot.payload)}}if(this._shot.simulate.error){this.emit("error",new Error("Simulated"))}if(this._shot.simulate.close){this.emit("close")}if(this._shot.simulate.end!==false){this.push(null)}})}destroy(){}};internals.Request.prototype[Symbols.injection]=true},{"./symbols":207,stream:undefined,url:undefined}],206:[function(require,module,exports){"use strict";const Http=require("http");const Stream=require("stream");const Symbols=require("./symbols");const internals={};exports=module.exports=internals.Response=class extends Http.ServerResponse{constructor(req,onEnd){super({method:req.method,httpVersionMajor:1,httpVersionMinor:1});this._shot={headers:null,trailers:{},payloadChunks:[]};this.assignSocket(internals.nullSocket());this.once("finish",()=>{const res=internals.payload(this);res.raw.req=req;process.nextTick(()=>onEnd(res))})}writeHead(...args){const headers=args[args.length-1];if(typeof headers==="object"&&headers!==null){const headerNames=Object.keys(headers);for(let i=0;i<headerNames.length;++i){const name=headerNames[i];try{this.setHeader(name,headers[name]);break}catch(ignoreErr){}}}const result=super.writeHead(...args);this._shot.headers=this.getHeaders();["Date","Connection","Transfer-Encoding"].forEach(name=>{const regex=new RegExp("\\r\\n"+name+": ([^\\r]*)\\r\\n");const field=this._header.match(regex);if(field){this._shot.headers[name.toLowerCase()]=field[1]}});return result}write(data,encoding,callback){super.write(data,encoding,callback);this._shot.payloadChunks.push(Buffer.from(data,encoding));return true}end(data,encoding,callback){if(data){this.write(data,encoding)}super.end(callback);this.emit("finish")}destroy(){}addTrailers(trailers){for(const key in trailers){this._shot.trailers[key.toLowerCase().trim()]=trailers[key].toString().trim()}}};internals.Response.prototype[Symbols.injection]=true;internals.payload=function(response){const res={raw:{res:response},headers:response._shot.headers,statusCode:response.statusCode,statusMessage:response.statusMessage,trailers:{}};const rawBuffer=Buffer.concat(response._shot.payloadChunks);res.rawPayload=rawBuffer;res.payload=rawBuffer.toString();res.trailers=response._shot.trailers;return res};internals.nullSocket=function(){return new Stream.Writable({write(chunk,encoding,callback){setImmediate(callback)}})}},{"./symbols":207,http:undefined,stream:undefined}],207:[function(require,module,exports){"use strict";const internals={};exports.injection=Symbol("injection")},{}],208:[function(require,module,exports){arguments[4][23][0].apply(exports,arguments)},{"./cache":209,"./common":210,"./compile":211,"./errors":212,"./extend":213,"./manifest":215,"./messages":216,"./modify":217,"./ref":218,"./trace":222,"./validator":238,"./values":239,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/merge":131,dup:23}],209:[function(require,module,exports){arguments[4][24][0].apply(exports,arguments)},{"./common":210,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:24}],210:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{"../package.json":240,"./messages":216,"./schemas":219,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/error":121,dup:25}],211:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{"./common":210,"./ref":218,"@hapi/hoek/lib/assert":115,dup:26}],212:[function(require,module,exports){arguments[4][27][0].apply(exports,arguments)},{"./common":210,"./template":221,"@hapi/hoek/lib/clone":118,dup:27}],213:[function(require,module,exports){arguments[4][28][0].apply(exports,arguments)},{"./common":210,"./messages":216,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:28}],214:[function(require,module,exports){arguments[4][29][0].apply(exports,arguments)},{"./cache":209,"./common":210,"./compile":211,"./errors":212,"./extend":213,"./manifest":215,"./ref":218,"./schemas":219,"./template":221,"./trace":222,"./types/alternatives":223,"./types/any":224,"./types/array":225,"./types/binary":226,"./types/boolean":227,"./types/date":228,"./types/function":229,"./types/link":231,"./types/number":232,"./types/object":233,"./types/string":234,"./types/symbol":237,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:29}],215:[function(require,module,exports){arguments[4][30][0].apply(exports,arguments)},{"./common":210,"./messages":216,"./ref":218,"./schemas":219,"./template":221,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:30}],216:[function(require,module,exports){arguments[4][31][0].apply(exports,arguments)},{"./template":221,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:31}],217:[function(require,module,exports){arguments[4][32][0].apply(exports,arguments)},{"./common":210,"./ref":218,"@hapi/hoek/lib/assert":115,dup:32}],218:[function(require,module,exports){arguments[4][33][0].apply(exports,arguments)},{"./common":210,"./template":221,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:33}],219:[function(require,module,exports){arguments[4][34][0].apply(exports,arguments)},{"./index":214,dup:34}],220:[function(require,module,exports){arguments[4][35][0].apply(exports,arguments)},{"./common":210,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:35}],221:[function(require,module,exports){arguments[4][36][0].apply(exports,arguments)},{"./common":210,"./errors":212,"./ref":218,"@hapi/formula":59,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/escapeHtml":123,dup:36}],222:[function(require,module,exports){arguments[4][37][0].apply(exports,arguments)},{"./errors":212,"@hapi/hoek/lib/deepEqual":120,"@hapi/pinpoint":169,dup:37}],223:[function(require,module,exports){arguments[4][38][0].apply(exports,arguments)},{"../common":210,"../compile":211,"../errors":212,"../ref":218,"./any":224,"@hapi/hoek/lib/assert":115,dup:38}],224:[function(require,module,exports){arguments[4][39][0].apply(exports,arguments)},{"../base":208,"../common":210,"../messages":216,"@hapi/hoek/lib/assert":115,dup:39}],225:[function(require,module,exports){arguments[4][40][0].apply(exports,arguments)},{"../common":210,"../compile":211,"./any":224,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/reach":133,dup:40}],226:[function(require,module,exports){arguments[4][41][0].apply(exports,arguments)},{"../common":210,"./any":224,"@hapi/hoek/lib/assert":115,dup:41}],227:[function(require,module,exports){arguments[4][42][0].apply(exports,arguments)},{"../common":210,"../values":239,"./any":224,"@hapi/hoek/lib/assert":115,dup:42}],228:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments)},{"../common":210,"../template":221,"./any":224,"@hapi/hoek/lib/assert":115,dup:43}],229:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments)},{"./keys":230,"@hapi/hoek/lib/assert":115,dup:44}],230:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments)},{"../common":210,"../compile":211,"../errors":212,"../ref":218,"../template":221,"./any":224,"@hapi/hoek/lib/applyToDefaults":114,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/topo":278,dup:45}],231:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments)},{"../common":210,"../compile":211,"../errors":212,"./any":224,"@hapi/hoek/lib/assert":115,dup:46}],232:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments)},{"../common":210,"./any":224,"@hapi/hoek/lib/assert":115,dup:47}],233:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments)},{"./keys":230,dup:48}],234:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments)},{"../../common":210,"../any":224,"./ip":235,"./uri":236,"@hapi/address/lib/domain":4,"@hapi/address/lib/email":5,"@hapi/address/lib/tlds":7,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:49}],235:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{"./uri":236,dup:50}],236:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments)},{"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:51}],237:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments)},{"./any":224,"@hapi/hoek/lib/assert":115,dup:52}],238:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{"./common":210,"./errors":212,"./state":220,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/ignore":127,"@hapi/hoek/lib/reach":133,dup:53}],239:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{"./common":210,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,dup:54}],240:[function(require,module,exports){module.exports={_from:"@hapi/joi@16.x.x",_id:"@hapi/joi@16.1.8",_inBundle:false,_integrity:"sha512-wAsVvTPe+FwSrsAurNt5vkg3zo+TblvC5Bb1zMVK6SJzZqw9UrJnexxR+76cpePmtUZKHAPxcQ2Bf7oVHyahhg==",_location:"/@hapi/shot/@hapi/joi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/joi@16.x.x",name:"@hapi/joi",escapedName:"@hapi%2fjoi",scope:"@hapi",rawSpec:"16.x.x",saveSpec:null,fetchSpec:"16.x.x"},_requiredBy:["/@hapi/shot"],_resolved:"https://registry.npmjs.org/@hapi/joi/-/joi-16.1.8.tgz",_shasum:"84c1f126269489871ad4e2decc786e0adef06839",_spec:"@hapi/joi@16.x.x",_where:"/home/osama/Desktop/Dev/hapi-server/node_modules/@hapi/shot",browser:"dist/joi-browser.min.js",bugs:{url:"https://github.com/hapijs/joi/issues"},bundleDependencies:false,dependencies:{"@hapi/address":"^2.1.2","@hapi/formula":"^1.2.0","@hapi/hoek":"^8.2.4","@hapi/pinpoint":"^1.0.2","@hapi/topo":"^3.1.3"},deprecated:"Switch to 'npm install joi'",description:"Object schema validation",devDependencies:{"@hapi/bourne":"1.x.x","@hapi/code":"6.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"20.x.x"},files:["lib/**/*","dist/*"],homepage:"https://github.com/hapijs/joi#readme",keywords:["schema","validation"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/joi",repository:{type:"git",url:"git://github.com/hapijs/joi.git"},scripts:{prepublishOnly:"cd browser && npm install && npm run build",test:"lab -t 100 -a @hapi/code -L","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},version:"16.1.8"}},{}],241:[function(require,module,exports){"use strict";const Bounce=require("@hapi/bounce");const Hoek=require("@hapi/hoek");const internals={maxLength:256,wildcards:["x","X","*"],any:Symbol("any")};internals.versionRx=/^\s*[vV]?(\d+|[xX*])(?:\.(\d+|[xX*])(?:\.(\d+|[xX*])(?:\-?([^+]+))?(?:\+(.+))?)?)?\s*$/;internals.strict={tokenRx:/^[-\dA-Za-z]+(?:\.[-\dA-Za-z]+)*$/,numberRx:/^((?:0)|(?:[1-9]\d*))$/};exports.version=function(version,options){return new internals.Version(version,options)};exports.range=function(range){return new internals.Range(range)};exports.match=function(version,range){try{return exports.range(range).match(version)}catch(err){Bounce.rethrow(err,"system");return false}};internals.Version=class{constructor(version,options={}){Hoek.assert(version,"Missing version argument");if(version instanceof internals.Version){return version}if(typeof version==="object"){this._copy(version)}else{this._parse(version,options)}this.format()}_copy(version){this.major=version.major===undefined?internals.any:version.major;this.minor=version.minor===undefined?internals.any:version.minor;this.patch=version.patch===undefined?internals.any:version.patch;this.prerelease=version.prerelease||[];this.build=version.build||[]}_parse(version,options){Hoek.assert(typeof version==="string","Version argument must be a string");Hoek.assert(version.length<=internals.maxLength,"Version string too long");const match=version.match(internals.versionRx);if(!match){throw new Error(`Invalid version string format: ${version}`)}this.major=internals.Version._number(match[1],"major",options);this.minor=internals.Version._number(match[2]||"x","minor",options);this.patch=internals.Version._number(match[3]||"x","patch",options);this.prerelease=internals.Version._sub(match[4],"prerelease",options);this.build=internals.Version._sub(match[5],"build",options)}static _number(string,source,options){if(internals.wildcards.includes(string)){return internals.any}if(options.strict){Hoek.assert(string.match(internals.strict.numberRx),"Value must be 0 or a number without a leading zero:",source)}const value=parseInt(string,10);Hoek.assert(value<=Number.MAX_SAFE_INTEGER,"Value must be positive and less than max safe integer:",source);return value}static _sub(string,source,options){if(!string){return[]}if(options.strict){Hoek.assert(string.match(internals.strict.tokenRx),"Value can only contain dot-separated hyphens, digits, a-z or A-Z:",source)}const subs=[];const parts=string.split(".");for(const part of parts){if(!part){throw new Error(`Invalid empty ${source} segment`)}subs.push(part.match(/^\d+$/)?internals.Version._number(part,source,{strict:options.strict}):part)}return subs}format(){this.version=`${internals.dot(this.major)}.${internals.dot(this.minor)}.${internals.dot(this.patch)}${internals.token(this.prerelease,"-")}${internals.token(this.build,"+")}`;this.dots=[this.major,this.minor,this.patch];this.wildcard=this.major===internals.any&&this.minor===internals.any&&this.patch===internals.any&&!this.prerelease.length}toString(){return this.version}compare(to,options){return internals.Version.compare(this,to,options)}static compare(a,b,options={}){let aFirst=-1;let bFirst=1;a=exports.version(a,options);b=exports.version(b,options);if(options.range&&a.prerelease.length&&(a.major!==b.major||a.minor!==b.minor||a.patch!==b.patch||!b.prerelease.length)){aFirst=-2;bFirst=2}for(let i=0;i<3;++i){const av=a.dots[i];const bv=b.dots[i];if(av===bv||av===internals.any||bv===internals.any){continue}return av-bv<0?aFirst:bFirst}if(!a.prerelease.length&&!b.prerelease.length){return 0}if(!!a.prerelease.length!==!!b.prerelease.length){return a.prerelease.length?aFirst:bFirst}for(let i=0;;++i){const ai=a.prerelease[i];const bi=b.prerelease[i];if(ai===undefined&&bi===undefined){return 0}if(ai===bi){continue}if(ai===undefined){return aFirst}if(bi===undefined){return bFirst}const an=Number.isFinite(ai);const bn=Number.isFinite(bi);if(an!==bn){return an?aFirst:bFirst}return a<b?aFirst:bFirst}}};internals.dot=v=>{return v===internals.any?"x":v};internals.token=(v,prefix)=>{if(!v.length){return""}return`${prefix}${v.join(".")}`};internals.Range=class{constructor(range,options){this._settings=Object.assign({},options);this._anything=false;this._or=[];this._active=null;if(range!==undefined){this.pattern(range)}this._another()}_another(){if(!this._active||this._active.rules.length){this._active={rules:[]};this._or.push(this._active)}return this}_rule(operator,version){version=exports.version(version,this._settings);const compare=internals.operator(operator);this._active.rules.push({compare:compare,version:version,operator:operator});return this}get or(){return this._another()}equal(version){return this._rule("=",version)}above(version){return this._rule(">",version)}below(version){return this._rule("<",version)}between(from,to){this._rule(">=",from);this._rule("<=",to);return this}minor(version){version=exports.version(version,this._settings);if(version.major===internals.any){this._rule("=",version);return this}this._rule(">=",version);if(version.minor===internals.any){this._rule("<",{major:version.major+1,minor:0,patch:0})}else{this._rule("<",{major:version.major,minor:version.minor+1,patch:0})}return this}compatible(version){version=exports.version(version,this._settings);if(version.major===internals.any){this._rule("=",version);return this}this._rule(">=",version);if(version.major===0&&version.minor!==internals.any){if(version.minor===0){this._rule("<",{major:0,minor:0,patch:version.patch+1})}else{this._rule("<",{major:0,minor:version.minor+1,patch:0})}}else{this._rule("<",{major:version.major+1,minor:0,patch:0})}return this}pattern(range){try{this._pattern(range);return this}catch(err){throw new Error(`Invalid range: "${range}" because: ${err.message}`)}}_pattern(range){if(range===""){this._anything=true;return}const normalized=internals.normalize(range);const ors=normalized.split(/\s*\|\|\s*/);for(const condition of ors){if(!condition){this._anything=true;return}this._another();const ands=condition.split(/\s+/);for(const and of ands){const hyphen=and.indexOf("@");if(hyphen!==-1){const from=and.slice(0,hyphen);const to=and.slice(hyphen+1);this.between(from,to);continue}const parts=and.match(/^(\^|~|<\=|>\=|<|>|\=)?(.+)$/);const operator=parts[1];const version=exports.version(parts[2],this._settings);if(version.wildcard){this._anything=true;return}if(operator==="~"){this.minor(version);continue}if(operator==="^"){this.compatible(version);continue}if(operator){this._rule(operator,version);continue}this.equal(version)}}}match(version){version=exports.version(version,this._settings);if(this._anything){return!version.prerelease.length}for(const{rules}of this._or){if(!rules.length){continue}let matches=0;let excludes=0;for(const rule of rules){const compare=version.compare(rule.version,Object.assign(this._settings,{range:true}));const exclude=Math.abs(compare)===2;if(rule.compare.includes(compare/(exclude?2:1))){++matches;if(exclude){++excludes}}else{break}}if(matches===rules.length&&excludes<matches){return true}}return false}toString(){if(this._anything){return"*"}let string="";for(const{rules}of this._or){if(!rules.length){continue}const conditions=[];for(const rule of rules){conditions.push(`${rule.operator!=="="?rule.operator:""}${rule.version.version}`)}string+=(string?"||":"")+conditions.join(" ")}return string}};internals.operator=function(compare){switch(compare){case"=":return[0];case">":return[1];case">=":return[0,1];case"<":return[-1];case"<=":return[0,-1]}};internals.normalize=function(range){return range.replace(/ \- /g,"@").replace(/~>/g,"~").replace(/(\^|~|<\=|>\=|<|>|\=)\s*([^\s]+)/g,($0,$1,$2)=>`${$1}${$2}`)}},{"@hapi/bounce":13,"@hapi/hoek":128}],242:[function(require,module,exports){"use strict";const Querystring=require("querystring");const Boom=require("@hapi/boom");const Bounce=require("@hapi/bounce");const Bourne=require("@hapi/bourne");const Cryptiles=require("@hapi/cryptiles");const Hoek=require("@hapi/hoek");const Iron=require("@hapi/iron");const Joi=require("@hapi/joi");const internals={};internals.schema=Joi.object({strictHeader:Joi.boolean(),ignoreErrors:Joi.boolean(),isSecure:Joi.boolean(),isHttpOnly:Joi.boolean(),isSameSite:Joi.valid("Strict","Lax").allow(false),path:Joi.string().allow(null),domain:Joi.string().allow(null),ttl:Joi.number().allow(null),encoding:Joi.string().valid("base64json","base64","form","iron","none"),sign:Joi.object({password:[Joi.string(),Joi.binary(),Joi.object()],integrity:Joi.object()}),iron:Joi.object(),password:[Joi.string(),Joi.binary(),Joi.object()],clearInvalid:Joi.boolean(),autoValue:Joi.any(),passThrough:Joi.boolean()});internals.defaults={strictHeader:true,ignoreErrors:false,isSecure:true,isHttpOnly:true,isSameSite:"Strict",path:null,domain:null,ttl:null,encoding:"none"};exports.Definitions=internals.Definitions=function(options){this.settings=Hoek.applyToDefaults(internals.defaults,options||{});Joi.assert(this.settings,internals.schema,"Invalid state definition defaults");this.cookies={};this.names=[]};internals.Definitions.prototype.add=function(name,options){Hoek.assert(name&&typeof name==="string","Invalid name");Hoek.assert(!this.cookies[name],"State already defined:",name);const settings=Hoek.applyToDefaults(this.settings,options||{},{nullOverride:true});Joi.assert(settings,internals.schema,"Invalid state definition: "+name);this.cookies[name]=settings;this.names.push(name)};internals.empty=new internals.Definitions;internals.parseRx=/\s*([^=\s]*)\s*=\s*(?:(?:"([^\"]*)")|([^\;]*))(?:(?:;\s*)|$)/g;internals.validateRx={nameRx:{strict:/^[^\x00-\x20\(\)<>@\,;\:\\"\/\[\]\?\=\{\}\x7F]+$/,loose:/^[^=\s]*$/},valueRx:{strict:/^[^\x00-\x20\"\,\;\\\x7F]*$/,loose:/^(?:"([^\"]*)")|(?:[^\;]*)$/},domainRx:/^\.?[a-z\d]+(?:(?:[a-z\d]*)|(?:[a-z\d\-]*[a-z\d]))(?:\.[a-z\d]+(?:(?:[a-z\d]*)|(?:[a-z\d\-]*[a-z\d])))*$/,domainLabelLenRx:/^\.?[a-z\d\-]{1,63}(?:\.[a-z\d\-]{1,63})*$/,pathRx:/^\/[^\x00-\x1F\;]*$/};internals.pairsRx=/\s*([^=\s]*)\s*=\s*([^\;]*)(?:(?:;\s*)|$)/g;internals.Definitions.prototype.parse=async function(cookies){const state={};const names=[];const verify=cookies.replace(internals.parseRx,($0,$1,$2,$3)=>{const name=$1;const value=$2||$3||"";if(state[name]){if(!Array.isArray(state[name])){state[name]=[state[name]]}state[name].push(value)}else{state[name]=value;names.push(name)}return""});const failed=[];if(verify!==""){if(!this.settings.ignoreErrors){throw Boom.badRequest("Invalid cookie header")}failed.push({settings:this.settings,reason:`Header contains unexpected syntax: ${verify}`})}const errored=[];const record=(reason,name,value,definition)=>{const details={name:name,value:value,settings:definition,reason:typeof reason==="string"?reason:reason.message};failed.push(details);if(!definition.ignoreErrors){errored.push(details)}};const parsed={};for(let i=0;i<names.length;++i){const name=names[i];const value=state[name];const definition=this.cookies[name]||this.settings;if(definition.strictHeader){const reason=internals.validate(name,state);if(reason){record(reason,name,value,definition);continue}}if(definition.encoding==="none"){parsed[name]=value;continue}if(!Array.isArray(value)){try{const unsigned=await internals.unsign(name,value,definition);const result=await internals.decode(unsigned,definition);parsed[name]=result}catch(err){Bounce.rethrow(err,"system");record(err,name,value,definition)}continue}const arrayResult=[];for(let j=0;j<value.length;++j){const arrayValue=value[j];try{const unsigned=await internals.unsign(name,arrayValue,definition);const result=await internals.decode(unsigned,definition);arrayResult.push(result)}catch(err){Bounce.rethrow(err,"system");record(err,name,value,definition)}}parsed[name]=arrayResult}if(errored.length){const error=Boom.badRequest("Invalid cookie value",errored);error.states=parsed;error.failed=failed;throw error}return{states:parsed,failed:failed}};internals.validate=function(name,state){if(!name.match(internals.validateRx.nameRx.strict)){return"Invalid cookie name"}const values=[].concat(state[name]);for(let i=0;i<values.length;++i){if(!values[i].match(internals.validateRx.valueRx.strict)){return"Invalid cookie value"}}return null};internals.macPrefix="hapi.signed.cookie.1";internals.unsign=async function(name,value,definition){if(!definition.sign){return value}const pos=value.lastIndexOf(".");if(pos===-1){throw Boom.badRequest("Missing signature separator")}const unsigned=value.slice(0,pos);const sig=value.slice(pos+1);if(!sig){throw Boom.badRequest("Missing signature")}const sigParts=sig.split("*");if(sigParts.length!==2){throw Boom.badRequest("Invalid signature format")}const hmacSalt=sigParts[0];const hmac=sigParts[1];const macOptions=Hoek.clone(definition.sign.integrity||Iron.defaults.integrity);macOptions.salt=hmacSalt;const mac=await Iron.hmacWithPassword(definition.sign.password,macOptions,[internals.macPrefix,name,unsigned].join("\n"));if(!Cryptiles.fixedTimeComparison(mac.digest,hmac)){throw Boom.badRequest("Invalid hmac value")}return unsigned};internals.decode=async function(value,definition){if(!value&&definition.encoding==="form"){return{}}Hoek.assert(typeof value==="string","Invalid string");if(definition.encoding==="iron"){return await Iron.unseal(value,definition.password,definition.iron||Iron.defaults)}if(definition.encoding==="base64json"){const decoded=Buffer.from(value,"base64").toString("binary");try{return Bourne.parse(decoded)}catch(err){throw Boom.badRequest("Invalid JSON payload")}}if(definition.encoding==="base64"){return Buffer.from(value,"base64").toString("binary")}return Querystring.parse(value)};internals.Definitions.prototype.format=async function(cookies){if(!cookies||Array.isArray(cookies)&&!cookies.length){return[]}if(!Array.isArray(cookies)){cookies=[cookies]}const header=[];for(let i=0;i<cookies.length;++i){const cookie=cookies[i];const base=this.cookies[cookie.name]||this.settings;const definition=cookie.options?Hoek.applyToDefaults(base,cookie.options,{nullOverride:true}):base;const nameRx=definition.strictHeader?internals.validateRx.nameRx.strict:internals.validateRx.nameRx.loose;if(!nameRx.test(cookie.name)){throw Boom.badImplementation("Invalid cookie name: "+cookie.name)}const value=await exports.prepareValue(cookie.name,cookie.value,definition);const valueRx=definition.strictHeader?internals.validateRx.valueRx.strict:internals.validateRx.valueRx.loose;if(value&&(typeof value!=="string"||!value.match(valueRx))){throw Boom.badImplementation("Invalid cookie value: "+cookie.value)}let segment=cookie.name+"="+(value||"");if(definition.ttl!==null&&definition.ttl!==undefined){const expires=new Date(definition.ttl?Date.now()+definition.ttl:0);segment=segment+"; Max-Age="+Math.floor(definition.ttl/1e3)+"; Expires="+expires.toUTCString()}if(definition.isSecure){segment=segment+"; Secure"}if(definition.isHttpOnly){segment=segment+"; HttpOnly"}if(definition.isSameSite){segment=segment+`; SameSite=${definition.isSameSite}`}if(definition.domain){const domain=definition.domain.toLowerCase();if(!domain.match(internals.validateRx.domainLabelLenRx)){throw Boom.badImplementation("Cookie domain too long: "+definition.domain)}if(!domain.match(internals.validateRx.domainRx)){throw Boom.badImplementation("Invalid cookie domain: "+definition.domain)}segment=segment+"; Domain="+domain}if(definition.path){if(!definition.path.match(internals.validateRx.pathRx)){throw Boom.badImplementation("Invalid cookie path: "+definition.path)}segment=segment+"; Path="+definition.path}header.push(segment)}return header};exports.prepareValue=async function(name,value,options){Hoek.assert(options&&typeof options==="object","Missing or invalid options");try{const encoded=await internals.encode(value,options);const signed=await internals.sign(name,encoded,options.sign);return signed}catch(err){throw Boom.badImplementation("Failed to encode cookie ("+name+") value: "+err.message)}};internals.encode=function(value,options){if(value===undefined||options.encoding==="none"){return value}if(options.encoding==="iron"){return Iron.seal(value,options.password,options.iron||Iron.defaults)}if(options.encoding==="base64"){return Buffer.from(value,"binary").toString("base64")}if(options.encoding==="base64json"){const stringified=JSON.stringify(value);return Buffer.from(stringified,"binary").toString("base64")}return Querystring.stringify(value)};internals.sign=async function(name,value,options){if(value===undefined||!options){return value}const mac=await Iron.hmacWithPassword(options.password,options.integrity||Iron.defaults.integrity,[internals.macPrefix,name,value].join("\n"));const signed=value+"."+mac.salt+"*"+mac.digest;return signed};internals.Definitions.prototype.passThrough=function(header,fallback){if(!this.names.length){return header}const exclude=[];for(let i=0;i<this.names.length;++i){const name=this.names[i];const definition=this.cookies[name];const passCookie=definition.passThrough!==undefined?definition.passThrough:fallback;if(!passCookie){exclude.push(name)}}return exports.exclude(header,exclude)};exports.exclude=function(cookies,excludes){let result="";const verify=cookies.replace(internals.pairsRx,($0,$1,$2)=>{if(excludes.indexOf($1)===-1){result=result+(result?";":"")+$1+"="+$2}return""});return verify===""?result:Boom.badRequest("Invalid cookie header")}},{"@hapi/boom":12,"@hapi/bounce":13,"@hapi/bourne":14,"@hapi/cryptiles":57,"@hapi/hoek":128,"@hapi/iron":139,"@hapi/joi":249,querystring:undefined}],243:[function(require,module,exports){arguments[4][23][0].apply(exports,arguments)},{"./cache":244,"./common":245,"./compile":246,"./errors":247,"./extend":248,"./manifest":250,"./messages":251,"./modify":252,"./ref":253,"./trace":257,"./validator":273,"./values":274,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/merge":131,dup:23}],244:[function(require,module,exports){arguments[4][24][0].apply(exports,arguments)},{"./common":245,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:24}],245:[function(require,module,exports){arguments[4][25][0].apply(exports,arguments)},{"../package.json":275,"./messages":251,"./schemas":254,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/error":121,dup:25}],246:[function(require,module,exports){arguments[4][26][0].apply(exports,arguments)},{"./common":245,"./ref":253,"@hapi/hoek/lib/assert":115,dup:26}],247:[function(require,module,exports){arguments[4][27][0].apply(exports,arguments)},{"./common":245,"./template":256,"@hapi/hoek/lib/clone":118,dup:27}],248:[function(require,module,exports){arguments[4][28][0].apply(exports,arguments)},{"./common":245,"./messages":251,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:28}],249:[function(require,module,exports){arguments[4][29][0].apply(exports,arguments)},{"./cache":244,"./common":245,"./compile":246,"./errors":247,"./extend":248,"./manifest":250,"./ref":253,"./schemas":254,"./template":256,"./trace":257,"./types/alternatives":258,"./types/any":259,"./types/array":260,"./types/binary":261,"./types/boolean":262,"./types/date":263,"./types/function":264,"./types/link":266,"./types/number":267,"./types/object":268,"./types/string":269,"./types/symbol":272,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:29}],250:[function(require,module,exports){arguments[4][30][0].apply(exports,arguments)},{"./common":245,"./messages":251,"./ref":253,"./schemas":254,"./template":256,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:30}],251:[function(require,module,exports){arguments[4][31][0].apply(exports,arguments)},{"./template":256,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,dup:31}],252:[function(require,module,exports){arguments[4][32][0].apply(exports,arguments)},{"./common":245,"./ref":253,"@hapi/hoek/lib/assert":115,dup:32}],253:[function(require,module,exports){arguments[4][33][0].apply(exports,arguments)},{"./common":245,"./template":256,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:33}],254:[function(require,module,exports){arguments[4][34][0].apply(exports,arguments)},{"./index":249,dup:34}],255:[function(require,module,exports){arguments[4][35][0].apply(exports,arguments)},{"./common":245,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/reach":133,dup:35}],256:[function(require,module,exports){arguments[4][36][0].apply(exports,arguments)},{"./common":245,"./errors":247,"./ref":253,"@hapi/formula":59,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/escapeHtml":123,dup:36}],257:[function(require,module,exports){arguments[4][37][0].apply(exports,arguments)},{"./errors":247,"@hapi/hoek/lib/deepEqual":120,"@hapi/pinpoint":169,dup:37}],258:[function(require,module,exports){arguments[4][38][0].apply(exports,arguments)},{"../common":245,"../compile":246,"../errors":247,"../ref":253,"./any":259,"@hapi/hoek/lib/assert":115,dup:38}],259:[function(require,module,exports){arguments[4][39][0].apply(exports,arguments)},{"../base":243,"../common":245,"../messages":251,"@hapi/hoek/lib/assert":115,dup:39}],260:[function(require,module,exports){arguments[4][40][0].apply(exports,arguments)},{"../common":245,"../compile":246,"./any":259,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,"@hapi/hoek/lib/reach":133,dup:40}],261:[function(require,module,exports){arguments[4][41][0].apply(exports,arguments)},{"../common":245,"./any":259,"@hapi/hoek/lib/assert":115,dup:41}],262:[function(require,module,exports){arguments[4][42][0].apply(exports,arguments)},{"../common":245,"../values":274,"./any":259,"@hapi/hoek/lib/assert":115,dup:42}],263:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments)},{"../common":245,"../template":256,"./any":259,"@hapi/hoek/lib/assert":115,dup:43}],264:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments)},{"./keys":265,"@hapi/hoek/lib/assert":115,dup:44}],265:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments)},{"../common":245,"../compile":246,"../errors":247,"../ref":253,"../template":256,"./any":259,"@hapi/hoek/lib/applyToDefaults":114,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/topo":278,dup:45}],266:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments)},{"../common":245,"../compile":246,"../errors":247,"./any":259,"@hapi/hoek/lib/assert":115,dup:46}],267:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments)},{"../common":245,"./any":259,"@hapi/hoek/lib/assert":115,dup:47}],268:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments)},{"./keys":265,dup:48}],269:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments)},{"../../common":245,"../any":259,"./ip":270,"./uri":271,"@hapi/address/lib/domain":4,"@hapi/address/lib/email":5,"@hapi/address/lib/tlds":7,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:49}],270:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{"./uri":271,dup:50}],271:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments)},{"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/escapeRegex":125,dup:51}],272:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments)},{"./any":259,"@hapi/hoek/lib/assert":115,dup:52}],273:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{"./common":245,"./errors":247,"./state":255,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/clone":118,"@hapi/hoek/lib/ignore":127,"@hapi/hoek/lib/reach":133,dup:53}],274:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{"./common":245,"@hapi/hoek/lib/assert":115,"@hapi/hoek/lib/deepEqual":120,dup:54}],275:[function(require,module,exports){module.exports={_from:"@hapi/joi@16.x.x",_id:"@hapi/joi@16.1.8",_inBundle:false,_integrity:"sha512-wAsVvTPe+FwSrsAurNt5vkg3zo+TblvC5Bb1zMVK6SJzZqw9UrJnexxR+76cpePmtUZKHAPxcQ2Bf7oVHyahhg==",_location:"/@hapi/statehood/@hapi/joi",_phantomChildren:{},_requested:{type:"range",registry:true,raw:"@hapi/joi@16.x.x",name:"@hapi/joi",escapedName:"@hapi%2fjoi",scope:"@hapi",rawSpec:"16.x.x",saveSpec:null,fetchSpec:"16.x.x"},_requiredBy:["/@hapi/statehood"],_resolved:"https://registry.npmjs.org/@hapi/joi/-/joi-16.1.8.tgz",_shasum:"84c1f126269489871ad4e2decc786e0adef06839",_spec:"@hapi/joi@16.x.x",_where:"/home/osama/Desktop/Dev/hapi-server/node_modules/@hapi/statehood",browser:"dist/joi-browser.min.js",bugs:{url:"https://github.com/hapijs/joi/issues"},bundleDependencies:false,dependencies:{"@hapi/address":"^2.1.2","@hapi/formula":"^1.2.0","@hapi/hoek":"^8.2.4","@hapi/pinpoint":"^1.0.2","@hapi/topo":"^3.1.3"},deprecated:"Switch to 'npm install joi'",description:"Object schema validation",devDependencies:{"@hapi/bourne":"1.x.x","@hapi/code":"6.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"20.x.x"},files:["lib/**/*","dist/*"],homepage:"https://github.com/hapijs/joi#readme",keywords:["schema","validation"],license:"BSD-3-Clause",main:"lib/index.js",name:"@hapi/joi",repository:{type:"git",url:"git://github.com/hapijs/joi.git"},scripts:{prepublishOnly:"cd browser && npm install && npm run build",test:"lab -t 100 -a @hapi/code -L","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},version:"16.1.8"}},{}],276:[function(require,module,exports){"use strict";const Fs=require("fs");const Os=require("os");const Querystring=require("querystring");const Stream=require("stream");const Zlib=require("zlib");const Boom=require("@hapi/boom");const Bourne=require("@hapi/bourne");const Content=require("@hapi/content");const File=require("@hapi/file");const Hoek=require("@hapi/hoek");const Pez=require("@hapi/pez");const Wreck=require("@hapi/wreck");const internals={decoders:{gzip:options=>Zlib.createGunzip(options),deflate:options=>Zlib.createInflate(options)}};exports.parse=async function(req,tap,options){Hoek.assert(options,"Missing options");Hoek.assert(options.parse!==undefined,"Missing parse option setting");Hoek.assert(options.output!==undefined,"Missing output option setting");const contentLength=req.headers["content-length"];if(options.maxBytes!==undefined&&contentLength&&parseInt(contentLength,10)>options.maxBytes){throw Boom.entityTooLarge("Payload content length greater than maximum allowed: "+options.maxBytes)}const contentType=Content.type(options.override||req.headers["content-type"]||options.defaultContentType||"application/octet-stream");try{if(options.allow&&options.allow.indexOf(contentType.mime)===-1){throw Boom.unsupportedMediaType()}const parsed={mime:contentType.mime};if(options.parse===true){parsed.payload=await internals.parse(req,tap,options,contentType);return parsed}parsed.payload=await internals.raw(req,tap,options);return parsed}catch(err){err.mime=contentType.mime;throw err}};internals.parse=async function(req,tap,options,contentType){const output=options.output;let source=internals.decoder(req,options);if(tap){source=internals.pipe(source,tap)}if(contentType.mime==="multipart/form-data"){if(options.multipart===false){throw Boom.unsupportedMediaType()}return await internals.multipart(req,options,source,contentType)}if(output==="stream"){return source}if(output==="file"){const file=await internals.writeFile(req,options,source);return file.item}const payload=await Wreck.read(source,{timeout:options.timeout,maxBytes:options.maxBytes});return internals.object(options,payload,contentType.mime)};internals.decoder=function(source,options){const contentEncoding=source.headers["content-encoding"];const decoders=options.decoders||internals.decoders;if(!decoders.hasOwnProperty(contentEncoding)){return source}const decoderOptions=options.compression&&options.compression[contentEncoding]||null;const stream=decoders[contentEncoding](decoderOptions);const orig=stream.emit;stream.emit=(event,...args)=>{if(event==="error"){args=[Boom.badRequest("Invalid compressed payload",args[0])]}return orig.call(stream,event,...args)};return internals.pipe(source,stream)};internals.raw=async function(req,tap,options){const output=options.output;let source=req;if(options.parse==="gunzip"){source=internals.decoder(source,options)}if(tap){source=internals.pipe(source,tap)}if(output==="stream"){return source}if(output==="file"){const file=await internals.writeFile(req,options,source);return file.item}return await Wreck.read(source,{timeout:options.timeout,maxBytes:options.maxBytes})};internals.object=function(options,payload,mime){if(mime==="application/octet-stream"){return payload.length?payload:null}if(mime.match(/^text\/.+$/)){return payload.toString("utf8")}if(/^application\/(?:.+\+)?json$/.test(mime)){if(!payload.length){return null}try{return Bourne.parse(payload.toString("utf8"),{protoAction:options.protoAction})}catch(err){const error=Boom.badRequest("Invalid request payload JSON format",err);error.raw=payload;throw error}}if(mime==="application/x-www-form-urlencoded"){const parse=options.querystring||Querystring.parse;return payload.length?parse(payload.toString("utf8")):{}}const error=Boom.unsupportedMediaType();error.raw=payload;throw error};internals.multipart=function(req,options,source,contentType){return new Promise((resolve,reject)=>{const clientTimeout=options.timeout;const clientTimeoutId=clientTimeout?setTimeout(()=>reject(Boom.clientTimeout()),clientTimeout):null;const dispenserOptions=Hoek.applyToDefaults(contentType,{maxBytes:options.maxBytes});const dispenser=new Pez.Dispenser(dispenserOptions);const onError=err=>reject(Boom.badRequest("Invalid multipart payload format",err));dispenser.once("error",onError);const data={};const pendingFiles=[];const set=(name,value)=>{if(!data.hasOwnProperty(name)){data[name]=value}else if(Array.isArray(data[name])){data[name].push(value)}else{data[name]=[data[name],value]}};const finalize=async()=>{clearTimeout(clientTimeoutId);dispenser.removeListener("error",onError);dispenser.removeListener("part",onPart);dispenser.removeListener("field",onField);dispenser.removeListener("close",onClose);try{const files=await Promise.all(pendingFiles);for(const{item,name}of files){set(name,item)}}catch(err){reject(err);return}resolve(data)};const output=options.multipart?options.multipart.output:options.output;const onPart=part=>{if(output==="file"){pendingFiles.push(internals.writeFile(req,options,part))}else{internals.part(part,output,set,options)}};dispenser.on("part",onPart);const onField=(name,value)=>set(name,value);dispenser.on("field",onField);const onClose=()=>finalize();dispenser.once("close",onClose);source.pipe(dispenser)})};internals.writeFile=function(req,options,stream){const promise=new Promise((resolve,reject)=>{const path=File.uniqueFilename(options.uploads||Os.tmpdir());const file=Fs.createWriteStream(path,{flags:"wx"});const counter=new internals.Counter(options);const finalize=err=>{req.removeListener("aborted",onAbort);file.removeListener("close",finalize);file.removeListener("error",finalize);if(err){stream.unpipe(counter);counter.unpipe(file);file.destroy();Fs.unlink(path,()=>reject(err));return}const result={item:{path:path,bytes:counter.bytes}};if(stream.name){result.name=stream.name;result.item.filename=stream.filename;result.item.headers=stream.headers}resolve(result)};file.once("close",finalize);file.once("error",finalize);const onAbort=()=>finalize(Boom.badRequest("Client connection aborted"));req.once("aborted",onAbort);internals.pipe(stream,counter);internals.pipe(counter,file)});promise.catch(Hoek.ignore);return promise};internals.part=async function(part,output,set,options){const payload=await Wreck.read(part);if(output==="stream"){const item=Wreck.toReadableStream(payload);item.hapi={filename:part.filename,headers:part.headers};return set(part.name,item)}const ct=part.headers["content-type"]||"";const mime=ct.split(";")[0].trim().toLowerCase();const annotate=value=>set(part.name,output==="annotated"?{filename:part.filename,headers:part.headers,payload:value}:value);if(!mime){return annotate(payload)}if(!payload.length){return annotate({})}try{const object=internals.object(options,payload,mime);annotate(object)}catch(err){annotate(payload)}};internals.pipe=function(from,to){from.once("error",err=>{from.unpipe(to);to.emit("error",err)});return from.pipe(to)};internals.Counter=class extends Stream.Transform{constructor(options){super();this.bytes=0;this._maxBytes=options.maxBytes}_transform(chunk,encoding,next){this.bytes=this.bytes+chunk.length;if(this._maxBytes!==undefined&&this.bytes>this._maxBytes){return next(Boom.entityTooLarge("Payload content length greater than maximum allowed: "+this._maxBytes))}return next(null,chunk)}}},{"@hapi/boom":12,"@hapi/bourne":14,"@hapi/content":56,"@hapi/file":58,"@hapi/hoek":128,"@hapi/pez":168,"@hapi/wreck":280,fs:undefined,os:undefined,querystring:undefined,stream:undefined,zlib:undefined}],277:[function(require,module,exports){"use strict";const internals={};exports=module.exports=internals.Team=class{constructor(options){this._init(options)}_init(options={}){this.work=new Promise((resolve,reject)=>{this._resolve=resolve;this._reject=reject});const meetings=options.meetings||1;this._meetings=meetings;this._count=meetings;this._notes=[]}attend(note){if(note instanceof Error){return this._reject(note)}this._notes.push(note);if(--this._count){return}return this._resolve(this._meetings===1?this._notes[0]:this._notes)}async regroup(options){await this.work;this._init(options)}};Object.defineProperties(internals.Team,{__esModule:{value:true},default:{value:internals.Team},Teamwork:{value:internals.Team}})},{}],278:[function(require,module,exports){"use strict";const Assert=require("@hapi/hoek/lib/assert");const internals={};module.exports=class Topo{constructor(){this._items=[];this.nodes=[]}add(nodes,options){options=options||{};const before=[].concat(options.before||[]);const after=[].concat(options.after||[]);const group=options.group||"?";const sort=options.sort||0;Assert(!before.includes(group),`Item cannot come before itself: ${group}`);Assert(!before.includes("?"),"Item cannot come before unassociated items");Assert(!after.includes(group),`Item cannot come after itself: ${group}`);Assert(!after.includes("?"),"Item cannot come after unassociated items");if(!Array.isArray(nodes)){nodes=[nodes]}for(const node of nodes){const item={seq:this._items.length,sort:sort,before:before,after:after,group:group,node:node};this._items.push(item)}const valid=this._sort();Assert(valid,"item",group!=="?"?`added into group ${group}`:"","created a dependencies error");return this.nodes}merge(others){if(!Array.isArray(others)){others=[others]}for(const other of others){if(other){for(const item of other._items){this._items.push(Object.assign({},item))}}}this._items.sort(internals.mergeSort);for(let i=0;i<this._items.length;++i){this._items[i].seq=i}const valid=this._sort();Assert(valid,"merge created a dependencies error");return this.nodes}_sort(){const graph={};const graphAfters=Object.create(null);const groups=Object.create(null);for(const item of this._items){const seq=item.seq;const group=item.group;groups[group]=groups[group]||[];groups[group].push(seq);graph[seq]=item.before;for(const after of item.after){graphAfters[after]=graphAfters[after]||[];graphAfters[after].push(seq)}}for(const node in graph){const expandedGroups=[];for(const graphNodeItem in graph[node]){const group=graph[node][graphNodeItem];groups[group]=groups[group]||[];expandedGroups.push(...groups[group])}graph[node]=expandedGroups}for(const group in graphAfters){if(groups[group]){for(const node of groups[group]){graph[node].push(...graphAfters[group])}}}const ancestors={};for(const node in graph){const children=graph[node];for(const child of children){ancestors[child]=ancestors[child]||[];ancestors[child].push(node)}}const visited={};const sorted=[];for(let i=0;i<this._items.length;++i){let next=i;if(ancestors[i]){next=null;for(let j=0;j<this._items.length;++j){if(visited[j]===true){continue}if(!ancestors[j]){ancestors[j]=[]}const shouldSeeCount=ancestors[j].length;let seenCount=0;for(let k=0;k<shouldSeeCount;++k){if(visited[ancestors[j][k]]){++seenCount}}if(seenCount===shouldSeeCount){next=j;break}}}if(next!==null){visited[next]=true;sorted.push(next)}}if(sorted.length!==this._items.length){return false}const seqIndex={};for(const item of this._items){seqIndex[item.seq]=item}this._items=[];this.nodes=[];for(const value of sorted){const sortedItem=seqIndex[value];this.nodes.push(sortedItem.node);this._items.push(sortedItem)}return true}};internals.mergeSort=(a,b)=>{return a.sort===b.sort?0:a.sort<b.sort?-1:1}},{"@hapi/hoek/lib/assert":115}],279:[function(require,module,exports){"use strict";const Hoek=require("@hapi/hoek");const internals={};exports=module.exports=internals.Vise=function(chunks){this.length=0;this._chunks=[];this._offset=0;if(chunks){chunks=[].concat(chunks);for(let i=0;i<chunks.length;++i){this.push(chunks[i])}}};internals.Vise.prototype.push=function(chunk){Hoek.assert(Buffer.isBuffer(chunk),"Chunk must be a buffer");const item={data:chunk,length:chunk.length,offset:this.length+this._offset,index:this._chunks.length};this._chunks.push(item);this.length+=chunk.length};internals.Vise.prototype.shift=function(length){if(!length){return[]}const prevOffset=this._offset;const item=this._chunkAt(length);let dropTo=this._chunks.length;this._offset=0;if(item){dropTo=item.chunk.index;this._offset=item.offset}const chunks=[];for(let i=0;i<dropTo;++i){const chunk=this._chunks.shift();if(i===0&&prevOffset){chunks.push(chunk.data.slice(prevOffset))}else{chunks.push(chunk.data)}}if(this._offset){chunks.push(item.chunk.data.slice(dropTo?0:prevOffset,this._offset))}this.length=0;for(let i=0;i<this._chunks.length;++i){const chunk=this._chunks[i];chunk.offset=this.length,chunk.index=i;this.length+=chunk.length}this.length-=this._offset;return chunks};internals.Vise.prototype.at=internals.Vise.prototype.readUInt8=function(pos){const item=this._chunkAt(pos);return item?item.chunk.data[item.offset]:undefined};internals.Vise.prototype._chunkAt=function(pos){if(pos<0){return null}pos=pos+this._offset;for(let i=0;i<this._chunks.length;++i){const chunk=this._chunks[i];const offset=pos-chunk.offset;if(offset<chunk.length){return{chunk:chunk,offset:offset}}}return null};internals.Vise.prototype.chunks=function(){const chunks=[];for(let i=0;i<this._chunks.length;++i){const chunk=this._chunks[i];if(i===0&&this._offset){chunks.push(chunk.data.slice(this._offset))}else{chunks.push(chunk.data)}}return chunks};internals.Vise.prototype.startsWith=function(value,pos,length){pos=pos||0;length=length?Math.min(value.length,length):value.length;if(pos+length>this.length){return false}const start=this._chunkAt(pos);if(!start){return false}let j=start.chunk.index;for(let i=0;j<this._chunks.length&&i<length;++j){const chunk=this._chunks[j];let k=j===start.chunk.index?start.offset:0;for(;k<chunk.length&&i<length;++k,++i){if(chunk.data[k]!==value[i]){return false}}}return true}},{"@hapi/hoek":128}],280:[function(require,module,exports){"use strict";const Events=require("events");const Http=require("http");const Https=require("https");const Stream=require("stream");const Url=require("url");const Zlib=require("zlib");const Boom=require("@hapi/boom");const Bourne=require("@hapi/bourne");const Hoek=require("@hapi/hoek");const Payload=require("./payload");const Recorder=require("./recorder");const Tap=require("./tap");const internals={jsonRegex:/^application\/([a-z0-9.]*[+-]json|json)$/,shallowOptions:["agent","agents","beforeRedirect","downstreamRes","payload","redirected"]};internals.Client=function(options={}){Hoek.assert(!options.agents||options.agents.https&&options.agents.http&&options.agents.httpsAllowUnauthorized,'Option agents must include "http", "https", and "httpsAllowUnauthorized"');this._defaults=Hoek.clone(options,{shallow:internals.shallowOptions});this.agents=this._defaults.agents||{https:new Https.Agent({maxSockets:Infinity}),http:new Http.Agent({maxSockets:Infinity}),httpsAllowUnauthorized:new Https.Agent({maxSockets:Infinity,rejectUnauthorized:false})};if(!options.events){return}this.events=new Events.EventEmitter;this._emit=function(...args){this.events.emit(...args)}};internals.Client.prototype.defaults=function(options){Hoek.assert(options&&typeof options==="object","options must be provided to defaults");options=Hoek.applyToDefaults(this._defaults,options,{shallow:internals.shallowOptions});return new internals.Client(options)};internals.resolveUrl=function(baseUrl,path){if(!path){return baseUrl}const url=new Url.URL(path,baseUrl);return Url.format(url)};internals.Client.prototype.request=function(method,url,options={}){try{options=Hoek.applyToDefaults(this._defaults,options,{shallow:internals.shallowOptions});Hoek.assert(options.payload===undefined||typeof options.payload==="string"||typeof options.payload==="object","options.payload must be a string, a Buffer, a Stream, or an Object");Hoek.assert(options.agent===undefined||options.agent===null||typeof options.rejectUnauthorized!=="boolean","options.agent cannot be set to an Agent at the same time as options.rejectUnauthorized is set");Hoek.assert(options.beforeRedirect===undefined||options.beforeRedirect===null||typeof options.beforeRedirect==="function","options.beforeRedirect must be a function");Hoek.assert(options.redirected===undefined||options.redirected===null||typeof options.redirected==="function","options.redirected must be a function");Hoek.assert(options.gunzip===undefined||typeof options.gunzip==="boolean"||options.gunzip==="force",'options.gunzip must be a boolean or "force"')}catch(err){return Promise.reject(err)}options.beforeRedirect=options.beforeRedirect||((redirectMethod,statusCode,location,resHeaders,redirectOptions,next)=>next());if(options.baseUrl){url=internals.resolveUrl(options.baseUrl,url);delete options.baseUrl}const relay={};const req=this._request(method,url,options,relay);const promise=new Promise((resolve,reject)=>{relay.callback=(err,res)=>{if(err){reject(err);return}resolve(res);return}});promise.req=req;return promise};internals.Client.prototype._request=function(method,url,options,relay,_trace){const uri={};if(options.socketPath){uri.socketPath=options.socketPath;const parsedUri=new Url.URL(url,`unix://${options.socketPath}`);internals.applyUrlToOptions(uri,{host:"",protocol:"http:",hash:parsedUri.hash,search:parsedUri.search,searchParams:parsedUri.searchParams,pathname:parsedUri.pathname,href:parsedUri.href})}else{uri.setHost=false;const parsedUri=new Url.URL(url);internals.applyUrlToOptions(uri,parsedUri)}uri.method=method.toUpperCase();uri.headers=options.headers||{};const hostHeader=internals.findHeader("host",uri.headers);if(!hostHeader){uri.headers.host=uri.host}const hasContentLength=internals.findHeader("content-length",uri.headers)!==undefined;if(options.payload&&typeof options.payload==="object"&&!(options.payload instanceof Stream)&&!Buffer.isBuffer(options.payload)){options.payload=JSON.stringify(options.payload);if(!internals.findHeader("content-type",uri.headers)){uri.headers["content-type"]="application/json"}}if(options.gunzip&&internals.findHeader("accept-encoding",uri.headers)===undefined){uri.headers["accept-encoding"]="gzip"}const payloadSupported=uri.method!=="GET"&&uri.method!=="HEAD"&&options.payload!==null&&options.payload!==undefined;if(payloadSupported&&(typeof options.payload==="string"||Buffer.isBuffer(options.payload))&&!hasContentLength){uri.headers=Hoek.clone(uri.headers);uri.headers["content-length"]=Buffer.isBuffer(options.payload)?options.payload.length:Buffer.byteLength(options.payload)}let redirects=options.hasOwnProperty("redirects")?options.redirects:false;_trace=_trace||[];_trace.push({method:uri.method,url:url});const client=uri.protocol==="https:"?Https:Http;if(options.rejectUnauthorized!==undefined&&uri.protocol==="https:"){uri.agent=options.rejectUnauthorized?this.agents.https:this.agents.httpsAllowUnauthorized}else if(options.agent||options.agent===false){uri.agent=options.agent}else{uri.agent=uri.protocol==="https:"?this.agents.https:this.agents.http}if(options.secureProtocol!==undefined){uri.secureProtocol=options.secureProtocol}if(options.ciphers!==undefined){uri.ciphers=options.ciphers}if(this._emit){this._emit("preRequest",uri,options)}const start=Date.now();const req=client.request(uri);if(this._emit){this._emit("request",req)}let shadow=null;let timeoutId;const onError=err=>{err.trace=_trace;return finishOnce(Boom.badGateway("Client request error",err))};req.once("error",onError);const onResponse=res=>{const statusCode=res.statusCode;const redirectMethod=internals.redirectMethod(statusCode,uri.method,options);if(redirects===false||!redirectMethod){return finishOnce(null,res)}res.destroy();if(redirects===0){return finishOnce(Boom.badGateway("Maximum redirections reached",_trace))}let location=res.headers.location;if(!location){return finishOnce(Boom.badGateway("Received redirection without location",_trace))}if(!/^https?:/i.test(location)){location=Url.resolve(uri.href,location)}const redirectOptions=Hoek.clone(options,{shallow:internals.shallowOptions});redirectOptions.payload=shadow||options.payload;redirectOptions.redirects=--redirects;return options.beforeRedirect(redirectMethod,statusCode,location,res.headers,redirectOptions,()=>{const redirectReq=this._request(redirectMethod,location,redirectOptions,{callback:finishOnce},_trace);if(options.redirected){options.redirected(statusCode,location,redirectReq)}})};const finish=(err,res)=>{if(err){req.abort()}req.abort=_abort;req.removeListener("response",onResponse);req.removeListener("error",onError);req.on("error",Hoek.ignore);clearTimeout(timeoutId);if(this._emit){this._emit("response",err,{req:req,res:res,start:start,uri:uri})}return relay.callback(err,res)};const finishOnce=Hoek.once(finish);req.once("response",onResponse);if(options.timeout){timeoutId=setTimeout(()=>{return finishOnce(Boom.gatewayTimeout("Client request timeout"))},options.timeout);delete options.timeout}const _abort=req.abort;let aborted=false;req.abort=()=>{if(!aborted&&!req.res&&!req.socket){process.nextTick(()=>{const error=new Error("socket hang up");error.code="ECONNRESET";finishOnce(error)})}aborted=true;return _abort.call(req)};if(payloadSupported){if(options.payload instanceof Stream){let stream=options.payload;if(redirects){const collector=new Tap;collector.once("finish",()=>{shadow=collector.collect()});stream=options.payload.pipe(collector)}internals.deferPipeUntilSocketConnects(req,stream);return req}req.write(options.payload)}req.end();return req};internals.deferPipeUntilSocketConnects=function(req,stream){const onSocket=socket=>{if(!socket.connecting){return onSocketConnect()}socket.once("connect",onSocketConnect)};const onSocketConnect=()=>{stream.pipe(req);stream.removeListener("error",onStreamError)};const onStreamError=err=>{req.emit("error",err)};req.once("socket",onSocket);stream.on("error",onStreamError)};internals.redirectMethod=function(code,method,options){switch(code){case 301:case 302:return options.redirectMethod||method;case 303:if(options.redirect303){return"GET"}break;case 307:case 308:return method}return null};internals.Client.prototype.read=function(res,options={}){return new Promise((resolve,reject)=>{this._read(res,options,(err,payload)=>{if(err){reject(err);return}resolve(payload);return})})};internals.Client.prototype._read=function(res,options,callback){options=Hoek.applyToDefaults(this._defaults,options,{shallow:internals.shallowOptions});let clientTimeoutId=null;const finish=(err,buffer)=>{clearTimeout(clientTimeoutId);reader.removeListener("error",onReaderError);reader.removeListener("finish",onReaderFinish);res.removeListener("error",onResError);res.removeListener("close",onResAborted);res.removeListener("aborted",onResAborted);res.on("error",Hoek.ignore);if(err){return callback(err)}if(!options.json){return callback(null,buffer)}if(options.json==="force"){return internals.tryParseBuffer(buffer,callback)}const contentType=res.headers&&internals.findHeader("content-type",res.headers)||"";const mime=contentType.split(";")[0].trim().toLowerCase();if(!internals.jsonRegex.test(mime)){if(options.json==="strict"){return callback(Boom.notAcceptable("The content-type is not JSON compatible"))}return callback(null,buffer)}return internals.tryParseBuffer(buffer,callback)};const finishOnce=Hoek.once(finish);const clientTimeout=options.timeout;if(clientTimeout&&clientTimeout>0){clientTimeoutId=setTimeout(()=>{finishOnce(Boom.clientTimeout())},clientTimeout)}const onResError=err=>{return finishOnce(err.isBoom?err:Boom.internal("Payload stream error",err))};const onResAborted=()=>{if(res.complete){return}return finishOnce(Boom.internal("Payload stream closed prematurely"))};res.once("error",onResError);res.once("close",onResAborted);res.once("aborted",onResAborted);const reader=new Recorder({maxBytes:options.maxBytes});const onReaderError=err=>{if(res.destroy){res.destroy()}return finishOnce(err)};reader.once("error",onReaderError);const onReaderFinish=()=>{return finishOnce(null,reader.collect())};reader.once("finish",onReaderFinish);if(options.gunzip){const contentEncoding=options.gunzip==="force"?"gzip":res.headers&&internals.findHeader("content-encoding",res.headers)||"";if(/^(x-)?gzip(\s*,\s*identity)?$/.test(contentEncoding)){const gunzip=Zlib.createGunzip();gunzip.once("error",onReaderError);res.pipe(gunzip).pipe(reader);return}}res.pipe(reader)};internals.Client.prototype.toReadableStream=function(payload,encoding){return new Payload(payload,encoding)};internals.Client.prototype.parseCacheControl=function(field){const regex=/(?:^|(?:\s*\,\s*))([^\x00-\x20\(\)<>@\,;\:\\"\/\[\]\?\=\{\}\x7F]+)(?:\=(?:([^\x00-\x20\(\)<>@\,;\:\\"\/\[\]\?\=\{\}\x7F]+)|(?:\"((?:[^"\\]|\\.)*)\")))?/g;const header={};const error=field.replace(regex,($0,$1,$2,$3)=>{const value=$2||$3;header[$1]=value?value.toLowerCase():true;return""});if(header["max-age"]){try{const maxAge=parseInt(header["max-age"],10);if(isNaN(maxAge)){return null}header["max-age"]=maxAge}catch(err){}}return error?null:header};internals.Client.prototype.get=function(uri,options){return this._shortcut("GET",uri,options)};internals.Client.prototype.post=function(uri,options){return this._shortcut("POST",uri,options)};internals.Client.prototype.patch=function(uri,options){return this._shortcut("PATCH",uri,options)};internals.Client.prototype.put=function(uri,options){return this._shortcut("PUT",uri,options)};internals.Client.prototype.delete=function(uri,options){return this._shortcut("DELETE",uri,options)};internals.Client.prototype._shortcut=async function(method,uri,options={}){const res=await this.request(method,uri,options);let payload;try{payload=await this.read(res,options)}catch(err){err.data=err.data||{};err.data.res=res;throw err}if(res.statusCode<400){return{res:res,payload:payload}}const data={isResponseError:true,headers:res.headers,res:res,payload:payload};throw new Boom(`Response Error: ${res.statusCode} ${res.statusMessage}`,{statusCode:res.statusCode,data:data})};internals.tryParseBuffer=function(buffer,next){if(buffer.length===0){return next(null,null)}let payload;try{payload=Bourne.parse(buffer.toString())}catch(err){return next(Boom.badGateway(err.message,{payload:buffer}))}return next(null,payload)};internals.findHeader=function(headerName,headers){const foundKey=Object.keys(headers).find(key=>key.toLowerCase()===headerName.toLowerCase());return foundKey&&headers[foundKey]};internals.applyUrlToOptions=(options,url)=>{options.host=url.host;options.origin=url.origin;options.searchParams=url.searchParams;options.protocol=url.protocol;options.hostname=url.hostname;options.hash=url.hash;options.search=url.search;options.pathname=url.pathname;options.path=`${url.pathname}${url.search||""}`;options.href=url.href;if(url.port!==""){options.port=Number(url.port)}if(url.username||url.password){options.auth=`${url.username}:${url.password}`;options.username=url.username;options.password=url.password}return options};module.exports=new internals.Client},{"./payload":281,"./recorder":282,"./tap":283,"@hapi/boom":12,"@hapi/bourne":14,"@hapi/hoek":128,events:undefined,http:undefined,https:undefined,stream:undefined,url:undefined,zlib:undefined}],281:[function(require,module,exports){"use strict";const Stream=require("stream");const internals={};module.exports=internals.Payload=class extends Stream.Readable{constructor(payload,encoding){super();const data=[].concat(payload||"");let size=0;for(let i=0;i<data.length;++i){const chunk=data[i];size=size+chunk.length;data[i]=Buffer.isBuffer(chunk)?chunk:Buffer.from(chunk)}this._data=Buffer.concat(data,size);this._position=0;this._encoding=encoding||"utf8"}_read(size){const chunk=this._data.slice(this._position,this._position+size);this.push(chunk,this._encoding);this._position=this._position+chunk.length;if(this._position>=this._data.length){this.push(null)}}}},{stream:undefined}],282:[function(require,module,exports){"use strict";const Stream=require("stream");const Boom=require("@hapi/boom");const internals={};module.exports=internals.Recorder=class extends Stream.Writable{constructor(options){super();this.settings=options;this.buffers=[];this.length=0}_write(chunk,encoding,next){if(this.settings.maxBytes&&this.length+chunk.length>this.settings.maxBytes){return this.emit("error",Boom.entityTooLarge("Payload content length greater than maximum allowed: "+this.settings.maxBytes))}this.length=this.length+chunk.length;this.buffers.push(chunk);next()}collect(){const buffer=this.buffers.length===0?Buffer.alloc(0):this.buffers.length===1?this.buffers[0]:Buffer.concat(this.buffers,this.length);return buffer}}},{"@hapi/boom":12,stream:undefined}],283:[function(require,module,exports){"use strict";const Stream=require("stream");const Payload=require("./payload");const internals={};module.exports=internals.Tap=class extends Stream.Transform{constructor(){super();this.buffers=[]}_transform(chunk,encoding,next){this.buffers.push(chunk);next(null,chunk)}collect(){return new Payload(this.buffers)}}},{"./payload":281,stream:undefined}],284:[function(require,module,exports){module.exports={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/3gpp-ims+xml":{source:"iana",compressible:true},"application/a2l":{source:"iana"},"application/activemessage":{source:"iana"},"application/activity+json":{source:"iana",compressible:true},"application/alto-costmap+json":{source:"iana",compressible:true},"application/alto-costmapfilter+json":{source:"iana",compressible:true},"application/alto-directory+json":{source:"iana",compressible:true},"application/alto-endpointcost+json":{source:"iana",compressible:true},"application/alto-endpointcostparams+json":{source:"iana",compressible:true},"application/alto-endpointprop+json":{source:"iana",compressible:true},"application/alto-endpointpropparams+json":{source:"iana",compressible:true},"application/alto-error+json":{source:"iana",compressible:true},"application/alto-networkmap+json":{source:"iana",compressible:true},"application/alto-networkmapfilter+json":{source:"iana",compressible:true},"application/alto-updatestreamcontrol+json":{source:"iana",compressible:true},"application/alto-updatestreamparams+json":{source:"iana",compressible:true},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:true,extensions:["atom"]},"application/atomcat+xml":{source:"iana",compressible:true,extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana",compressible:true,extensions:["atomdeleted"]},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",compressible:true,extensions:["atomsvc"]},"application/atsc-dwd+xml":{source:"iana",compressible:true,extensions:["dwd"]},"application/atsc-dynamic-event-message":{source:"iana"},"application/atsc-held+xml":{source:"iana",compressible:true,extensions:["held"]},"application/atsc-rdt+json":{source:"iana",compressible:true},"application/atsc-rsat+xml":{source:"iana",compressible:true,extensions:["rsat"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana",compressible:true},"application/bacnet-xdd+zip":{source:"iana",compressible:false},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:false,extensions:["bdoc"]},"application/beep+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/calendar+json":{source:"iana",compressible:true},"application/calendar+xml":{source:"iana",compressible:true,extensions:["xcs"]},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/captive+json":{source:"iana",compressible:true},"application/cbor":{source:"iana"},"application/cbor-seq":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana",compressible:true},"application/ccxml+xml":{source:"iana",compressible:true,extensions:["ccxml"]},"application/cdfx+xml":{source:"iana",compressible:true,extensions:["cdfx"]},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana",compressible:true},"application/cellml+xml":{source:"iana",compressible:true},"application/cfw":{source:"iana"},"application/clr":{source:"iana"},"application/clue+xml":{source:"iana",compressible:true},"application/clue_info+xml":{source:"iana",compressible:true},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana",compressible:true},"application/coap-group+json":{source:"iana",compressible:true},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana",compressible:true},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana",compressible:true},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana",compressible:true},"application/cstadata+xml":{source:"iana",compressible:true},"application/csvm+json":{source:"iana",compressible:true},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cwt":{source:"iana"},"application/cybercash":{source:"iana"},"application/dart":{compressible:true},"application/dash+xml":{source:"iana",compressible:true,extensions:["mpd"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",compressible:true,extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana",compressible:true},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:true},"application/dicom+xml":{source:"iana",compressible:true},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/dns+json":{source:"iana",compressible:true},"application/dns-message":{source:"iana"},"application/docbook+xml":{source:"apache",compressible:true,extensions:["dbk"]},"application/dots+cbor":{source:"iana"},"application/dskpp+xml":{source:"iana",compressible:true},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",compressible:true,extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:true,extensions:["es","ecma"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:false},"application/edifact":{source:"iana",compressible:false},"application/efi":{source:"iana"},"application/elm+json":{source:"iana",charset:"UTF-8",compressible:true},"application/elm+xml":{source:"iana",compressible:true},"application/emergencycalldata.cap+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/emergencycalldata.comment+xml":{source:"iana",compressible:true},"application/emergencycalldata.control+xml":{source:"iana",compressible:true},"application/emergencycalldata.deviceinfo+xml":{source:"iana",compressible:true},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana",compressible:true},"application/emergencycalldata.serviceinfo+xml":{source:"iana",compressible:true},"application/emergencycalldata.subscriberinfo+xml":{source:"iana",compressible:true},"application/emergencycalldata.veds+xml":{source:"iana",compressible:true},"application/emma+xml":{source:"iana",compressible:true,extensions:["emma"]},"application/emotionml+xml":{source:"iana",compressible:true,extensions:["emotionml"]},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana",compressible:true},"application/epub+zip":{source:"iana",compressible:false,extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/expect-ct-report+json":{source:"iana",compressible:true},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana",compressible:true,extensions:["fdt"]},"application/fhir+json":{source:"iana",charset:"UTF-8",compressible:true},"application/fhir+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/fido.trusted-apps+json":{compressible:true},"application/fits":{source:"iana"},"application/flexfec":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:false},"application/framework-attributes+xml":{source:"iana",compressible:true},"application/geo+json":{source:"iana",compressible:true,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geopackage+sqlite3":{source:"iana"},"application/geoxacml+xml":{source:"iana",compressible:true},"application/gltf-buffer":{source:"iana"},"application/gml+xml":{source:"iana",compressible:true,extensions:["gml"]},"application/gpx+xml":{source:"apache",compressible:true,extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:false,extensions:["gz"]},"application/h224":{source:"iana"},"application/held+xml":{source:"iana",compressible:true},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana",compressible:true},"application/ibe-pkg-reply+xml":{source:"iana",compressible:true},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",compressible:true,extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana",compressible:true,extensions:["its"]},"application/java-archive":{source:"apache",compressible:false,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:false,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:false,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:true,extensions:["js","mjs"]},"application/jf2feed+json":{source:"iana",compressible:true},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:true},"application/jrd+json":{source:"iana",compressible:true},"application/jscalendar+json":{source:"iana",compressible:true},"application/json":{source:"iana",charset:"UTF-8",compressible:true,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:true},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:true,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:true},"application/jwk-set+json":{source:"iana",compressible:true},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana",compressible:true},"application/kpml-response+xml":{source:"iana",compressible:true},"application/ld+json":{source:"iana",compressible:true,extensions:["jsonld"]},"application/lgr+xml":{source:"iana",compressible:true,extensions:["lgr"]},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana",compressible:true},"application/lost+xml":{source:"iana",compressible:true,extensions:["lostxml"]},"application/lostsync+xml":{source:"iana",compressible:true},"application/lpf+zip":{source:"iana",compressible:false},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",compressible:true,extensions:["mads"]},"application/manifest+json":{charset:"UTF-8",compressible:true,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",compressible:true,extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",compressible:true,extensions:["mathml"]},"application/mathml-content+xml":{source:"iana",compressible:true},"application/mathml-presentation+xml":{source:"iana",compressible:true},"application/mbms-associated-procedure-description+xml":{source:"iana",compressible:true},"application/mbms-deregister+xml":{source:"iana",compressible:true},"application/mbms-envelope+xml":{source:"iana",compressible:true},"application/mbms-msk+xml":{source:"iana",compressible:true},"application/mbms-msk-response+xml":{source:"iana",compressible:true},"application/mbms-protection-description+xml":{source:"iana",compressible:true},"application/mbms-reception-report+xml":{source:"iana",compressible:true},"application/mbms-register+xml":{source:"iana",compressible:true},"application/mbms-register-response+xml":{source:"iana",compressible:true},"application/mbms-schedule+xml":{source:"iana",compressible:true},"application/mbms-user-service-description+xml":{source:"iana",compressible:true},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana",compressible:true},"application/media_control+xml":{source:"iana",compressible:true},"application/mediaservercontrol+xml":{source:"iana",compressible:true,extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:true},"application/metalink+xml":{source:"apache",compressible:true,extensions:["metalink"]},"application/metalink4+xml":{source:"iana",compressible:true,extensions:["meta4"]},"application/mets+xml":{source:"iana",compressible:true,extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mipc":{source:"iana"},"application/mmt-aei+xml":{source:"iana",compressible:true,extensions:["maei"]},"application/mmt-usd+xml":{source:"iana",compressible:true,extensions:["musd"]},"application/mods+xml":{source:"iana",compressible:true,extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana",compressible:true},"application/mrb-publish+xml":{source:"iana",compressible:true},"application/msc-ivr+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/msc-mixer+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/msword":{source:"iana",compressible:false,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:true},"application/multipart-core":{source:"iana"},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana",extensions:["nq"]},"application/n-triples":{source:"iana",extensions:["nt"]},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana",charset:"US-ASCII"},"application/news-groupinfo":{source:"iana",charset:"US-ASCII"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana",compressible:true},"application/node":{source:"iana",extensions:["cjs"]},"application/nss":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:false,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odm+xml":{source:"iana",compressible:true},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",compressible:true,extensions:["opf"]},"application/ogg":{source:"iana",compressible:false,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",compressible:true,extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{source:"iana",compressible:true},"application/oscore":{source:"iana"},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p2p-overlay+xml":{source:"iana",compressible:true,extensions:["relo"]},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",compressible:true,extensions:["xer"]},"application/pdf":{source:"iana",compressible:false,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pem-certificate-chain":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:false,extensions:["pgp"]},"application/pgp-keys":{source:"iana"},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/pidf-diff+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkcs8-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",compressible:true,extensions:["pls"]},"application/poc-settings+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/postscript":{source:"iana",compressible:true,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:true},"application/problem+json":{source:"iana",compressible:true},"application/problem+xml":{source:"iana",compressible:true},"application/provenance+xml":{source:"iana",compressible:true,extensions:["provx"]},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.cyn":{source:"iana",charset:"7-BIT"},"application/prs.hpub+zip":{source:"iana",compressible:false},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana",compressible:true},"application/pskc+xml":{source:"iana",compressible:true,extensions:["pskcxml"]},"application/pvd+json":{source:"iana",compressible:true},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:true,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:true},"application/rdf+xml":{source:"iana",compressible:true,extensions:["rdf","owl"]},"application/reginfo+xml":{source:"iana",compressible:true,extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:true},"application/resource-lists+xml":{source:"iana",compressible:true,extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",compressible:true,extensions:["rld"]},"application/rfc+xml":{source:"iana",compressible:true},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana",compressible:true},"application/rls-services+xml":{source:"iana",compressible:true,extensions:["rs"]},"application/route-apd+xml":{source:"iana",compressible:true,extensions:["rapd"]},"application/route-s-tsid+xml":{source:"iana",compressible:true,extensions:["sls"]},"application/route-usd+xml":{source:"iana",compressible:true,extensions:["rusd"]},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",compressible:true,extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:true,extensions:["rss"]},"application/rtf":{source:"iana",compressible:true,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana",compressible:true},"application/samlmetadata+xml":{source:"iana",compressible:true},"application/sarif+json":{source:"iana",compressible:true},"application/sbe":{source:"iana"},"application/sbml+xml":{source:"iana",compressible:true,extensions:["sbml"]},"application/scaip+xml":{source:"iana",compressible:true},"application/scim+json":{source:"iana",compressible:true},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/secevent+jwt":{source:"iana"},"application/senml+cbor":{source:"iana"},"application/senml+json":{source:"iana",compressible:true},"application/senml+xml":{source:"iana",compressible:true,extensions:["senmlx"]},"application/senml-etch+cbor":{source:"iana"},"application/senml-etch+json":{source:"iana",compressible:true},"application/senml-exi":{source:"iana"},"application/sensml+cbor":{source:"iana"},"application/sensml+json":{source:"iana",compressible:true},"application/sensml+xml":{source:"iana",compressible:true,extensions:["sensmlx"]},"application/sensml-exi":{source:"iana"},"application/sep+xml":{source:"iana",compressible:true},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",compressible:true,extensions:["shf"]},"application/sieve":{source:"iana",extensions:["siv","sieve"]},"application/simple-filter+xml":{source:"iana",compressible:true},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/sipc":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",compressible:true,extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:true},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",compressible:true,extensions:["srx"]},"application/spirits-event+xml":{source:"iana",compressible:true},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",compressible:true,extensions:["grxml"]},"application/sru+xml":{source:"iana",compressible:true,extensions:["sru"]},"application/ssdl+xml":{source:"apache",compressible:true,extensions:["ssdl"]},"application/ssml+xml":{source:"iana",compressible:true,extensions:["ssml"]},"application/stix+json":{source:"iana",compressible:true},"application/swid+xml":{source:"iana",compressible:true,extensions:["swidtag"]},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:true},"application/taxii+json":{source:"iana",compressible:true},"application/td+json":{source:"iana",compressible:true},"application/tei+xml":{source:"iana",compressible:true,extensions:["tei","teicorpus"]},"application/tetra_isi":{source:"iana"},"application/thraud+xml":{source:"iana",compressible:true,extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tlsrpt+gzip":{source:"iana"},"application/tlsrpt+json":{source:"iana",compressible:true},"application/tnauthlist":{source:"iana"},"application/toml":{compressible:true,extensions:["toml"]},"application/trickle-ice-sdpfrag":{source:"iana"},"application/trig":{source:"iana"},"application/ttml+xml":{source:"iana",compressible:true,extensions:["ttml"]},"application/tve-trigger":{source:"iana"},"application/tzif":{source:"iana"},"application/tzif-leap":{source:"iana"},"application/ubjson":{compressible:false,extensions:["ubj"]},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana",compressible:true},"application/urc-ressheet+xml":{source:"iana",compressible:true,extensions:["rsheet"]},"application/urc-targetdesc+xml":{source:"iana",compressible:true,extensions:["td"]},"application/urc-uisocketdesc+xml":{source:"iana",compressible:true},"application/vcard+json":{source:"iana",compressible:true},"application/vcard+xml":{source:"iana",compressible:true},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.1000minds.decision-model+xml":{source:"iana",compressible:true,extensions:["1km"]},"application/vnd.3gpp-prose+xml":{source:"iana",compressible:true},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana",compressible:true},"application/vnd.3gpp-v2x-local-service-information":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana",compressible:true},"application/vnd.3gpp.bsf+xml":{source:"iana",compressible:true},"application/vnd.3gpp.gmop+xml":{source:"iana",compressible:true},"application/vnd.3gpp.interworking-data":{source:"iana"},"application/vnd.3gpp.mc-signalling-ear":{source:"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcdata-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcdata-payload":{source:"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcdata-signalling":{source:"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcdata-user-profile+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-floor-request+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-location-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-service-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-signed+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-ue-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcptt-user-profile+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-location-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-service-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-ue-config+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mcvideo-user-profile+xml":{source:"iana",compressible:true},"application/vnd.3gpp.mid-call+xml":{source:"iana",compressible:true},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.sms+xml":{source:"iana",compressible:true},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana",compressible:true},"application/vnd.3gpp.srvcc-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana",compressible:true},"application/vnd.3gpp.ussd+xml":{source:"iana",compressible:true},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana",compressible:true},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3lightssoftware.imagescal":{source:"iana"},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",compressible:false,extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",compressible:true,extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.afpc.afplinedata":{source:"iana"},"application/vnd.afpc.afplinedata-pagedef":{source:"iana"},"application/vnd.afpc.cmoca-cmresource":{source:"iana"},"application/vnd.afpc.foca-charset":{source:"iana"},"application/vnd.afpc.foca-codedfont":{source:"iana"},"application/vnd.afpc.foca-codepage":{source:"iana"},"application/vnd.afpc.modca":{source:"iana"},"application/vnd.afpc.modca-cmtable":{source:"iana"},"application/vnd.afpc.modca-formdef":{source:"iana"},"application/vnd.afpc.modca-mediummap":{source:"iana"},"application/vnd.afpc.modca-objectcontainer":{source:"iana"},"application/vnd.afpc.modca-overlay":{source:"iana"},"application/vnd.afpc.modca-pagesegment":{source:"iana"},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:true},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi8-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana",compressible:true},"application/vnd.android.ota":{source:"iana"},"application/vnd.android.package-archive":{source:"apache",compressible:false,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:true},"application/vnd.aplextor.warrp+json":{source:"iana",compressible:true},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:true},"application/vnd.apple.installer+xml":{source:"iana",compressible:true,extensions:["mpkg"]},"application/vnd.apple.keynote":{source:"iana",extensions:["key"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.numbers":{source:"iana",extensions:["numbers"]},"application/vnd.apple.pages":{source:"iana",extensions:["pages"]},"application/vnd.apple.pkpass":{compressible:false,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artisan+json":{source:"iana",compressible:true},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:true},"application/vnd.avistar+xml":{source:"iana",compressible:true},"application/vnd.balsamiq.bmml+xml":{source:"iana",compressible:true,extensions:["bmml"]},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.banana-accounting":{source:"iana"},"application/vnd.bbf.usp.error":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:true},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:true},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana",compressible:true},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.bpf":{source:"iana"},"application/vnd.bpf3":{source:"iana"},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.byu.uapi+json":{source:"iana",compressible:true},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:true},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",compressible:true,extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.ciedi":{source:"iana"},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana",compressible:true,extensions:["csl"]},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:true},"application/vnd.collection.doc+json":{source:"iana",compressible:true},"application/vnd.collection.next+json":{source:"iana",compressible:true},"application/vnd.comicbook+zip":{source:"iana",compressible:false},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:true},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",compressible:true,extensions:["wbs"]},"application/vnd.cryptii.pipe+json":{source:"iana",compressible:true},"application/vnd.crypto-shade-file":{source:"iana"},"application/vnd.cryptomator.encrypted":{source:"iana"},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana",compressible:true},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana",compressible:true},"application/vnd.cybank":{source:"iana"},"application/vnd.cyclonedx+json":{source:"iana",compressible:true},"application/vnd.cyclonedx+xml":{source:"iana",compressible:true},"application/vnd.d2l.coursepackage1p0+zip":{source:"iana",compressible:false},"application/vnd.d3m-dataset":{source:"iana"},"application/vnd.d3m-problem":{source:"iana"},"application/vnd.dart":{source:"iana",compressible:true,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:true},"application/vnd.dataresource+json":{source:"iana",compressible:true},"application/vnd.dbf":{source:"iana",extensions:["dbf"]},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",compressible:true,extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume.movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana",compressible:true},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:true},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:true},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbisl+xml":{source:"iana",compressible:true},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana",compressible:true},"application/vnd.dvb.notif-container+xml":{source:"iana",compressible:true},"application/vnd.dvb.notif-generic+xml":{source:"iana",compressible:true},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana",compressible:true},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana",compressible:true},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana",compressible:true},"application/vnd.dvb.notif-init+xml":{source:"iana",compressible:true},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana",compressible:true},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana",compressible:true},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana",compressible:false},"application/vnd.eszigno3+xml":{source:"iana",compressible:true,extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana",compressible:true},"application/vnd.etsi.asic-e+zip":{source:"iana",compressible:false},"application/vnd.etsi.asic-s+zip":{source:"iana",compressible:false},"application/vnd.etsi.cug+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvcommand+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvprofile+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvservice+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvsync+xml":{source:"iana",compressible:true},"application/vnd.etsi.iptvueprofile+xml":{source:"iana",compressible:true},"application/vnd.etsi.mcid+xml":{source:"iana",compressible:true},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana",compressible:true},"application/vnd.etsi.pstn+xml":{source:"iana",compressible:true},"application/vnd.etsi.sci+xml":{source:"iana",compressible:true},"application/vnd.etsi.simservs+xml":{source:"iana",compressible:true},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana",compressible:true},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.exstream-empower+zip":{source:"iana",compressible:false},"application/vnd.exstream-package":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.ficlab.flb+zip":{source:"iana",compressible:false},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.futoin+cbor":{source:"iana"},"application/vnd.futoin+json":{source:"iana",compressible:true},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.gentics.grd+json":{source:"iana",compressible:true},"application/vnd.geo+json":{source:"iana",compressible:true},"application/vnd.geocube+xml":{source:"iana",compressible:true},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.slides":{source:"iana"},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:false,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:false,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:false,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:true,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:false,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana",compressible:true},"application/vnd.gov.sk.e-form+zip":{source:"iana",compressible:false},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana",compressible:true},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:true},"application/vnd.hal+xml":{source:"iana",compressible:true,extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",compressible:true,extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:true},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:true},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper+json":{source:"iana",compressible:true},"application/vnd.hyper-item+json":{source:"iana",compressible:true},"application/vnd.hyperdrive+json":{source:"iana",compressible:true},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana",compressible:false},"application/vnd.imagemeter.image+zip":{source:"iana",compressible:false},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:true},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:true},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:true},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:true},"application/vnd.informedcontrol.rms+xml":{source:"iana",compressible:true},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana",compressible:true},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana",compressible:true},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana",compressible:true},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana",compressible:true},"application/vnd.iptc.g2.newsitem+xml":{source:"iana",compressible:true},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana",compressible:true},"application/vnd.iptc.g2.packageitem+xml":{source:"iana",compressible:true},"application/vnd.iptc.g2.planningitem+xml":{source:"iana",compressible:true},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",compressible:true,extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.iso11783-10+zip":{source:"iana",compressible:false},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las":{source:"iana"},"application/vnd.las.las+json":{source:"iana",compressible:true},"application/vnd.las.las+xml":{source:"iana",compressible:true,extensions:["lasxml"]},"application/vnd.laszip":{source:"iana"},"application/vnd.leap+json":{source:"iana",compressible:true},"application/vnd.liberty-request+xml":{source:"iana",compressible:true},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",compressible:true,extensions:["lbe"]},"application/vnd.logipipe.circuit+zip":{source:"iana",compressible:false},"application/vnd.loom":{source:"iana"},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana"},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana",compressible:true},"application/vnd.marlin.drm.conftoken+xml":{source:"iana",compressible:true},"application/vnd.marlin.drm.license+xml":{source:"iana",compressible:true},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:true},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:true},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:true},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:true,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:false,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:true,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana",compressible:true},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:true},"application/vnd.ms-outlook":{compressible:false,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana",compressible:true},"application/vnd.ms-powerpoint":{source:"iana",compressible:false,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana",compressible:true},"application/vnd.ms-printing.printticket+xml":{source:"apache",compressible:true},"application/vnd.ms-printschematicket+xml":{source:"iana",compressible:true},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:false,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:true},"application/vnd.nebumind.line":{source:"iana"},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nimn":{source:"iana"},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana",compressible:true},"application/vnd.nokia.iptv.config+xml":{source:"iana",compressible:true},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana",compressible:true},"application/vnd.nokia.landmarkcollection+xml":{source:"iana",compressible:true},"application/vnd.nokia.n-gage.ac+xml":{source:"iana",compressible:true,extensions:["ac"]},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana",compressible:true},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:false,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:false,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:false,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:false,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oci.image.manifest.v1+json":{source:"iana",compressible:true},"application/vnd.oftn.l10n+json":{source:"iana",compressible:true},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana",compressible:true},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana",compressible:true},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana",compressible:true},"application/vnd.oipf.dae.xhtml+xml":{source:"iana",compressible:true},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana",compressible:true},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana",compressible:true},"application/vnd.oipf.spdlist+xml":{source:"iana",compressible:true},"application/vnd.oipf.ueprofile+xml":{source:"iana",compressible:true},"application/vnd.oipf.userprofile+xml":{source:"iana",compressible:true},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.imd+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.sprov+xml":{source:"iana",compressible:true},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana",compressible:true},"application/vnd.oma.cab-feature-handler+xml":{source:"iana",compressible:true},"application/vnd.oma.cab-pcc+xml":{source:"iana",compressible:true},"application/vnd.oma.cab-subs-invite+xml":{source:"iana",compressible:true},"application/vnd.oma.cab-user-prefs+xml":{source:"iana",compressible:true},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",compressible:true,extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana",compressible:true},"application/vnd.oma.group-usage-list+xml":{source:"iana",compressible:true},"application/vnd.oma.lwm2m+cbor":{source:"iana"},"application/vnd.oma.lwm2m+json":{source:"iana",compressible:true},"application/vnd.oma.lwm2m+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana",compressible:true},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana",compressible:true},"application/vnd.oma.poc.final-report+xml":{source:"iana",compressible:true},"application/vnd.oma.poc.groups+xml":{source:"iana",compressible:true},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana",compressible:true},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana",compressible:true},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana",compressible:true},"application/vnd.oma.xcap-directory+xml":{source:"iana",compressible:true},"application/vnd.omads-email+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/vnd.omads-file+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/vnd.omads-folder+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana",compressible:true,extensions:["obgx"]},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana",compressible:true,extensions:["osm"]},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:false,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:false,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:false,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana",compressible:true},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana",compressible:true},"application/vnd.oracle.resource+json":{source:"iana",compressible:true},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana",compressible:true},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:true},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos.xml":{source:"iana"},"application/vnd.patentdive":{source:"iana"},"application/vnd.patientecommsdoc":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana",compressible:true},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.psfs":{source:"iana"},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana",compressible:true},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-audit+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-conf+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana",compressible:true},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana",compressible:true},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana",extensions:["rar"]},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",compressible:true,extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:true},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",compressible:true,extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sar":{source:"iana"},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.seis+json":{source:"iana",compressible:true},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shade-save-file":{source:"iana"},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.shootproof+json":{source:"iana",compressible:true},"application/vnd.shopkick+json":{source:"iana",compressible:true},"application/vnd.shp":{source:"iana"},"application/vnd.shx":{source:"iana"},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:true},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.snesdev-page-table":{source:"iana"},"application/vnd.software602.filler.form+xml":{source:"iana",compressible:true,extensions:["fo"]},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",compressible:true,extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite3":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:true,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.sycle+xml":{source:"iana",compressible:true},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",charset:"UTF-8",compressible:true,extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",charset:"UTF-8",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",charset:"UTF-8",compressible:true,extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana",charset:"UTF-8",compressible:true,extensions:["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana",charset:"UTF-8",compressible:true},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:true},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{source:"iana",compressible:true},"application/vnd.tmd.mediaflex.api+xml":{source:"iana",compressible:true},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",compressible:true,extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:true},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.veryant.thin":{source:"iana"},"application/vnd.ves.encrypted":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",charset:"UTF-8",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.dpp":{source:"iana"},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana",compressible:true},"application/vnd.wv.ssp+xml":{source:"iana",compressible:true},"application/vnd.xacml+json":{source:"iana",compressible:true},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana",compressible:true},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",compressible:true,extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",compressible:true,extensions:["zaz"]},"application/voicexml+xml":{source:"iana",compressible:true,extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:true},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{compressible:true,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana",compressible:true},"application/webpush-options+json":{source:"iana",compressible:true},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",compressible:true,extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",compressible:true,extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:false,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:false,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:false,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:false,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:false,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:false},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",compressible:true,extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",compressible:true,extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",compressible:true,extensions:["res"]},"application/x-dvi":{source:"apache",compressible:false,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:true,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:false,extensions:["jnlp"]},"application/x-javascript":{compressible:true},"application/x-keepass2":{extensions:["kdbx"]},"application/x-latex":{source:"apache",compressible:false,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:false},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:true,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:false,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-pki-message":{source:"iana"},"application/x-rar-compressed":{source:"apache",compressible:false,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:true,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:false,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:false,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:true,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:true,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:true,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:true,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:true,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:false,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:true,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:true,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:true,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:true,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:true},"application/x-x509-ca-cert":{source:"iana",extensions:["der","crt","pem"]},"application/x-x509-ca-ra-cert":{source:"iana"},"application/x-x509-next-ca-cert":{source:"iana"},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",compressible:true,extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:false,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana",compressible:true},"application/xaml+xml":{source:"apache",compressible:true,extensions:["xaml"]},"application/xcap-att+xml":{source:"iana",compressible:true,extensions:["xav"]},"application/xcap-caps+xml":{source:"iana",compressible:true,extensions:["xca"]},"application/xcap-diff+xml":{source:"iana",compressible:true,extensions:["xdf"]},"application/xcap-el+xml":{source:"iana",compressible:true,extensions:["xel"]},"application/xcap-error+xml":{source:"iana",compressible:true},"application/xcap-ns+xml":{source:"iana",compressible:true,extensions:["xns"]},"application/xcon-conference-info+xml":{source:"iana",compressible:true},"application/xcon-conference-info-diff+xml":{source:"iana",compressible:true},"application/xenc+xml":{source:"iana",compressible:true,extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:true,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache",compressible:true},"application/xliff+xml":{source:"iana",compressible:true,extensions:["xlf"]},"application/xml":{source:"iana",compressible:true,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:true,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana",compressible:true},"application/xmpp+xml":{source:"iana",compressible:true},"application/xop+xml":{source:"iana",compressible:true,extensions:["xop"]},"application/xproc+xml":{source:"apache",compressible:true,extensions:["xpl"]},"application/xslt+xml":{source:"iana",compressible:true,extensions:["xsl","xslt"]},"application/xspf+xml":{source:"apache",compressible:true,extensions:["xspf"]},"application/xv+xml":{source:"iana",compressible:true,extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:true},"application/yang-data+xml":{source:"iana",compressible:true},"application/yang-patch+json":{source:"iana",compressible:true},"application/yang-patch+xml":{source:"iana",compressible:true},"application/yin+xml":{source:"iana",compressible:true,extensions:["yin"]},"application/zip":{source:"iana",compressible:false,extensions:["zip"]},"application/zlib":{source:"iana"},"application/zstd":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana",compressible:false,extensions:["3gpp"]},"audio/3gpp2":{source:"iana"},"audio/aac":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana",extensions:["amr"]},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:false,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/flexfec":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:false},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp1200":{source:"iana"},"audio/melp2400":{source:"iana"},"audio/melp600":{source:"iana"},"audio/mhas":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana",extensions:["mxmf"]},"audio/mp3":{compressible:false,extensions:["mp3"]},"audio/mp4":{source:"iana",compressible:false,extensions:["m4a","mp4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:false,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:false,extensions:["oga","ogg","spx","opus"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/scip":{source:"iana"},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sofa":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tetra_acelp":{source:"iana"},"audio/tetra_acelp_bb":{source:"iana"},"audio/tone":{source:"iana"},"audio/tsvcis":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/usac":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dts.uhd":{source:"iana"},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:false},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:false},"audio/vorbis":{source:"iana",compressible:false},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:false,extensions:["wav"]},"audio/wave":{compressible:false,extensions:["wav"]},"audio/webm":{source:"apache",compressible:false,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:false,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:false,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:true,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",compressible:true,extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff2":{source:"iana",extensions:["woff2"]},"image/aces":{source:"iana",extensions:["exr"]},"image/apng":{compressible:false,extensions:["apng"]},"image/avci":{source:"iana"},"image/avcs":{source:"iana"},"image/avif":{source:"iana",compressible:false,extensions:["avif"]},"image/bmp":{source:"iana",compressible:true,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana",extensions:["drle"]},"image/emf":{source:"iana",extensions:["emf"]},"image/fits":{source:"iana",extensions:["fits"]},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:false,extensions:["gif"]},"image/heic":{source:"iana",extensions:["heic"]},"image/heic-sequence":{source:"iana",extensions:["heics"]},"image/heif":{source:"iana",extensions:["heif"]},"image/heif-sequence":{source:"iana",extensions:["heifs"]},"image/hej2k":{source:"iana",extensions:["hej2"]},"image/hsj2":{source:"iana",extensions:["hsj2"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana",extensions:["jls"]},"image/jp2":{source:"iana",compressible:false,extensions:["jp2","jpg2"]},"image/jpeg":{source:"iana",compressible:false,extensions:["jpeg","jpg","jpe"]},"image/jph":{source:"iana",extensions:["jph"]},"image/jphc":{source:"iana",extensions:["jhc"]},"image/jpm":{source:"iana",compressible:false,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:false,extensions:["jpx","jpf"]},"image/jxr":{source:"iana",extensions:["jxr"]},"image/jxra":{source:"iana",extensions:["jxra"]},"image/jxrs":{source:"iana",extensions:["jxrs"]},"image/jxs":{source:"iana",extensions:["jxs"]},"image/jxsc":{source:"iana",extensions:["jxsc"]},"image/jxsi":{source:"iana",extensions:["jxsi"]},"image/jxss":{source:"iana",extensions:["jxss"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/ktx2":{source:"iana",extensions:["ktx2"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:false},"image/png":{source:"iana",compressible:false,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana",extensions:["pti"]},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:true,extensions:["svg","svgz"]},"image/t38":{source:"iana",extensions:["t38"]},"image/tiff":{source:"iana",compressible:false,extensions:["tif","tiff"]},"image/tiff-fx":{source:"iana",extensions:["tfx"]},"image/vnd.adobe.photoshop":{source:"iana",compressible:true,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana",extensions:["azv"]},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana",extensions:["ico"]},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-dds":{extensions:["dds"]},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.pco.b16":{source:"iana",extensions:["b16"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana",extensions:["tap"]},"image/vnd.valve.source.texture":{source:"iana",extensions:["vtf"]},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana",extensions:["pcx"]},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana",extensions:["wmf"]},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:true,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:true,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:false},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["u8msg"]},"message/global-delivery-status":{source:"iana",extensions:["u8dsn"]},"message/global-disposition-notification":{source:"iana",extensions:["u8mdn"]},"message/global-headers":{source:"iana",extensions:["u8hdr"]},"message/http":{source:"iana",compressible:false},"message/imdn+xml":{source:"iana",compressible:true},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:false},"message/rfc822":{source:"iana",compressible:true,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/3mf":{source:"iana",extensions:["3mf"]},"model/e57":{source:"iana"},"model/gltf+json":{source:"iana",compressible:true,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:true,extensions:["glb"]},"model/iges":{source:"iana",compressible:false,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:false,extensions:["msh","mesh","silo"]},"model/mtl":{source:"iana",extensions:["mtl"]},"model/obj":{source:"iana",extensions:["obj"]},"model/stl":{source:"iana",extensions:["stl"]},"model/vnd.collada+xml":{source:"iana",compressible:true,extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana",compressible:true},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana",extensions:["ogex"]},"model/vnd.parasolid.transmit.binary":{source:"iana",extensions:["x_b"]},"model/vnd.parasolid.transmit.text":{source:"iana",extensions:["x_t"]},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.sap.vds":{source:"iana",extensions:["vds"]},"model/vnd.usdz+zip":{source:"iana",compressible:false,extensions:["usdz"]},"model/vnd.valve.source.compiled-map":{source:"iana",extensions:["bsp"]},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:false,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:false,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana",extensions:["x3db"]},"model/x3d+vrml":{source:"apache",compressible:false,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:true,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana",extensions:["x3dv"]},"multipart/alternative":{source:"iana",compressible:false},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:false},"multipart/form-data":{source:"iana",compressible:false},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana"},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:false},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:false},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:true,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:true},"text/cmd":{compressible:true},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/cql":{source:"iana"},"text/cql-expression":{source:"iana"},"text/cql-identifier":{source:"iana"},"text/css":{source:"iana",charset:"UTF-8",compressible:true,extensions:["css"]},"text/csv":{source:"iana",compressible:true,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fhirpath":{source:"iana"},"text/flexfec":{source:"iana"},"text/fwdred":{source:"iana"},"text/gff3":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:true,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:true},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:true,extensions:["jsx"]},"text/less":{compressible:true,extensions:["less"]},"text/markdown":{source:"iana",compressible:true,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mdx":{compressible:true,extensions:["mdx"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",charset:"UTF-8",compressible:true,extensions:["n3"]},"text/parameters":{source:"iana",charset:"UTF-8"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:true,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana",charset:"UTF-8"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:true,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:true,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shaclc":{source:"iana"},"text/shex":{extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/spdx":{source:"iana",extensions:["spdx"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:true,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",charset:"UTF-8",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:true,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:true,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana",charset:"UTF-8"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana",charset:"UTF-8"},"text/vnd.ficlab.flt":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.gml":{source:"iana"},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.hans":{source:"iana"},"text/vnd.hgl":{source:"iana"},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.senx.warpscript":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sosi":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",charset:"UTF-8",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana",charset:"UTF-8"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{source:"iana",charset:"UTF-8",compressible:true,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:true},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:true},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:true,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:true,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:true,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:true,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:true,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"iana"},"video/3gpp":{source:"iana",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"iana"},"video/3gpp2":{source:"iana",extensions:["3g2"]},"video/av1":{source:"iana"},"video/bmpeg":{source:"iana"},"video/bt656":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/ffv1":{source:"iana"},"video/flexfec":{source:"iana"},"video/h261":{source:"iana",extensions:["h261"]},"video/h263":{source:"iana",extensions:["h263"]},"video/h263-1998":{source:"iana"},"video/h263-2000":{source:"iana"},"video/h264":{source:"iana",extensions:["h264"]},"video/h264-rcdo":{source:"iana"},"video/h264-svc":{source:"iana"},"video/h265":{source:"iana"},"video/iso.segment":{source:"iana",extensions:["m4s"]},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg2000":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/mj2":{source:"iana",extensions:["mj2","mjp2"]},"video/mp1s":{source:"iana"},"video/mp2p":{source:"iana"},"video/mp2t":{source:"iana",extensions:["ts"]},"video/mp4":{source:"iana",compressible:false,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:false,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:false,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:false,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm128":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/scip":{source:"iana"},"video/smpte291":{source:"iana"},"video/smpte292m":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc1":{source:"iana"},"video/vc2":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.1dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.1dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.2dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.2dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg2":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mp4vr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg1":{source:"iana"},"video/vnd.sealed.mpeg4":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp4":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vnd.youtube.yt":{source:"iana"},"video/vp8":{source:"iana"},"video/webm":{source:"apache",compressible:false,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:false,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:false,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:false,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:true},"x-shader/x-vertex":{compressible:true}}},{}],285:[function(require,module,exports){"use strict";const Hapi=require("@hapi/hapi");const init=async()=>{const server=Hapi.server({port:3e3,host:"localhost"});await server.start()};process.on("unhandledRejection",err=>{console.log(err);process.exit(1)});init();setTimeout(()=>{process.exit()},500)},{"@hapi/hapi":68}]},{},[285]);
